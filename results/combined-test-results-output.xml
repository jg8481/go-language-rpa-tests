<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.0 (Python 3.12.3 on linux)" generated="2024-05-06T04:50:20.591374" rpa="false" schemaversion="5">
<suite id="s1" name="Generic-Automation" source="/tests/generic-automation.robot">
<test id="s1-t1" name="FUNCTIONAL TESTS SETUP : Start the Prism API Mock Server for the Go Httpstat functional tests and Vegeta Load Tests." line="22">
<kw name="Automation Section For Slack Notifications">
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-05-06T04:50:20.670875" level="INFO">${AUTOMATION_SECTION_NAME} = FUNCTIONAL TESTS SETUP</msg>
<arg>${AUTOMATION_SECTION_NAME}</arg>
<arg>${AUTOMATION_SECTION}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-05-06T04:50:20.669850" elapsed="0.001099"/>
</kw>
<arg>FUNCTIONAL TESTS SETUP</arg>
<status status="PASS" start="2024-05-06T04:50:20.668631" elapsed="0.002418"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T04:50:20.671726" elapsed="0.000375"/>
</kw>
<status status="PASS" start="2024-05-06T04:50:20.671343" elapsed="0.000905"/>
</kw>
<kw name="Start Prism API Mock Server">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T04:50:20.673708" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T04:50:20.672901" elapsed="0.000929"/>
</kw>
<kw name="Download And Install Prism" owner="PrismMockServerLibrary">
<doc>Downloads and installs the Prism tool.</doc>
<status status="PASS" start="2024-05-06T04:50:20.674063" elapsed="4.422974"/>
</kw>
<kw name="Start Prism Mock Server" owner="PrismMockServerLibrary">
<doc>Start the Prism tool and create a mock API server.</doc>
<status status="PASS" start="2024-05-06T04:50:25.097262" elapsed="5.006450"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Prism Mock Server Started</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T04:50:30.103948" elapsed="0.000243"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Check the Mock API log found in... ${EXECDIR}/resources/api-application.log</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T04:50:30.104311" elapsed="0.000376"/>
</kw>
<status status="PASS" start="2024-05-06T04:50:20.672577" elapsed="9.432221"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T04:50:30.105657" elapsed="0.000209"/>
</kw>
<status status="PASS" start="2024-05-06T04:50:30.105137" elapsed="0.000800"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-06T04:50:30.106857" elapsed="0.000300"/>
</kw>
<status status="PASS" start="2024-05-06T04:50:30.106256" elapsed="0.001047"/>
</kw>
<tag>Run_All_Tests</tag>
<tag>Tests_Setup</tag>
<status status="PASS" start="2024-05-06T04:50:20.667662" elapsed="9.439949"/>
</test>
<test id="s1-t2" name="CHAOS AND LOAD TESTS SETUP : Start the Toxiproxy TCP Chaos Proxy." line="29">
<kw name="Automation Section For Slack Notifications">
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-05-06T04:50:30.109732" level="INFO">${AUTOMATION_SECTION_NAME} = CHAOS AND LOAD TESTS SETUP</msg>
<arg>${AUTOMATION_SECTION_NAME}</arg>
<arg>${AUTOMATION_SECTION}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-05-06T04:50:30.109322" elapsed="0.000475"/>
</kw>
<arg>CHAOS AND LOAD TESTS SETUP</arg>
<status status="PASS" start="2024-05-06T04:50:30.108931" elapsed="0.000939"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T04:50:30.110581" elapsed="0.000238"/>
</kw>
<status status="PASS" start="2024-05-06T04:50:30.110088" elapsed="0.000803"/>
</kw>
<kw name="Start Toxiproxy TCP Proxy">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T04:50:30.113143" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/toxiproxy.log"&gt;/tests/resources/toxiproxy.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/toxiproxy.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T04:50:30.111503" elapsed="0.001846"/>
</kw>
<kw name="Start Toxiproxy Server" owner="ToxiproxyChaosTestLibrary">
<doc>Start the Toxiproxy server.</doc>
<status status="PASS" start="2024-05-06T04:50:30.113661" elapsed="5.005013"/>
</kw>
<kw name="Create TCP Chaos Proxy" owner="ToxiproxyChaosTestLibrary">
<doc>Create a TCP Chaos Proxy for the Vegeta load tests.</doc>
<status status="PASS" start="2024-05-06T04:50:35.118894" elapsed="5.003739"/>
</kw>
<kw name="Add Limited Bandwidth Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Limited Bandwidth Toxic to the Vegeta load tests. It will limit a connection to a maximum number of kilobytes per second.</doc>
<status status="PASS" start="2024-05-06T04:50:40.122878" elapsed="5.003874"/>
</kw>
<kw name="Add Slow Close Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Slow Close Toxic to the Vegeta load tests. It will delay the TCP socket from closing until delay has elapsed.</doc>
<status status="PASS" start="2024-05-06T04:50:45.127107" elapsed="5.005662"/>
</kw>
<kw name="Add Latency Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Latency Toxic to the Vegeta load tests. It will add a delay to all data going through the proxy.</doc>
<status status="PASS" start="2024-05-06T04:50:50.133118" elapsed="5.007452"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Toxiproxy Server Started</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T04:50:55.141623" elapsed="0.001280"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Check the Toxiproxy log found in... ${EXECDIR}/resources/toxiproxy.log</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T04:50:55.143180" elapsed="0.001489"/>
</kw>
<status status="PASS" start="2024-05-06T04:50:30.111184" elapsed="25.036327"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T04:50:55.149249" elapsed="0.000867"/>
</kw>
<status status="PASS" start="2024-05-06T04:50:55.148599" elapsed="0.001627"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-06T04:50:55.153951" elapsed="0.000155"/>
</kw>
<status status="PASS" start="2024-05-06T04:50:55.152903" elapsed="0.001282"/>
</kw>
<tag>Run_All_Tests</tag>
<tag>Tests_Setup</tag>
<status status="PASS" start="2024-05-06T04:50:30.108119" elapsed="25.046201"/>
</test>
<test id="s1-t3" name="MODEL-BASED CHAOS TESTS SETUP : Create a new Graphwalker Path File for the Model-Based Chaos Tests. The Graphwalker Model combines API Functional Test, Chaos Test, and Mutational Fuzz Test strategies." line="36">
<kw name="Automation Section For Slack Notifications">
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-05-06T04:50:55.167074" level="INFO">${AUTOMATION_SECTION_NAME} = MODEL-BASED CHAOS TESTS SETUP</msg>
<arg>${AUTOMATION_SECTION_NAME}</arg>
<arg>${AUTOMATION_SECTION}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-05-06T04:50:55.163962" elapsed="0.005259"/>
</kw>
<arg>MODEL-BASED CHAOS TESTS SETUP</arg>
<status status="PASS" start="2024-05-06T04:50:55.162167" elapsed="0.009488"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T04:50:55.175687" elapsed="0.002903"/>
</kw>
<status status="PASS" start="2024-05-06T04:50:55.172866" elapsed="0.006244"/>
</kw>
<kw name="Create Graphwalker Path File">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T04:50:55.188998" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/GraphwalkerPath.csv"&gt;/tests/resources/GraphwalkerPath.csv&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/GraphwalkerPath.csv</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T04:50:55.182796" elapsed="0.006973"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:50:55.196806" level="INFO">Running command 'java -jar /usr/bin/graphwalker-cli-4.3.2.jar offline --start-element send_get_request_to_user_endpoint --model /tests/resources/GraphwalkerModel.graphml "random(edge_coverage(100))" | jq -r '.currentElementName' &gt;&gt; /tests/resources/GraphwalkerPath.csv'.</msg>
<arg>java -jar /usr/bin/graphwalker-cli-4.3.2.jar offline --start-element send_get_request_to_user_endpoint --model ${EXECDIR}/resources/GraphwalkerModel.graphml "random(edge_coverage(100))" | jq -r '.currentElementName' &gt;&gt; ${EXECDIR}/resources/GraphwalkerPath.csv</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:50:55.192816" elapsed="5.666814"/>
</kw>
<arg>Run</arg>
<arg>java -jar /usr/bin/graphwalker-cli-4.3.2.jar offline --start-element send_get_request_to_user_endpoint --model ${EXECDIR}/resources/GraphwalkerModel.graphml "random(edge_coverage(100))" | jq -r '.currentElementName' &gt;&gt; ${EXECDIR}/resources/GraphwalkerPath.csv</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:50:55.192060" elapsed="5.667686"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Graphwalker Path File Created</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T04:51:00.859942" elapsed="0.000241"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Check the Graphwalker Path File found in... ${EXECDIR}/resources/GraphwalkerPath.csv</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T04:51:00.860391" elapsed="0.000276"/>
</kw>
<status status="PASS" start="2024-05-06T04:50:55.180927" elapsed="5.679824"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T04:51:00.861565" elapsed="0.000226"/>
</kw>
<status status="PASS" start="2024-05-06T04:51:00.861044" elapsed="0.000825"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-06T04:51:00.862686" elapsed="0.000142"/>
</kw>
<status status="PASS" start="2024-05-06T04:51:00.862225" elapsed="0.000680"/>
</kw>
<tag>Run_All_Tests</tag>
<tag>Tests_Setup</tag>
<status status="PASS" start="2024-05-06T04:50:55.155631" elapsed="5.707403"/>
</test>
<test id="s1-t4" name="MODEL-BASED CHAOS TESTS RUNNER : Run the Graphwalker Path File for the Model-Based Chaos Tests. The Graphwalker Model combines API Functional Test, Chaos Test, and Mutational Fuzz Test strategies." line="43">
<kw name="Automation Section For Slack Notifications">
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-05-06T04:51:00.865680" level="INFO">${AUTOMATION_SECTION_NAME} = MODEL-BASED CHAOS TESTS RUNNER</msg>
<arg>${AUTOMATION_SECTION_NAME}</arg>
<arg>${AUTOMATION_SECTION}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-05-06T04:51:00.865306" elapsed="0.000451"/>
</kw>
<arg>MODEL-BASED CHAOS TESTS RUNNER</arg>
<status status="PASS" start="2024-05-06T04:51:00.864885" elapsed="0.000957"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T04:51:00.866498" elapsed="0.000234"/>
</kw>
<status status="PASS" start="2024-05-06T04:51:00.866097" elapsed="0.000770"/>
</kw>
<kw name="Run Graphwalker Model Based Tests">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T04:51:00.868182" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/GraphwalkerPath.csv"&gt;/tests/resources/GraphwalkerPath.csv&lt;/a&gt;'.</msg>
<msg time="2024-05-06T04:51:00.869648" level="INFO">${GRAPHWALKER_CSV_FILE_CONTENTS} = send_get_request_to_user_endpoint
check_api_response_log_files
send_post_request_to_order_endpoint
check_server_log_files
send_post_request_to_order_endpoint_with_fuzzed_data
check_server_log_files
se...</msg>
<var>${GRAPHWALKER_CSV_FILE_CONTENTS}</var>
<arg>${EXECDIR}/resources/${GRAPHWALKER_CSV_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T04:51:00.867724" elapsed="0.001972"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T04:51:00.870133" level="INFO">send_get_request_to_user_endpoint
check_api_response_log_files
send_post_request_to_order_endpoint
check_server_log_files
send_post_request_to_order_endpoint_with_fuzzed_data
check_server_log_files
send_post_request_to_order_endpoint_with_fuzzed_data
check_server_log_files
send_post_request_to_order_endpoint_with_fuzzed_data
check_server_log_files
send_post_request_to_order_endpoint_with_fuzzed_data
check_server_log_files
send_get_request_to_order_endpoint
check_api_response_log_files
send_post_request_to_order_endpoint
check_server_log_files
restart_server
check_server_log_files
restart_server
check_server_log_files
send_post_request_to_order_endpoint_with_fuzzed_data
check_server_log_files
send_get_request_to_pets_endpoint
check_api_response_log_files
add_toxiproxy_latency_then_send_user_get_request
check_api_response_log_files
add_toxiproxy_latency_then_send_user_get_request
check_api_response_log_files
add_toxiproxy_limited_bandwidth_then_send_user_get_request
check_api_response_log_files
add_toxiproxy_latency_then_send_user_get_request
check_api_response_log_files
send_post_request_to_order_endpoint
check_server_log_files
restart_server
check_server_log_files
restart_server
check_server_log_files
send_post_request_to_order_endpoint_with_fuzzed_data
check_server_log_files
send_get_request_to_order_endpoint
check_api_response_log_files
send_post_request_to_order_endpoint
check_server_log_files
send_get_request_to_pets_endpoint
check_api_response_log_files
send_post_request_to_user_endpoint
check_server_log_files
send_get_request_to_order_endpoint
check_api_response_log_files
send_post_request_to_user_endpoint
check_server_log_files
send_post_request_to_user_endpoint_with_fuzzed_data
check_server_log_files
send_get_request_to_order_endpoint
check_api_response_log_files
add_toxiproxy_latency_then_send_user_get_request
check_api_response_log_files
send_post_request_to_order_endpoint
check_server_log_files
send_post_request_to_order_endpoint_with_fuzzed_data
check_server_log_files
send_post_request_to_user_endpoint_with_fuzzed_data
check_server_log_files
send_get_request_to_pets_endpoint
check_api_response_log_files
add_toxiproxy_latency_then_send_user_get_request
check_api_response_log_files
send_post_request_to_order_endpoint
check_server_log_files
send_get_request_to_pets_endpoint
check_api_response_log_files
add_toxiproxy_latency_then_send_user_get_request
check_api_response_log_files
send_post_request_to_user_endpoint
check_server_log_files
send_post_request_to_order_endpoint_with_fuzzed_data
check_server_log_files
send_get_request_to_pets_endpoint
check_api_response_log_files
send_post_request_to_order_endpoint
check_server_log_files
send_post_request_to_order_endpoint_with_fuzzed_data
check_server_log_files
send_post_request_to_user_endpoint_with_fuzzed_data
check_server_log_files
send_get_request_to_pets_endpoint
check_api_response_log_files
add_toxiproxy_slow_close_then_send_user_get_request
check_api_response_log_files
</msg>
<arg>${GRAPHWALKER_CSV_FILE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T04:51:00.869921" elapsed="0.001070"/>
</kw>
<kw name="Get Graphwalker Path Keywords From CSV File">
<kw name="Split To Lines" owner="String">
<msg time="2024-05-06T04:51:00.873007" level="INFO">90 lines returned</msg>
<msg time="2024-05-06T04:51:00.873323" level="INFO">@{GRAPHWALKER_LINES} = [ send_get_request_to_user_endpoint | check_api_response_log_files | send_post_request_to_order_endpoint | check_server_log_files | send_post_request_to_order_endpoint_with_fuzzed_data | check_server_...</msg>
<var>@{GRAPHWALKER_LINES}</var>
<arg>${GRAPHWALKER_CSV_CONTENT}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2024-05-06T04:51:00.871981" elapsed="0.001397"/>
</kw>
<return>
<value>@{GRAPHWALKER_LINES}</value>
<status status="PASS" start="2024-05-06T04:51:00.873626" elapsed="0.000149"/>
</return>
<msg time="2024-05-06T04:51:00.874847" level="INFO">@{GRAPHWALKER_PATH_LINES} = [ send_get_request_to_user_endpoint | check_api_response_log_files | send_post_request_to_order_endpoint | check_server_log_files | send_post_request_to_order_endpoint_with_fuzzed_data | check_server_...</msg>
<var>@{GRAPHWALKER_PATH_LINES}</var>
<arg>${GRAPHWALKER_CSV_FILE_CONTENTS}</arg>
<status status="PASS" start="2024-05-06T04:51:00.871332" elapsed="0.003557"/>
</kw>
<kw name="Run Graphwalker Path Keywords">
<for flavor="IN">
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_user_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T04:51:00.880198" level="INFO" html="true">File '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;' does not exist.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T04:51:00.879041" elapsed="0.001254"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:51:00.881903" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/user/vitae" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:51:00.880873" elapsed="11.500041"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:51:00.880647" elapsed="11.500371"/>
</kw>
<arg>http://0.0.0.0:8080/user/vitae</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-06T04:51:00.878737" elapsed="11.502362"/>
</kw>
<status status="PASS" start="2024-05-06T04:51:00.878022" elapsed="11.503133"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:51:00.876077" elapsed="11.505118"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_user_endpoint</var>
<status status="PASS" start="2024-05-06T04:51:00.875944" elapsed="11.505282"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T04:51:12.382980" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T04:51:12.384090" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/user/vitae
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"username":"string","firstName":"string","lastName":"string","emai...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T04:51:12.382837" elapsed="0.001286"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T04:51:12.384454" level="INFO">--------------
URL: http://0.0.0.0:8080/user/vitae
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"username":"string","firstName":"string","lastName":"string","email":"string","password":"string","phone":"string","userStatus":-2147483648}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10316 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10316 ms
Total:          10316 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T04:51:12.384253" elapsed="0.001105"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T04:51:12.385512" elapsed="0.000181"/>
</kw>
<status status="PASS" start="2024-05-06T04:51:12.382600" elapsed="0.003173"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:51:12.382168" elapsed="0.003647"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T04:51:12.382032" elapsed="0.003815"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint">
<kw name="Run HTTPStat POST Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T04:51:12.387504" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T04:51:12.386949" elapsed="0.000620"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:51:12.389502" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order" -method "POST" -body '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:51:12.387842" elapsed="10.368311"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:51:12.387697" elapsed="10.368826"/>
</kw>
<arg>http://0.0.0.0:8080/store/order</arg>
<arg>POST</arg>
<arg>'{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}'</arg>
<status status="PASS" start="2024-05-06T04:51:12.386655" elapsed="10.369983"/>
</kw>
<status status="PASS" start="2024-05-06T04:51:12.386311" elapsed="10.370391"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:51:12.386047" elapsed="10.370696"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-06T04:51:12.385954" elapsed="10.370822"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T04:51:22.758030" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T04:51:22.760528" level="INFO">${API_SERVER_LOG_CONTENTS} = [4:50:26 AM] › [CLI] …  awaiting  Starting Prism…
[4:50:26 AM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a documen...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T04:51:22.757843" elapsed="0.003388"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T04:51:22.761854" level="INFO">[4:50:26 AM] › [CLI] …  awaiting  Starting Prism…
[4:50:26 AM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a document file. Can be both a file or a fetchable resource on the web.  [string] [required]

Options:
      --version                           Show version number  [boolean]
      --help                              Show help  [boolean]
  -p, --port                              Port that Prism will run on.  [number] [required] [default: 4010]
  -h, --host                              Host that Prism will listen to.  [string] [required] [default: "127.0.0.1"]
      --cors                              Enables CORS headers.  [boolean] [default: true]
  -m, --multiprocess                      Forks the http server from the CLI for faster log processing.  [boolean] [default: false]
      --errors                            Specifies whether request/response violations marked as errors will produce an error response  [boolean] [required] [default: false]
  -v, --verboseLevel                      Turns on verbose logging.  [required] [choices: "trace", "debug", "info", "warn", "error", "fatal", "silent"] [default: "info"]
  -d, --dynamic                           Dynamically generate examples.  [boolean] [default: false]
      --json-schema-faker-fillProperties  Generate additional properties when using dynamic generation.  [boolean]
      --ignoreExamples                    Tell Prism to treat the spec as though it has no examples. When in static mode,
                                                                  returns an example that has not been generated using json-schema-faker, but was
                                                                  created by Prism. When in dynamic mode, this flag is ignored, since in dynamic mode,
                                                                  examples are not consulted and json-schema-faker is used to generate a response based
                                                                  on the schema defined in the spec  [boolean] [default: false]

listen EADDRINUSE: address already in use 0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T04:51:22.761574" elapsed="0.000467"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T04:51:22.762187" elapsed="0.000247"/>
</kw>
<status status="PASS" start="2024-05-06T04:51:22.757552" elapsed="0.004978"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:51:22.757059" elapsed="0.005530"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T04:51:22.756922" elapsed="0.005703"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint_with_fuzzed_data">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:51:22.765880" level="INFO">Running command 'echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; /tests/resources/mutational-fuzz-data-order-test.dat'.</msg>
<arg>echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:51:22.764885" elapsed="0.011993"/>
</kw>
<arg>Run</arg>
<arg>echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:51:22.764719" elapsed="0.012268"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:51:22.778204" level="INFO">Running command 'httpstat -o /tests/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @/tests/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order 2&gt;&amp;1'.</msg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:51:22.777388" elapsed="10.030530"/>
</kw>
<arg>Run</arg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:51:22.777187" elapsed="10.030896"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:51:32.810108" level="INFO">Running command 'TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:51:32.808979" elapsed="0.005853"/>
</kw>
<arg>Run</arg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:51:32.808623" elapsed="0.006314"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:51:32.816163" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:51:32.815338" elapsed="0.003125"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:51:32.815147" elapsed="0.003474"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:51:32.820448" level="INFO">Running command 'cat /tests/resources/mutational-fuzz-data-order-test.dat &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:51:32.819415" elapsed="0.006641"/>
</kw>
<arg>Run</arg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:51:32.819014" elapsed="0.007142"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:51:32.827327" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:51:32.826522" elapsed="0.002704"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:51:32.826342" elapsed="0.002986"/>
</kw>
<status status="PASS" start="2024-05-06T04:51:22.764411" elapsed="10.065065"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:51:22.763673" elapsed="10.065874"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint_with_fuzzed_data</var>
<status status="PASS" start="2024-05-06T04:51:22.762771" elapsed="10.066817"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T04:51:32.831290" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T04:51:32.832368" level="INFO">${API_SERVER_LOG_CONTENTS} = [4:50:26 AM] › [CLI] …  awaiting  Starting Prism…
[4:50:26 AM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a documen...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T04:51:32.831065" elapsed="0.001361"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T04:51:32.845089" level="INFO">[4:50:26 AM] › [CLI] …  awaiting  Starting Prism…
[4:50:26 AM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a document file. Can be both a file or a fetchable resource on the web.  [string] [required]

Options:
      --version                           Show version number  [boolean]
      --help                              Show help  [boolean]
  -p, --port                              Port that Prism will run on.  [number] [required] [default: 4010]
  -h, --host                              Host that Prism will listen to.  [string] [required] [default: "127.0.0.1"]
      --cors                              Enables CORS headers.  [boolean] [default: true]
  -m, --multiprocess                      Forks the http server from the CLI for faster log processing.  [boolean] [default: false]
      --errors                            Specifies whether request/response violations marked as errors will produce an error response  [boolean] [required] [default: false]
  -v, --verboseLevel                      Turns on verbose logging.  [required] [choices: "trace", "debug", "info", "warn", "error", "fatal", "silent"] [default: "info"]
  -d, --dynamic                           Dynamically generate examples.  [boolean] [default: false]
      --json-schema-faker-fillProperties  Generate additional properties when using dynamic generation.  [boolean]
      --ignoreExamples                    Tell Prism to treat the spec as though it has no examples. When in static mode,
                                                                  returns an example that has not been generated using json-schema-faker, but was
                                                                  created by Prism. When in dynamic mode, this flag is ignored, since in dynamic mode,
                                                                  examples are not consulted and json-schema-faker is used to generate a response based
                                                                  on the schema defined in the spec  [boolean] [default: false]

listen EADDRINUSE: address already in use 0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T04:51:32.832608" elapsed="0.013694"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T04:51:32.846598" elapsed="0.000306"/>
</kw>
<status status="PASS" start="2024-05-06T04:51:32.830542" elapsed="0.016453"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:51:32.830005" elapsed="0.017033"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T04:51:32.829807" elapsed="0.017263"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint_with_fuzzed_data">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:51:32.848802" level="INFO">Running command 'echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; /tests/resources/mutational-fuzz-data-order-test.dat'.</msg>
<arg>echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:51:32.847995" elapsed="0.018368"/>
</kw>
<arg>Run</arg>
<arg>echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:51:32.847856" elapsed="0.018716"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:51:32.868590" level="INFO">Running command 'httpstat -o /tests/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @/tests/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order 2&gt;&amp;1'.</msg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:51:32.867373" elapsed="10.039329"/>
</kw>
<arg>Run</arg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:51:32.867009" elapsed="10.040046"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:51:42.910015" level="INFO">Running command 'TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:51:42.908137" elapsed="0.008747"/>
</kw>
<arg>Run</arg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:51:42.907731" elapsed="0.009265"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:51:42.918339" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:51:42.917420" elapsed="0.003108"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:51:42.917222" elapsed="0.003397"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:51:42.921737" level="INFO">Running command 'cat /tests/resources/mutational-fuzz-data-order-test.dat &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:51:42.921014" elapsed="0.005463"/>
</kw>
<arg>Run</arg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:51:42.920835" elapsed="0.006379"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:51:42.928754" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:51:42.927621" elapsed="0.003411"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:51:42.927420" elapsed="0.003712"/>
</kw>
<status status="PASS" start="2024-05-06T04:51:32.847588" elapsed="10.083718"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:51:32.847288" elapsed="10.084069"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint_with_fuzzed_data</var>
<status status="PASS" start="2024-05-06T04:51:32.847184" elapsed="10.084227"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T04:51:42.932942" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T04:51:42.933630" level="INFO">${API_SERVER_LOG_CONTENTS} = [4:50:26 AM] › [CLI] …  awaiting  Starting Prism…
[4:50:26 AM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a documen...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T04:51:42.932766" elapsed="0.000906"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T04:51:42.934042" level="INFO">[4:50:26 AM] › [CLI] …  awaiting  Starting Prism…
[4:50:26 AM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a document file. Can be both a file or a fetchable resource on the web.  [string] [required]

Options:
      --version                           Show version number  [boolean]
      --help                              Show help  [boolean]
  -p, --port                              Port that Prism will run on.  [number] [required] [default: 4010]
  -h, --host                              Host that Prism will listen to.  [string] [required] [default: "127.0.0.1"]
      --cors                              Enables CORS headers.  [boolean] [default: true]
  -m, --multiprocess                      Forks the http server from the CLI for faster log processing.  [boolean] [default: false]
      --errors                            Specifies whether request/response violations marked as errors will produce an error response  [boolean] [required] [default: false]
  -v, --verboseLevel                      Turns on verbose logging.  [required] [choices: "trace", "debug", "info", "warn", "error", "fatal", "silent"] [default: "info"]
  -d, --dynamic                           Dynamically generate examples.  [boolean] [default: false]
      --json-schema-faker-fillProperties  Generate additional properties when using dynamic generation.  [boolean]
      --ignoreExamples                    Tell Prism to treat the spec as though it has no examples. When in static mode,
                                                                  returns an example that has not been generated using json-schema-faker, but was
                                                                  created by Prism. When in dynamic mode, this flag is ignored, since in dynamic mode,
                                                                  examples are not consulted and json-schema-faker is used to generate a response based
                                                                  on the schema defined in the spec  [boolean] [default: false]

listen EADDRINUSE: address already in use 0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T04:51:42.933889" elapsed="0.000255"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T04:51:42.934278" elapsed="0.000152"/>
</kw>
<status status="PASS" start="2024-05-06T04:51:42.932417" elapsed="0.002086"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:51:42.931912" elapsed="0.002632"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T04:51:42.931731" elapsed="0.002844"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint_with_fuzzed_data">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:51:42.936300" level="INFO">Running command 'echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; /tests/resources/mutational-fuzz-data-order-test.dat'.</msg>
<arg>echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:51:42.935515" elapsed="0.015721"/>
</kw>
<arg>Run</arg>
<arg>echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:51:42.935380" elapsed="0.015958"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:51:42.952479" level="INFO">Running command 'httpstat -o /tests/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @/tests/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order 2&gt;&amp;1'.</msg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:51:42.951704" elapsed="10.024229"/>
</kw>
<arg>Run</arg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:51:42.951523" elapsed="10.024520"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:51:52.978037" level="INFO">Running command 'TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:51:52.977190" elapsed="0.004794"/>
</kw>
<arg>Run</arg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:51:52.976921" elapsed="0.005149"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:51:52.982983" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:51:52.982406" elapsed="0.002149"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:51:52.982234" elapsed="0.002401"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:51:52.985878" level="INFO">Running command 'cat /tests/resources/mutational-fuzz-data-order-test.dat &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:51:52.985093" elapsed="0.004681"/>
</kw>
<arg>Run</arg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:51:52.984856" elapsed="0.005072"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:51:52.991054" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:51:52.990308" elapsed="0.002204"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:51:52.990123" elapsed="0.002471"/>
</kw>
<status status="PASS" start="2024-05-06T04:51:42.935134" elapsed="10.057537"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:51:42.934846" elapsed="10.057972"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint_with_fuzzed_data</var>
<status status="PASS" start="2024-05-06T04:51:42.934751" elapsed="10.058110"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T04:51:52.993924" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T04:51:52.994456" level="INFO">${API_SERVER_LOG_CONTENTS} = [4:50:26 AM] › [CLI] …  awaiting  Starting Prism…
[4:50:26 AM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a documen...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T04:51:52.993704" elapsed="0.000788"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T04:51:52.994864" level="INFO">[4:50:26 AM] › [CLI] …  awaiting  Starting Prism…
[4:50:26 AM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a document file. Can be both a file or a fetchable resource on the web.  [string] [required]

Options:
      --version                           Show version number  [boolean]
      --help                              Show help  [boolean]
  -p, --port                              Port that Prism will run on.  [number] [required] [default: 4010]
  -h, --host                              Host that Prism will listen to.  [string] [required] [default: "127.0.0.1"]
      --cors                              Enables CORS headers.  [boolean] [default: true]
  -m, --multiprocess                      Forks the http server from the CLI for faster log processing.  [boolean] [default: false]
      --errors                            Specifies whether request/response violations marked as errors will produce an error response  [boolean] [required] [default: false]
  -v, --verboseLevel                      Turns on verbose logging.  [required] [choices: "trace", "debug", "info", "warn", "error", "fatal", "silent"] [default: "info"]
  -d, --dynamic                           Dynamically generate examples.  [boolean] [default: false]
      --json-schema-faker-fillProperties  Generate additional properties when using dynamic generation.  [boolean]
      --ignoreExamples                    Tell Prism to treat the spec as though it has no examples. When in static mode,
                                                                  returns an example that has not been generated using json-schema-faker, but was
                                                                  created by Prism. When in dynamic mode, this flag is ignored, since in dynamic mode,
                                                                  examples are not consulted and json-schema-faker is used to generate a response based
                                                                  on the schema defined in the spec  [boolean] [default: false]

listen EADDRINUSE: address already in use 0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T04:51:52.994645" elapsed="0.000358"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T04:51:52.995132" elapsed="0.000159"/>
</kw>
<status status="PASS" start="2024-05-06T04:51:52.993474" elapsed="0.001891"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:51:52.993123" elapsed="0.003390"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T04:51:52.993002" elapsed="0.003589"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint_with_fuzzed_data">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:51:52.998763" level="INFO">Running command 'echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; /tests/resources/mutational-fuzz-data-order-test.dat'.</msg>
<arg>echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:51:52.997935" elapsed="0.015425"/>
</kw>
<arg>Run</arg>
<arg>echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:51:52.997715" elapsed="0.015788"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:51:53.015015" level="INFO">Running command 'httpstat -o /tests/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @/tests/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order 2&gt;&amp;1'.</msg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:51:53.014141" elapsed="10.051552"/>
</kw>
<arg>Run</arg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:51:53.013707" elapsed="10.052262"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:52:03.068047" level="INFO">Running command 'TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:52:03.066499" elapsed="0.006324"/>
</kw>
<arg>Run</arg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:52:03.066224" elapsed="0.006710"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:52:03.074178" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:52:03.073362" elapsed="0.003102"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:52:03.073146" elapsed="0.003421"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:52:03.078051" level="INFO">Running command 'cat /tests/resources/mutational-fuzz-data-order-test.dat &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:52:03.077085" elapsed="0.005003"/>
</kw>
<arg>Run</arg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:52:03.076853" elapsed="0.005347"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:52:03.083478" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:52:03.082603" elapsed="0.002578"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:52:03.082403" elapsed="0.002875"/>
</kw>
<status status="PASS" start="2024-05-06T04:51:52.997436" elapsed="10.087923"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:51:52.997044" elapsed="10.088362"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint_with_fuzzed_data</var>
<status status="PASS" start="2024-05-06T04:51:52.996901" elapsed="10.088540"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T04:52:03.086792" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T04:52:03.088124" level="INFO">${API_SERVER_LOG_CONTENTS} = [4:50:26 AM] › [CLI] …  awaiting  Starting Prism…
[4:50:26 AM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a documen...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T04:52:03.086522" elapsed="0.001679"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T04:52:03.088971" level="INFO">[4:50:26 AM] › [CLI] …  awaiting  Starting Prism…
[4:50:26 AM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a document file. Can be both a file or a fetchable resource on the web.  [string] [required]

Options:
      --version                           Show version number  [boolean]
      --help                              Show help  [boolean]
  -p, --port                              Port that Prism will run on.  [number] [required] [default: 4010]
  -h, --host                              Host that Prism will listen to.  [string] [required] [default: "127.0.0.1"]
      --cors                              Enables CORS headers.  [boolean] [default: true]
  -m, --multiprocess                      Forks the http server from the CLI for faster log processing.  [boolean] [default: false]
      --errors                            Specifies whether request/response violations marked as errors will produce an error response  [boolean] [required] [default: false]
  -v, --verboseLevel                      Turns on verbose logging.  [required] [choices: "trace", "debug", "info", "warn", "error", "fatal", "silent"] [default: "info"]
  -d, --dynamic                           Dynamically generate examples.  [boolean] [default: false]
      --json-schema-faker-fillProperties  Generate additional properties when using dynamic generation.  [boolean]
      --ignoreExamples                    Tell Prism to treat the spec as though it has no examples. When in static mode,
                                                                  returns an example that has not been generated using json-schema-faker, but was
                                                                  created by Prism. When in dynamic mode, this flag is ignored, since in dynamic mode,
                                                                  examples are not consulted and json-schema-faker is used to generate a response based
                                                                  on the schema defined in the spec  [boolean] [default: false]

listen EADDRINUSE: address already in use 0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T04:52:03.088527" elapsed="0.001281"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T04:52:03.090007" elapsed="0.000224"/>
</kw>
<status status="PASS" start="2024-05-06T04:52:03.086143" elapsed="0.004172"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:52:03.085709" elapsed="0.004650"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T04:52:03.085579" elapsed="0.004813"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_order_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T04:52:03.093233" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T04:52:03.092293" elapsed="0.001103"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:52:03.094835" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order/9" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:52:03.093946" elapsed="10.584415"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:52:03.093616" elapsed="10.584877"/>
</kw>
<arg>http://0.0.0.0:8080/store/order/9</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-06T04:52:03.091294" elapsed="10.587311"/>
</kw>
<status status="PASS" start="2024-05-06T04:52:03.090970" elapsed="10.587715"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:52:03.090602" elapsed="10.588139"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-06T04:52:03.090505" elapsed="10.588379"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T04:52:13.680166" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T04:52:13.681483" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"20...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T04:52:13.679994" elapsed="0.001533"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T04:52:13.681965" level="INFO">--------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"2019-08-24T14:15:22Z","status":"placed","complete":false}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10025 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10026 ms
Total:          10026 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T04:52:13.681779" elapsed="0.000250"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T04:52:13.682167" elapsed="0.000184"/>
</kw>
<status status="PASS" start="2024-05-06T04:52:13.679665" elapsed="0.002778"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:52:13.679279" elapsed="0.003214"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T04:52:13.679079" elapsed="0.003453"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint">
<kw name="Run HTTPStat POST Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T04:52:13.685176" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T04:52:13.683735" elapsed="0.002302"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:52:13.687359" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order" -method "POST" -body '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:52:13.686439" elapsed="10.400649"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:52:13.686237" elapsed="10.400978"/>
</kw>
<arg>http://0.0.0.0:8080/store/order</arg>
<arg>POST</arg>
<arg>'{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}'</arg>
<status status="PASS" start="2024-05-06T04:52:13.683411" elapsed="10.403911"/>
</kw>
<status status="PASS" start="2024-05-06T04:52:13.683134" elapsed="10.404274"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:52:13.682814" elapsed="10.404648"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-06T04:52:13.682649" elapsed="10.404859"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T04:52:24.088832" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T04:52:24.090183" level="INFO">${API_SERVER_LOG_CONTENTS} = [4:50:26 AM] › [CLI] …  awaiting  Starting Prism…
[4:50:26 AM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a documen...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T04:52:24.088619" elapsed="0.001613"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T04:52:24.090581" level="INFO">[4:50:26 AM] › [CLI] …  awaiting  Starting Prism…
[4:50:26 AM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a document file. Can be both a file or a fetchable resource on the web.  [string] [required]

Options:
      --version                           Show version number  [boolean]
      --help                              Show help  [boolean]
  -p, --port                              Port that Prism will run on.  [number] [required] [default: 4010]
  -h, --host                              Host that Prism will listen to.  [string] [required] [default: "127.0.0.1"]
      --cors                              Enables CORS headers.  [boolean] [default: true]
  -m, --multiprocess                      Forks the http server from the CLI for faster log processing.  [boolean] [default: false]
      --errors                            Specifies whether request/response violations marked as errors will produce an error response  [boolean] [required] [default: false]
  -v, --verboseLevel                      Turns on verbose logging.  [required] [choices: "trace", "debug", "info", "warn", "error", "fatal", "silent"] [default: "info"]
  -d, --dynamic                           Dynamically generate examples.  [boolean] [default: false]
      --json-schema-faker-fillProperties  Generate additional properties when using dynamic generation.  [boolean]
      --ignoreExamples                    Tell Prism to treat the spec as though it has no examples. When in static mode,
                                                                  returns an example that has not been generated using json-schema-faker, but was
                                                                  created by Prism. When in dynamic mode, this flag is ignored, since in dynamic mode,
                                                                  examples are not consulted and json-schema-faker is used to generate a response based
                                                                  on the schema defined in the spec  [boolean] [default: false]

listen EADDRINUSE: address already in use 0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T04:52:24.090404" elapsed="0.000437"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T04:52:24.091017" elapsed="0.000236"/>
</kw>
<status status="PASS" start="2024-05-06T04:52:24.088347" elapsed="0.003010"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:52:24.087964" elapsed="0.003447"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T04:52:24.087689" elapsed="0.003761"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="restart_server">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:52:24.093992" level="INFO">Running command 'pkill prism &gt; /dev/null 2&gt;&amp;1; pgrep prism | xargs kill &gt; /dev/null 2&gt;&amp;1; killall prism &gt; /dev/null 2&gt;&amp;1'.</msg>
<arg>pkill prism &gt; /dev/null 2&gt;&amp;1; pgrep prism | xargs kill &gt; /dev/null 2&gt;&amp;1; killall prism &gt; /dev/null 2&gt;&amp;1</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:52:24.093247" elapsed="0.036983"/>
</kw>
<arg>Run</arg>
<arg>pkill prism &gt; /dev/null 2&gt;&amp;1; pgrep prism | xargs kill &gt; /dev/null 2&gt;&amp;1; killall prism &gt; /dev/null 2&gt;&amp;1</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:52:24.093008" elapsed="0.037334"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T04:52:54.133316" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T04:52:24.130556" elapsed="30.002920"/>
</kw>
<kw name="Start Prism Mock Server" owner="PrismMockServerLibrary">
<doc>Start the Prism tool and create a mock API server.</doc>
<status status="PASS" start="2024-05-06T04:52:54.133935" elapsed="5.016853"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T04:53:29.151809" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T04:52:59.151035" elapsed="30.000905"/>
</kw>
<status status="PASS" start="2024-05-06T04:52:24.092235" elapsed="65.059818"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:52:24.091702" elapsed="65.061246"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">restart_server</var>
<status status="PASS" start="2024-05-06T04:52:24.091579" elapsed="65.061434"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T04:53:29.154672" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T04:53:29.156239" level="INFO">${API_SERVER_LOG_CONTENTS} = [4:52:55 AM] › [CLI] …  awaiting  Starting Prism…
[4:52:56 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=tenetur
[4:52:56 AM] › [CLI] ℹ  info      POST       http://0.0.0.0...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T04:53:29.154380" elapsed="0.001908"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T04:53:29.156744" level="INFO">[4:52:55 AM] › [CLI] …  awaiting  Starting Prism…
[4:52:56 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=tenetur
[4:52:56 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[4:52:56 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=sold&amp;status=pending&amp;status=sold&amp;status=sold
[4:52:56 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=aut&amp;tags=omnis&amp;tags=expedita
[4:52:56 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/-4490455532200067
[4:52:56 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/-1238197362439999
[4:52:56 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[4:52:56 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[4:52:56 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=pending&amp;status=pending
[4:52:56 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=veniam&amp;tags=omnis&amp;tags=quia&amp;tags=ipsam&amp;tags=enim
[4:52:56 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/6039669878193889
[4:52:56 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-5524144846762995
[4:52:56 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/8617022263338253
[4:52:56 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/2547122628368093/uploadImage
[4:52:56 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[4:52:56 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[4:52:56 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/6
[4:52:56 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/7751502560300858
[4:52:56 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[4:52:56 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[4:52:56 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[4:52:56 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=a&amp;password=quo
[4:52:56 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[4:52:56 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/laborum
[4:52:56 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/est
[4:52:56 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/ad
[4:52:56 AM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T04:53:29.156471" elapsed="0.000401"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T04:53:29.157017" elapsed="0.000193"/>
</kw>
<status status="PASS" start="2024-05-06T04:53:29.153889" elapsed="0.003414"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:53:29.153362" elapsed="0.003993"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T04:53:29.153184" elapsed="0.004209"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="restart_server">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:53:29.159197" level="INFO">Running command 'pkill prism &gt; /dev/null 2&gt;&amp;1; pgrep prism | xargs kill &gt; /dev/null 2&gt;&amp;1; killall prism &gt; /dev/null 2&gt;&amp;1'.</msg>
<arg>pkill prism &gt; /dev/null 2&gt;&amp;1; pgrep prism | xargs kill &gt; /dev/null 2&gt;&amp;1; killall prism &gt; /dev/null 2&gt;&amp;1</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:53:29.158429" elapsed="0.011787"/>
</kw>
<arg>Run</arg>
<arg>pkill prism &gt; /dev/null 2&gt;&amp;1; pgrep prism | xargs kill &gt; /dev/null 2&gt;&amp;1; killall prism &gt; /dev/null 2&gt;&amp;1</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:53:29.158276" elapsed="0.012074"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T04:53:59.171494" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T04:53:29.170534" elapsed="30.001084"/>
</kw>
<kw name="Start Prism Mock Server" owner="PrismMockServerLibrary">
<doc>Start the Prism tool and create a mock API server.</doc>
<status status="PASS" start="2024-05-06T04:53:59.171874" elapsed="5.004835"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T04:54:34.179023" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T04:54:04.177198" elapsed="30.001983"/>
</kw>
<status status="PASS" start="2024-05-06T04:53:29.158019" elapsed="65.021305"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:53:29.157645" elapsed="65.021756"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">restart_server</var>
<status status="PASS" start="2024-05-06T04:53:29.157544" elapsed="65.021916"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T04:54:34.181522" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T04:54:34.183546" level="INFO">${API_SERVER_LOG_CONTENTS} = [4:54:00 AM] › [CLI] …  awaiting  Starting Prism…
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=soluta
[4:54:00 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T04:54:34.181033" elapsed="0.002576"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T04:54:34.184190" level="INFO">[4:54:00 AM] › [CLI] …  awaiting  Starting Prism…
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=soluta
[4:54:00 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=pending&amp;status=available
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=illum
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/-5189142813344699
[4:54:00 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/5269883269320817
[4:54:00 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[4:54:00 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=sold&amp;status=pending&amp;status=available
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=quisquam&amp;tags=aut&amp;tags=deserunt&amp;tags=eveniet&amp;tags=aliquam
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/622132996912429
[4:54:00 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/6069826733725461
[4:54:00 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/8206655310522069
[4:54:00 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-2875684942479119/uploadImage
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[4:54:00 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/5
[4:54:00 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/7900145149730774
[4:54:00 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[4:54:00 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[4:54:00 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=esse&amp;password=rerum
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/dicta
[4:54:00 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/reiciendis
[4:54:00 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/dolorem
[4:54:00 AM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T04:54:34.183935" elapsed="0.001361"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T04:54:34.185486" elapsed="0.000239"/>
</kw>
<status status="PASS" start="2024-05-06T04:54:34.180464" elapsed="0.005470"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:54:34.179961" elapsed="0.006036"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T04:54:34.179758" elapsed="0.006287"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint_with_fuzzed_data">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:54:34.188157" level="INFO">Running command 'echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; /tests/resources/mutational-fuzz-data-order-test.dat'.</msg>
<arg>echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:54:34.187268" elapsed="0.015172"/>
</kw>
<arg>Run</arg>
<arg>echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:54:34.187083" elapsed="0.015458"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:54:34.203813" level="INFO">Running command 'httpstat -o /tests/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @/tests/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order 2&gt;&amp;1'.</msg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:54:34.203041" elapsed="10.019316"/>
</kw>
<arg>Run</arg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:54:34.202824" elapsed="10.019643"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:54:44.224045" level="INFO">Running command 'TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:54:44.222961" elapsed="0.022942"/>
</kw>
<arg>Run</arg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:54:44.222738" elapsed="0.023357"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:54:44.248704" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:54:44.246858" elapsed="0.006294"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:54:44.246384" elapsed="0.006885"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:54:44.255232" level="INFO">Running command 'cat /tests/resources/mutational-fuzz-data-order-test.dat &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:54:44.254149" elapsed="0.009139"/>
</kw>
<arg>Run</arg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:54:44.253763" elapsed="0.009626"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:54:44.265643" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:54:44.264256" elapsed="0.004517"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:54:44.263724" elapsed="0.005220"/>
</kw>
<status status="PASS" start="2024-05-06T04:54:34.186682" elapsed="10.082344"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:54:34.186324" elapsed="10.082744"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint_with_fuzzed_data</var>
<status status="PASS" start="2024-05-06T04:54:34.186210" elapsed="10.082891"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T04:54:44.270748" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T04:54:44.272224" level="INFO">${API_SERVER_LOG_CONTENTS} = [4:54:00 AM] › [CLI] …  awaiting  Starting Prism…
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=soluta
[4:54:00 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T04:54:44.270541" elapsed="0.001735"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T04:54:44.273113" level="INFO">[4:54:00 AM] › [CLI] …  awaiting  Starting Prism…
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=soluta
[4:54:00 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=pending&amp;status=available
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=illum
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/-5189142813344699
[4:54:00 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/5269883269320817
[4:54:00 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[4:54:00 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=sold&amp;status=pending&amp;status=available
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=quisquam&amp;tags=aut&amp;tags=deserunt&amp;tags=eveniet&amp;tags=aliquam
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/622132996912429
[4:54:00 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/6069826733725461
[4:54:00 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/8206655310522069
[4:54:00 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-2875684942479119/uploadImage
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[4:54:00 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/5
[4:54:00 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/7900145149730774
[4:54:00 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[4:54:00 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[4:54:00 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=esse&amp;password=rerum
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/dicta
[4:54:00 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/reiciendis
[4:54:00 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/dolorem
[4:54:00 AM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T04:54:44.272429" elapsed="0.000828"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T04:54:44.273450" elapsed="0.000458"/>
</kw>
<status status="PASS" start="2024-05-06T04:54:44.270238" elapsed="0.003816"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:54:44.269547" elapsed="0.004563"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T04:54:44.269302" elapsed="0.004855"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_pets_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T04:54:44.277240" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T04:54:44.276244" elapsed="0.001087"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:54:44.278606" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:54:44.277654" elapsed="10.510426"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:54:44.277479" elapsed="10.510706"/>
</kw>
<arg>http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-06T04:54:44.275820" elapsed="10.513060"/>
</kw>
<status status="PASS" start="2024-05-06T04:54:44.275385" elapsed="10.513570"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:54:44.274851" elapsed="10.514150"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_pets_endpoint</var>
<status status="PASS" start="2024-05-06T04:54:44.274424" elapsed="10.514616"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T04:54:54.790093" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T04:54:54.791116" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T04:54:54.789944" elapsed="0.001206"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T04:54:54.791438" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       1 ms
TLS handshake:        0 ms
Server processing: 10146 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           1 ms
Pre Transfer:      1 ms
Start Transfer: 10147 ms
Total:          10147 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T04:54:54.791296" elapsed="0.000191"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T04:54:54.791596" elapsed="0.000146"/>
</kw>
<status status="PASS" start="2024-05-06T04:54:54.789653" elapsed="0.002242"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:54:54.789343" elapsed="0.002597"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T04:54:54.789187" elapsed="0.002799"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_latency_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T04:54:54.792883" elapsed="5.017667"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T04:55:29.813001" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T04:54:59.811137" elapsed="30.001977"/>
</kw>
<kw name="Add Latency Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Latency Toxic to the Vegeta load tests. It will add a delay to all data going through the proxy.</doc>
<status status="PASS" start="2024-05-06T04:55:29.813305" elapsed="5.004813"/>
</kw>
<status status="PASS" start="2024-05-06T04:54:54.792574" elapsed="40.025716"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:54:54.792305" elapsed="40.026068"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_latency_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T04:54:54.792163" elapsed="40.026268"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T04:55:34.820140" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T04:55:34.821931" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T04:55:34.819892" elapsed="0.002103"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T04:55:34.822437" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       1 ms
TLS handshake:        0 ms
Server processing: 10146 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           1 ms
Pre Transfer:      1 ms
Start Transfer: 10147 ms
Total:          10147 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T04:55:34.822211" elapsed="0.000305"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T04:55:34.822682" elapsed="0.000339"/>
</kw>
<status status="PASS" start="2024-05-06T04:55:34.819432" elapsed="0.003707"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:55:34.818900" elapsed="0.004299"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T04:55:34.818640" elapsed="0.004605"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_latency_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T04:55:34.824991" elapsed="5.017059"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T04:56:09.843232" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T04:55:39.842309" elapsed="30.001110"/>
</kw>
<kw name="Add Latency Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Latency Toxic to the Vegeta load tests. It will add a delay to all data going through the proxy.</doc>
<status status="PASS" start="2024-05-06T04:56:09.843739" elapsed="5.008429"/>
</kw>
<status status="PASS" start="2024-05-06T04:55:34.824458" elapsed="40.029984"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:55:34.823999" elapsed="40.030611"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_latency_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T04:55:34.823757" elapsed="40.030958"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T04:56:14.857528" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T04:56:14.860178" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T04:56:14.857223" elapsed="0.003015"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T04:56:14.860692" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       1 ms
TLS handshake:        0 ms
Server processing: 10146 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           1 ms
Pre Transfer:      1 ms
Start Transfer: 10147 ms
Total:          10147 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T04:56:14.860466" elapsed="0.000313"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T04:56:14.860968" elapsed="0.000680"/>
</kw>
<status status="PASS" start="2024-05-06T04:56:14.856509" elapsed="0.005277"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:56:14.855566" elapsed="0.006291"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T04:56:14.855072" elapsed="0.006841"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_limited_bandwidth_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T04:56:14.863092" elapsed="5.017396"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T04:56:49.882866" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T04:56:19.880852" elapsed="30.002248"/>
</kw>
<kw name="Add Limited Bandwidth Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Limited Bandwidth Toxic to the Vegeta load tests. It will limit a connection to a maximum number of kilobytes per second.</doc>
<status status="PASS" start="2024-05-06T04:56:49.883649" elapsed="5.013142"/>
</kw>
<status status="PASS" start="2024-05-06T04:56:14.862739" elapsed="40.034365"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:56:14.862284" elapsed="40.035094"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_limited_bandwidth_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T04:56:14.862069" elapsed="40.035411"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T04:56:54.899996" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T04:56:54.902534" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T04:56:54.899703" elapsed="0.002886"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T04:56:54.903023" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       1 ms
TLS handshake:        0 ms
Server processing: 10146 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           1 ms
Pre Transfer:      1 ms
Start Transfer: 10147 ms
Total:          10147 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T04:56:54.902805" elapsed="0.000303"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T04:56:54.903405" elapsed="0.000266"/>
</kw>
<status status="PASS" start="2024-05-06T04:56:54.899141" elapsed="0.004659"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:56:54.898128" elapsed="0.005740"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T04:56:54.897815" elapsed="0.006106"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_latency_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T04:56:54.905099" elapsed="5.018858"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T04:57:29.926641" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T04:56:59.924588" elapsed="30.002289"/>
</kw>
<kw name="Add Latency Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Latency Toxic to the Vegeta load tests. It will add a delay to all data going through the proxy.</doc>
<status status="PASS" start="2024-05-06T04:57:29.927519" elapsed="5.009200"/>
</kw>
<status status="PASS" start="2024-05-06T04:56:54.904750" elapsed="40.032236"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:56:54.904292" elapsed="40.032828"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_latency_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T04:56:54.904076" elapsed="40.035170"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T04:57:34.941959" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T04:57:34.944442" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T04:57:34.941663" elapsed="0.002850"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T04:57:34.945074" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       1 ms
TLS handshake:        0 ms
Server processing: 10146 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           1 ms
Pre Transfer:      1 ms
Start Transfer: 10147 ms
Total:          10147 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T04:57:34.944832" elapsed="0.000445"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T04:57:34.945476" elapsed="0.000260"/>
</kw>
<status status="PASS" start="2024-05-06T04:57:34.940965" elapsed="0.004899"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:57:34.939925" elapsed="0.006007"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T04:57:34.939612" elapsed="0.006375"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint">
<kw name="Run HTTPStat POST Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T04:57:34.949894" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T04:57:34.947734" elapsed="0.002273"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:57:34.951617" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order" -method "POST" -body '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:57:34.950524" elapsed="10.371723"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:57:34.950304" elapsed="10.372068"/>
</kw>
<arg>http://0.0.0.0:8080/store/order</arg>
<arg>POST</arg>
<arg>'{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}'</arg>
<status status="PASS" start="2024-05-06T04:57:34.947206" elapsed="10.375260"/>
</kw>
<status status="PASS" start="2024-05-06T04:57:34.946837" elapsed="10.375705"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:57:34.946407" elapsed="10.376185"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-06T04:57:34.946251" elapsed="10.376381"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T04:57:45.323869" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T04:57:45.325284" level="INFO">${API_SERVER_LOG_CONTENTS} = [4:54:00 AM] › [CLI] …  awaiting  Starting Prism…
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=soluta
[4:54:00 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T04:57:45.323699" elapsed="0.001633"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T04:57:45.325709" level="INFO">[4:54:00 AM] › [CLI] …  awaiting  Starting Prism…
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=soluta
[4:54:00 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=pending&amp;status=available
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=illum
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/-5189142813344699
[4:54:00 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/5269883269320817
[4:54:00 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[4:54:00 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=sold&amp;status=pending&amp;status=available
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=quisquam&amp;tags=aut&amp;tags=deserunt&amp;tags=eveniet&amp;tags=aliquam
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/622132996912429
[4:54:00 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/6069826733725461
[4:54:00 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/8206655310522069
[4:54:00 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-2875684942479119/uploadImage
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[4:54:00 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/5
[4:54:00 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/7900145149730774
[4:54:00 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[4:54:00 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[4:54:00 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=esse&amp;password=rerum
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[4:54:00 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/dicta
[4:54:00 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/reiciendis
[4:54:00 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/dolorem
[4:54:00 AM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
[4:54:44 AM] › [HTTP SERVER] get /no_auth/pets/findByStatus ℹ  info      Request received
[4:54:44 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[4:54:44 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[4:54:44 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[4:57:35 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[4:57:35 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[4:57:35 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[4:57:35 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T04:57:45.325510" elapsed="0.000920"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T04:57:45.326584" elapsed="0.000225"/>
</kw>
<status status="PASS" start="2024-05-06T04:57:45.323409" elapsed="0.003482"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:57:45.322940" elapsed="0.003996"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T04:57:45.322790" elapsed="0.004181"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="restart_server">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:57:45.328799" level="INFO">Running command 'pkill prism &gt; /dev/null 2&gt;&amp;1; pgrep prism | xargs kill &gt; /dev/null 2&gt;&amp;1; killall prism &gt; /dev/null 2&gt;&amp;1'.</msg>
<arg>pkill prism &gt; /dev/null 2&gt;&amp;1; pgrep prism | xargs kill &gt; /dev/null 2&gt;&amp;1; killall prism &gt; /dev/null 2&gt;&amp;1</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:57:45.328126" elapsed="0.012094"/>
</kw>
<arg>Run</arg>
<arg>pkill prism &gt; /dev/null 2&gt;&amp;1; pgrep prism | xargs kill &gt; /dev/null 2&gt;&amp;1; killall prism &gt; /dev/null 2&gt;&amp;1</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:57:45.327977" elapsed="0.012347"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T04:58:15.341376" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T04:57:45.340496" elapsed="30.001113"/>
</kw>
<kw name="Start Prism Mock Server" owner="PrismMockServerLibrary">
<doc>Start the Prism tool and create a mock API server.</doc>
<status status="PASS" start="2024-05-06T04:58:15.341986" elapsed="5.007266"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T04:58:50.350723" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T04:58:20.349483" elapsed="30.001433"/>
</kw>
<status status="PASS" start="2024-05-06T04:57:45.327545" elapsed="65.023589"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:57:45.327172" elapsed="65.024064"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">restart_server</var>
<status status="PASS" start="2024-05-06T04:57:45.327075" elapsed="65.024316"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T04:58:50.353391" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T04:58:50.355584" level="INFO">${API_SERVER_LOG_CONTENTS} = [4:58:16 AM] › [CLI] …  awaiting  Starting Prism…
[4:58:16 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=excepturi
[4:58:16 AM] › [CLI] ℹ  info      POST       http://0.0.0...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T04:58:50.353091" elapsed="0.002574"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T04:58:50.356133" level="INFO">[4:58:16 AM] › [CLI] …  awaiting  Starting Prism…
[4:58:16 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=excepturi
[4:58:16 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[4:58:16 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=available&amp;status=available&amp;status=pending&amp;status=pending&amp;status=pending
[4:58:16 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=sed&amp;tags=consectetur
[4:58:16 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/-2281703726791099
[4:58:16 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/-1815504554261711
[4:58:16 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[4:58:16 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[4:58:16 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=available
[4:58:16 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=fuga&amp;tags=ut
[4:58:16 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/-3898688732461935
[4:58:16 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/860256696820445
[4:58:16 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/-4834385556686795
[4:58:16 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-2793049037040175/uploadImage
[4:58:16 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[4:58:16 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[4:58:16 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/9
[4:58:16 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/1426682300765206
[4:58:16 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[4:58:16 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[4:58:16 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[4:58:16 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=dolorum&amp;password=eius
[4:58:16 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[4:58:16 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/repellendus
[4:58:16 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/aliquid
[4:58:16 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/odit
[4:58:16 AM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T04:58:50.355891" elapsed="0.001484"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T04:58:50.357564" elapsed="0.000229"/>
</kw>
<status status="PASS" start="2024-05-06T04:58:50.352621" elapsed="0.005276"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:58:50.351903" elapsed="0.006052"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T04:58:50.351663" elapsed="0.006336"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="restart_server">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:58:50.360141" level="INFO">Running command 'pkill prism &gt; /dev/null 2&gt;&amp;1; pgrep prism | xargs kill &gt; /dev/null 2&gt;&amp;1; killall prism &gt; /dev/null 2&gt;&amp;1'.</msg>
<arg>pkill prism &gt; /dev/null 2&gt;&amp;1; pgrep prism | xargs kill &gt; /dev/null 2&gt;&amp;1; killall prism &gt; /dev/null 2&gt;&amp;1</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:58:50.359193" elapsed="0.013424"/>
</kw>
<arg>Run</arg>
<arg>pkill prism &gt; /dev/null 2&gt;&amp;1; pgrep prism | xargs kill &gt; /dev/null 2&gt;&amp;1; killall prism &gt; /dev/null 2&gt;&amp;1</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:58:50.358998" elapsed="0.013726"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T04:59:20.374905" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T04:58:50.372908" elapsed="30.002232"/>
</kw>
<kw name="Start Prism Mock Server" owner="PrismMockServerLibrary">
<doc>Start the Prism tool and create a mock API server.</doc>
<status status="PASS" start="2024-05-06T04:59:20.375686" elapsed="5.008107"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T04:59:55.385612" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T04:59:25.384042" elapsed="30.001803"/>
</kw>
<status status="PASS" start="2024-05-06T04:58:50.358689" elapsed="65.027373"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:58:50.358253" elapsed="65.027932"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">restart_server</var>
<status status="PASS" start="2024-05-06T04:58:50.358128" elapsed="65.028149"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T04:59:55.388799" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T04:59:55.391400" level="INFO">${API_SERVER_LOG_CONTENTS} = [4:59:21 AM] › [CLI] …  awaiting  Starting Prism…
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=et
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T04:59:55.388513" elapsed="0.002951"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T04:59:55.391935" level="INFO">[4:59:21 AM] › [CLI] …  awaiting  Starting Prism…
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=et
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=pending&amp;status=sold&amp;status=sold&amp;status=sold&amp;status=available
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=vel&amp;tags=ab&amp;tags=nulla
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/2810100060075393
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/2101083298191845
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[4:59:21 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=pending&amp;status=available&amp;status=pending&amp;status=sold&amp;status=available
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=voluptatibus&amp;tags=non&amp;tags=nam
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/-6407392391714335
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-8594265462933455
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/8217899624968469
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-7974920364530939/uploadImage
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/2
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/7173117196881590
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=et&amp;password=cupiditate
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/velit
[4:59:21 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/voluptas
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/doloremque
[4:59:21 AM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T04:59:55.391688" elapsed="0.001537"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T04:59:55.393452" elapsed="0.000279"/>
</kw>
<status status="PASS" start="2024-05-06T04:59:55.387957" elapsed="0.005904"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:59:55.387052" elapsed="0.006879"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T04:59:55.386714" elapsed="0.007270"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint_with_fuzzed_data">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:59:55.396429" level="INFO">Running command 'echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; /tests/resources/mutational-fuzz-data-order-test.dat'.</msg>
<arg>echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:59:55.395464" elapsed="0.011527"/>
</kw>
<arg>Run</arg>
<arg>echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:59:55.395216" elapsed="0.011878"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T04:59:55.408242" level="INFO">Running command 'httpstat -o /tests/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @/tests/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order 2&gt;&amp;1'.</msg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T04:59:55.407513" elapsed="10.069159"/>
</kw>
<arg>Run</arg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T04:59:55.407317" elapsed="10.069503"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:00:05.478687" level="INFO">Running command 'TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:00:05.477507" elapsed="0.007001"/>
</kw>
<arg>Run</arg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:00:05.477088" elapsed="0.007627"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:00:05.486822" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:00:05.485542" elapsed="0.003350"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:00:05.485012" elapsed="0.003988"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:00:05.491703" level="INFO">Running command 'cat /tests/resources/mutational-fuzz-data-order-test.dat &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:00:05.490642" elapsed="0.007065"/>
</kw>
<arg>Run</arg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:00:05.489189" elapsed="0.008643"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:00:05.499077" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:00:05.498192" elapsed="0.002664"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:00:05.498012" elapsed="0.002937"/>
</kw>
<status status="PASS" start="2024-05-06T04:59:55.394902" elapsed="10.106127"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T04:59:55.394295" elapsed="10.106779"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint_with_fuzzed_data</var>
<status status="PASS" start="2024-05-06T04:59:55.394143" elapsed="10.106966"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T05:00:05.502264" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T05:00:05.503259" level="INFO">${API_SERVER_LOG_CONTENTS} = [4:59:21 AM] › [CLI] …  awaiting  Starting Prism…
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=et
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T05:00:05.502028" elapsed="0.001274"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T05:00:05.503861" level="INFO">[4:59:21 AM] › [CLI] …  awaiting  Starting Prism…
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=et
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=pending&amp;status=sold&amp;status=sold&amp;status=sold&amp;status=available
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=vel&amp;tags=ab&amp;tags=nulla
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/2810100060075393
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/2101083298191845
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[4:59:21 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=pending&amp;status=available&amp;status=pending&amp;status=sold&amp;status=available
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=voluptatibus&amp;tags=non&amp;tags=nam
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/-6407392391714335
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-8594265462933455
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/8217899624968469
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-7974920364530939/uploadImage
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/2
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/7173117196881590
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=et&amp;password=cupiditate
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/velit
[4:59:21 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/voluptas
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/doloremque
[4:59:21 AM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
[4:59:55 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[4:59:55 AM] ›     [VALIDATOR] ⚠  warning   Request did not pass the validation rules
[4:59:55 AM] ›     [VALIDATOR] ✖  error     Request body property shipDate must match format "date-time"
[4:59:55 AM] ›     [NEGOTIATOR] ✔  success   Found response 400. I'll try with it.
[4:59:55 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 400
[4:59:55 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "400"
[4:59:55 AM] ›     [VALIDATOR] ✖  error     Violation: request.body.shipDate Request body property shipDate must match format "date-time"
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T05:00:05.503487" elapsed="0.000513"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T05:00:05.504126" elapsed="0.000214"/>
</kw>
<status status="PASS" start="2024-05-06T05:00:05.501798" elapsed="0.002619"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:00:05.501478" elapsed="0.002979"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T05:00:05.501344" elapsed="0.003143"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_order_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T05:00:05.506440" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T05:00:05.505643" elapsed="0.000893"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:00:05.508454" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order/9" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:00:05.506867" elapsed="10.369541"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:00:05.506696" elapsed="10.369819"/>
</kw>
<arg>http://0.0.0.0:8080/store/order/9</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-06T05:00:05.505329" elapsed="10.371284"/>
</kw>
<status status="PASS" start="2024-05-06T05:00:05.504989" elapsed="10.371694"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:00:05.504708" elapsed="10.372017"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-06T05:00:05.504612" elapsed="10.372150"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T05:00:15.877879" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T05:00:15.879249" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"20...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T05:00:15.877723" elapsed="0.001569"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T05:00:15.879605" level="INFO">--------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"2019-08-24T14:15:22Z","status":"placed","complete":false}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10041 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10041 ms
Total:          10042 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T05:00:15.879448" elapsed="0.000214"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T05:00:15.879869" elapsed="0.000181"/>
</kw>
<status status="PASS" start="2024-05-06T05:00:15.877466" elapsed="0.002671"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:00:15.877042" elapsed="0.003141"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T05:00:15.876906" elapsed="0.003312"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint">
<kw name="Run HTTPStat POST Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T05:00:15.894126" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T05:00:15.881540" elapsed="0.012718"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:00:15.903992" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order" -method "POST" -body '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:00:15.894679" elapsed="10.528257"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:00:15.894474" elapsed="10.528590"/>
</kw>
<arg>http://0.0.0.0:8080/store/order</arg>
<arg>POST</arg>
<arg>'{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}'</arg>
<status status="PASS" start="2024-05-06T05:00:15.881226" elapsed="10.541944"/>
</kw>
<status status="PASS" start="2024-05-06T05:00:15.880935" elapsed="10.542321"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:00:15.880521" elapsed="10.542790"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-06T05:00:15.880398" elapsed="10.542960"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T05:00:26.424908" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T05:00:26.426366" level="INFO">${API_SERVER_LOG_CONTENTS} = [4:59:21 AM] › [CLI] …  awaiting  Starting Prism…
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=et
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T05:00:26.424684" elapsed="0.001729"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T05:00:26.426868" level="INFO">[4:59:21 AM] › [CLI] …  awaiting  Starting Prism…
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=et
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=pending&amp;status=sold&amp;status=sold&amp;status=sold&amp;status=available
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=vel&amp;tags=ab&amp;tags=nulla
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/2810100060075393
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/2101083298191845
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[4:59:21 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=pending&amp;status=available&amp;status=pending&amp;status=sold&amp;status=available
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=voluptatibus&amp;tags=non&amp;tags=nam
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/-6407392391714335
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-8594265462933455
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/8217899624968469
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-7974920364530939/uploadImage
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/2
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/7173117196881590
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=et&amp;password=cupiditate
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/velit
[4:59:21 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/voluptas
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/doloremque
[4:59:21 AM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
[4:59:55 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[4:59:55 AM] ›     [VALIDATOR] ⚠  warning   Request did not pass the validation rules
[4:59:55 AM] ›     [VALIDATOR] ✖  error     Request body property shipDate must match format "date-time"
[4:59:55 AM] ›     [NEGOTIATOR] ✔  success   Found response 400. I'll try with it.
[4:59:55 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 400
[4:59:55 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "400"
[4:59:55 AM] ›     [VALIDATOR] ✖  error     Violation: request.body.shipDate Request body property shipDate must match format "date-time"
[5:00:05 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:00:05 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:05 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:05 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:16 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:00:16 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:16 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:16 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T05:00:26.426590" elapsed="0.001145"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T05:00:26.427898" elapsed="0.000208"/>
</kw>
<status status="PASS" start="2024-05-06T05:00:26.424332" elapsed="0.003867"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:00:26.423704" elapsed="0.004547"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T05:00:26.423537" elapsed="0.004754"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_pets_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T05:00:26.430471" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T05:00:26.429495" elapsed="0.001126"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:00:26.431808" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:00:26.430973" elapsed="10.322272"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:00:26.430791" elapsed="10.322587"/>
</kw>
<arg>http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-06T05:00:26.429196" elapsed="10.324286"/>
</kw>
<status status="PASS" start="2024-05-06T05:00:26.428920" elapsed="10.324642"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:00:26.428518" elapsed="10.325099"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_pets_endpoint</var>
<status status="PASS" start="2024-05-06T05:00:26.428408" elapsed="10.325255"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T05:00:36.755076" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T05:00:36.756700" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T05:00:36.754898" elapsed="0.001847"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T05:00:36.757734" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10023 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10024 ms
Total:          10024 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T05:00:36.757479" elapsed="0.000321"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T05:00:36.757940" elapsed="0.000186"/>
</kw>
<status status="PASS" start="2024-05-06T05:00:36.754569" elapsed="0.003648"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:00:36.754128" elapsed="0.004139"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T05:00:36.753955" elapsed="0.004350"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_user_endpoint">
<kw name="Run HTTPStat POST Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T05:00:36.760385" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T05:00:36.759519" elapsed="0.000946"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:00:36.761648" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/user" -method "POST" -body '{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}' &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:00:36.760867" elapsed="10.361576"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:00:36.760685" elapsed="10.361889"/>
</kw>
<arg>http://0.0.0.0:8080/user</arg>
<arg>POST</arg>
<arg>'{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}'</arg>
<status status="PASS" start="2024-05-06T05:00:36.759208" elapsed="10.363526"/>
</kw>
<status status="PASS" start="2024-05-06T05:00:36.758931" elapsed="10.363912"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:00:36.758532" elapsed="10.364369"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_user_endpoint</var>
<status status="PASS" start="2024-05-06T05:00:36.758422" elapsed="10.364525"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T05:00:47.124225" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T05:00:47.125526" level="INFO">${API_SERVER_LOG_CONTENTS} = [4:59:21 AM] › [CLI] …  awaiting  Starting Prism…
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=et
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T05:00:47.124056" elapsed="0.001517"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T05:00:47.126027" level="INFO">[4:59:21 AM] › [CLI] …  awaiting  Starting Prism…
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=et
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=pending&amp;status=sold&amp;status=sold&amp;status=sold&amp;status=available
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=vel&amp;tags=ab&amp;tags=nulla
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/2810100060075393
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/2101083298191845
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[4:59:21 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=pending&amp;status=available&amp;status=pending&amp;status=sold&amp;status=available
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=voluptatibus&amp;tags=non&amp;tags=nam
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/-6407392391714335
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-8594265462933455
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/8217899624968469
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-7974920364530939/uploadImage
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/2
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/7173117196881590
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=et&amp;password=cupiditate
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/velit
[4:59:21 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/voluptas
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/doloremque
[4:59:21 AM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
[4:59:55 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[4:59:55 AM] ›     [VALIDATOR] ⚠  warning   Request did not pass the validation rules
[4:59:55 AM] ›     [VALIDATOR] ✖  error     Request body property shipDate must match format "date-time"
[4:59:55 AM] ›     [NEGOTIATOR] ✔  success   Found response 400. I'll try with it.
[4:59:55 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 400
[4:59:55 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "400"
[4:59:55 AM] ›     [VALIDATOR] ✖  error     Violation: request.body.shipDate Request body property shipDate must match format "date-time"
[5:00:05 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:00:05 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:05 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:05 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:16 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:00:16 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:16 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:16 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:26 AM] › [HTTP SERVER] get /no_auth/pets/findByStatus ℹ  info      Request received
[5:00:26 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:26 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:26 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:37 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:00:37 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:37 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:37 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T05:00:47.125829" elapsed="0.000992"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T05:00:47.126979" elapsed="0.000204"/>
</kw>
<status status="PASS" start="2024-05-06T05:00:47.123729" elapsed="0.003546"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:00:47.123295" elapsed="0.004029"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T05:00:47.123126" elapsed="0.004235"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_order_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T05:00:47.129523" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T05:00:47.128656" elapsed="0.001006"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:00:47.130787" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order/9" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:00:47.129979" elapsed="10.333207"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:00:47.129816" elapsed="10.333487"/>
</kw>
<arg>http://0.0.0.0:8080/store/order/9</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-06T05:00:47.128354" elapsed="10.335046"/>
</kw>
<status status="PASS" start="2024-05-06T05:00:47.128071" elapsed="10.335421"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:00:47.127590" elapsed="10.335952"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-06T05:00:47.127478" elapsed="10.336105"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T05:00:57.464796" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T05:00:57.466494" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"20...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T05:00:57.464627" elapsed="0.001911"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T05:00:57.466886" level="INFO">--------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"2019-08-24T14:15:22Z","status":"placed","complete":false}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10008 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10008 ms
Total:          10009 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T05:00:57.466717" elapsed="0.000231"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T05:00:57.467201" elapsed="0.000168"/>
</kw>
<status status="PASS" start="2024-05-06T05:00:57.464353" elapsed="0.003100"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:00:57.463889" elapsed="0.003607"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T05:00:57.463739" elapsed="0.003792"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_user_endpoint">
<kw name="Run HTTPStat POST Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T05:00:57.469259" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T05:00:57.468666" elapsed="0.000669"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:00:57.470450" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/user" -method "POST" -body '{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}' &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:00:57.469659" elapsed="10.317674"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:00:57.469487" elapsed="10.317998"/>
</kw>
<arg>http://0.0.0.0:8080/user</arg>
<arg>POST</arg>
<arg>'{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}'</arg>
<status status="PASS" start="2024-05-06T05:00:57.468339" elapsed="10.319243"/>
</kw>
<status status="PASS" start="2024-05-06T05:00:57.468058" elapsed="10.319595"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:00:57.467731" elapsed="10.319964"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_user_endpoint</var>
<status status="PASS" start="2024-05-06T05:00:57.467633" elapsed="10.320097"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T05:01:07.791987" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T05:01:07.796728" level="INFO">${API_SERVER_LOG_CONTENTS} = [4:59:21 AM] › [CLI] …  awaiting  Starting Prism…
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=et
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T05:01:07.791118" elapsed="0.005866"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T05:01:07.798300" level="INFO">[4:59:21 AM] › [CLI] …  awaiting  Starting Prism…
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=et
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=pending&amp;status=sold&amp;status=sold&amp;status=sold&amp;status=available
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=vel&amp;tags=ab&amp;tags=nulla
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/2810100060075393
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/2101083298191845
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[4:59:21 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=pending&amp;status=available&amp;status=pending&amp;status=sold&amp;status=available
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=voluptatibus&amp;tags=non&amp;tags=nam
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/-6407392391714335
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-8594265462933455
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/8217899624968469
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-7974920364530939/uploadImage
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/2
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/7173117196881590
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=et&amp;password=cupiditate
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/velit
[4:59:21 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/voluptas
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/doloremque
[4:59:21 AM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
[4:59:55 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[4:59:55 AM] ›     [VALIDATOR] ⚠  warning   Request did not pass the validation rules
[4:59:55 AM] ›     [VALIDATOR] ✖  error     Request body property shipDate must match format "date-time"
[4:59:55 AM] ›     [NEGOTIATOR] ✔  success   Found response 400. I'll try with it.
[4:59:55 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 400
[4:59:55 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "400"
[4:59:55 AM] ›     [VALIDATOR] ✖  error     Violation: request.body.shipDate Request body property shipDate must match format "date-time"
[5:00:05 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:00:05 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:05 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:05 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:16 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:00:16 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:16 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:16 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:26 AM] › [HTTP SERVER] get /no_auth/pets/findByStatus ℹ  info      Request received
[5:00:26 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:26 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:26 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:37 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:00:37 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:37 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:37 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:47 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:00:47 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:47 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:47 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:57 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:00:57 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:57 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:57 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T05:01:07.797559" elapsed="0.002568"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T05:01:07.800518" elapsed="0.000558"/>
</kw>
<status status="PASS" start="2024-05-06T05:01:07.790109" elapsed="0.011087"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:01:07.788121" elapsed="0.013132"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T05:01:07.787965" elapsed="0.013363"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_user_endpoint_with_fuzzed_data">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:01:07.803756" level="INFO">Running command 'echo '{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}' | radamsa &gt; /tests/resources/mutational-fuzz-data-user-test.dat'.</msg>
<arg>echo '{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-user-test.dat</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:01:07.802832" elapsed="0.016558"/>
</kw>
<arg>Run</arg>
<arg>echo '{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-user-test.dat</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:01:07.802593" elapsed="0.016910"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:01:07.820840" level="INFO">Running command 'httpstat -o /tests/resources/httpstat-response-mutational-fuzz-data-user-output.json -X POST -H 'Content-Type: application/json' -d @/tests/resources/mutational-fuzz-data-user-test.dat http://0.0.0.0:8080/user 2&gt;&amp;1'.</msg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-user-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-user-test.dat http://0.0.0.0:8080/user</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:01:07.819913" elapsed="10.020544"/>
</kw>
<arg>Run</arg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-user-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-user-test.dat http://0.0.0.0:8080/user</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:01:07.819714" elapsed="10.020924"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:01:17.842975" level="INFO">Running command 'TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-user-test.dat -- Logged this on... $TIMESTAMP :: ========" &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-user-endpoint.log'.</msg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-user-test.dat -- Logged this on... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:01:17.841550" elapsed="0.008009"/>
</kw>
<arg>Run</arg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-user-test.dat -- Logged this on... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:01:17.840968" elapsed="0.008702"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:01:17.851220" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-user-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:01:17.850201" elapsed="0.003413"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:01:17.849866" elapsed="0.003855"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:01:17.854875" level="INFO">Running command 'cat /tests/resources/mutational-fuzz-data-user-test.dat &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-user-endpoint.log'.</msg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-user-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:01:17.854140" elapsed="0.007027"/>
</kw>
<arg>Run</arg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-user-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:01:17.853909" elapsed="0.007369"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:01:17.862550" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-user-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:01:17.861739" elapsed="0.002478"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:01:17.861496" elapsed="0.002809"/>
</kw>
<status status="PASS" start="2024-05-06T05:01:07.802141" elapsed="10.062239"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:01:07.801701" elapsed="10.062722"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_user_endpoint_with_fuzzed_data</var>
<status status="PASS" start="2024-05-06T05:01:07.801539" elapsed="10.062918"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T05:01:17.865524" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T05:01:17.866357" level="INFO">${API_SERVER_LOG_CONTENTS} = [4:59:21 AM] › [CLI] …  awaiting  Starting Prism…
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=et
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T05:01:17.865336" elapsed="0.001064"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T05:01:17.866743" level="INFO">[4:59:21 AM] › [CLI] …  awaiting  Starting Prism…
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=et
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=pending&amp;status=sold&amp;status=sold&amp;status=sold&amp;status=available
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=vel&amp;tags=ab&amp;tags=nulla
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/2810100060075393
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/2101083298191845
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[4:59:21 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=pending&amp;status=available&amp;status=pending&amp;status=sold&amp;status=available
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=voluptatibus&amp;tags=non&amp;tags=nam
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/-6407392391714335
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-8594265462933455
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/8217899624968469
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-7974920364530939/uploadImage
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/2
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/7173117196881590
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=et&amp;password=cupiditate
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/velit
[4:59:21 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/voluptas
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/doloremque
[4:59:21 AM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
[4:59:55 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[4:59:55 AM] ›     [VALIDATOR] ⚠  warning   Request did not pass the validation rules
[4:59:55 AM] ›     [VALIDATOR] ✖  error     Request body property shipDate must match format "date-time"
[4:59:55 AM] ›     [NEGOTIATOR] ✔  success   Found response 400. I'll try with it.
[4:59:55 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 400
[4:59:55 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "400"
[4:59:55 AM] ›     [VALIDATOR] ✖  error     Violation: request.body.shipDate Request body property shipDate must match format "date-time"
[5:00:05 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:00:05 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:05 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:05 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:16 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:00:16 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:16 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:16 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:26 AM] › [HTTP SERVER] get /no_auth/pets/findByStatus ℹ  info      Request received
[5:00:26 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:26 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:26 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:37 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:00:37 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:37 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:37 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:47 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:00:47 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:47 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:47 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:57 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:00:57 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:57 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:57 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T05:01:17.866563" elapsed="0.000822"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T05:01:17.867522" elapsed="0.000174"/>
</kw>
<status status="PASS" start="2024-05-06T05:01:17.865018" elapsed="0.002758"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:01:17.864710" elapsed="0.003108"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T05:01:17.864585" elapsed="0.003266"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_order_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T05:01:17.869626" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T05:01:17.868832" elapsed="0.000860"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:01:17.870677" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order/9" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:01:17.870048" elapsed="10.340734"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:01:17.869825" elapsed="10.341093"/>
</kw>
<arg>http://0.0.0.0:8080/store/order/9</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-06T05:01:17.868587" elapsed="10.343083"/>
</kw>
<status status="PASS" start="2024-05-06T05:01:17.868358" elapsed="10.343407"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:01:17.868082" elapsed="10.343740"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-06T05:01:17.867950" elapsed="10.343915"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T05:01:28.213188" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T05:01:28.214369" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"20...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T05:01:28.212933" elapsed="0.001473"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T05:01:28.214798" level="INFO">--------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"2019-08-24T14:15:22Z","status":"placed","complete":false}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10008 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10008 ms
Total:          10008 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T05:01:28.214556" elapsed="0.000305"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T05:01:28.215000" elapsed="0.000178"/>
</kw>
<status status="PASS" start="2024-05-06T05:01:28.212552" elapsed="0.002719"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:01:28.212170" elapsed="0.003150"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T05:01:28.212021" elapsed="0.003337"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_latency_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T05:01:28.216223" elapsed="5.014943"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T05:02:03.233539" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T05:01:33.231659" elapsed="30.002123"/>
</kw>
<kw name="Add Latency Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Latency Toxic to the Vegeta load tests. It will add a delay to all data going through the proxy.</doc>
<status status="PASS" start="2024-05-06T05:02:03.234346" elapsed="5.008877"/>
</kw>
<status status="PASS" start="2024-05-06T05:01:28.215963" elapsed="40.027401"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:01:28.215576" elapsed="40.027845"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_latency_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T05:01:28.215469" elapsed="40.027996"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T05:02:08.244923" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T05:02:08.246376" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"20...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T05:02:08.244750" elapsed="0.001670"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T05:02:08.246759" level="INFO">--------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"2019-08-24T14:15:22Z","status":"placed","complete":false}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10008 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10008 ms
Total:          10008 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T05:02:08.246592" elapsed="0.000226"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T05:02:08.246951" elapsed="0.000265"/>
</kw>
<status status="PASS" start="2024-05-06T05:02:08.244215" elapsed="0.003100"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:02:08.243770" elapsed="0.003595"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T05:02:08.243621" elapsed="0.003782"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint">
<kw name="Run HTTPStat POST Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T05:02:08.249238" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T05:02:08.248577" elapsed="0.000767"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:02:08.250602" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order" -method "POST" -body '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:02:08.249686" elapsed="10.358408"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:02:08.249512" elapsed="10.359545"/>
</kw>
<arg>http://0.0.0.0:8080/store/order</arg>
<arg>POST</arg>
<arg>'{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}'</arg>
<status status="PASS" start="2024-05-06T05:02:08.248267" elapsed="10.360927"/>
</kw>
<status status="PASS" start="2024-05-06T05:02:08.247951" elapsed="10.361321"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:02:08.247634" elapsed="10.361686"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-06T05:02:08.247523" elapsed="10.361835"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T05:02:18.610604" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T05:02:18.611771" level="INFO">${API_SERVER_LOG_CONTENTS} = [4:59:21 AM] › [CLI] …  awaiting  Starting Prism…
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=et
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T05:02:18.610435" elapsed="0.001377"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T05:02:18.612263" level="INFO">[4:59:21 AM] › [CLI] …  awaiting  Starting Prism…
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=et
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=pending&amp;status=sold&amp;status=sold&amp;status=sold&amp;status=available
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=vel&amp;tags=ab&amp;tags=nulla
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/2810100060075393
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/2101083298191845
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[4:59:21 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=pending&amp;status=available&amp;status=pending&amp;status=sold&amp;status=available
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=voluptatibus&amp;tags=non&amp;tags=nam
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/-6407392391714335
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-8594265462933455
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/8217899624968469
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-7974920364530939/uploadImage
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/2
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/7173117196881590
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=et&amp;password=cupiditate
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/velit
[4:59:21 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/voluptas
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/doloremque
[4:59:21 AM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
[4:59:55 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[4:59:55 AM] ›     [VALIDATOR] ⚠  warning   Request did not pass the validation rules
[4:59:55 AM] ›     [VALIDATOR] ✖  error     Request body property shipDate must match format "date-time"
[4:59:55 AM] ›     [NEGOTIATOR] ✔  success   Found response 400. I'll try with it.
[4:59:55 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 400
[4:59:55 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "400"
[4:59:55 AM] ›     [VALIDATOR] ✖  error     Violation: request.body.shipDate Request body property shipDate must match format "date-time"
[5:00:05 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:00:05 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:05 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:05 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:16 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:00:16 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:16 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:16 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:26 AM] › [HTTP SERVER] get /no_auth/pets/findByStatus ℹ  info      Request received
[5:00:26 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:26 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:26 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:37 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:00:37 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:37 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:37 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:47 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:00:47 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:47 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:47 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:57 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:00:57 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:57 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:57 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:01:18 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:01:18 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:01:18 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:01:18 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:02:08 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:02:08 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:02:08 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:02:08 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T05:02:18.612041" elapsed="0.000463"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T05:02:18.612648" elapsed="0.000195"/>
</kw>
<status status="PASS" start="2024-05-06T05:02:18.610037" elapsed="0.002895"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:02:18.609664" elapsed="0.003360"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T05:02:18.609514" elapsed="0.003556"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint_with_fuzzed_data">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:02:18.614902" level="INFO">Running command 'echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; /tests/resources/mutational-fuzz-data-order-test.dat'.</msg>
<arg>echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:02:18.614141" elapsed="0.010738"/>
</kw>
<arg>Run</arg>
<arg>echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:02:18.613920" elapsed="0.011130"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:02:18.626811" level="INFO">Running command 'httpstat -o /tests/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @/tests/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order 2&gt;&amp;1'.</msg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:02:18.626181" elapsed="10.012644"/>
</kw>
<arg>Run</arg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:02:18.625952" elapsed="10.012979"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:02:28.640659" level="INFO">Running command 'TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:02:28.639601" elapsed="0.006099"/>
</kw>
<arg>Run</arg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:02:28.639353" elapsed="0.006447"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:02:28.647691" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:02:28.646384" elapsed="0.003886"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:02:28.646071" elapsed="0.004308"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:02:28.651936" level="INFO">Running command 'cat /tests/resources/mutational-fuzz-data-order-test.dat &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:02:28.650801" elapsed="0.006103"/>
</kw>
<arg>Run</arg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:02:28.650579" elapsed="0.006550"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:02:28.658783" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:02:28.657783" elapsed="0.003375"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:02:28.657472" elapsed="0.003816"/>
</kw>
<status status="PASS" start="2024-05-06T05:02:18.613641" elapsed="10.047740"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:02:18.613298" elapsed="10.048178"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint_with_fuzzed_data</var>
<status status="PASS" start="2024-05-06T05:02:18.613186" elapsed="10.048354"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T05:02:28.663264" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T05:02:28.664699" level="INFO">${API_SERVER_LOG_CONTENTS} = [4:59:21 AM] › [CLI] …  awaiting  Starting Prism…
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=et
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T05:02:28.663043" elapsed="0.001739"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T05:02:28.665469" level="INFO">[4:59:21 AM] › [CLI] …  awaiting  Starting Prism…
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=et
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=pending&amp;status=sold&amp;status=sold&amp;status=sold&amp;status=available
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=vel&amp;tags=ab&amp;tags=nulla
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/2810100060075393
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/2101083298191845
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[4:59:21 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=pending&amp;status=available&amp;status=pending&amp;status=sold&amp;status=available
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=voluptatibus&amp;tags=non&amp;tags=nam
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/-6407392391714335
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-8594265462933455
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/8217899624968469
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-7974920364530939/uploadImage
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/2
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/7173117196881590
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=et&amp;password=cupiditate
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/velit
[4:59:21 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/voluptas
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/doloremque
[4:59:21 AM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
[4:59:55 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[4:59:55 AM] ›     [VALIDATOR] ⚠  warning   Request did not pass the validation rules
[4:59:55 AM] ›     [VALIDATOR] ✖  error     Request body property shipDate must match format "date-time"
[4:59:55 AM] ›     [NEGOTIATOR] ✔  success   Found response 400. I'll try with it.
[4:59:55 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 400
[4:59:55 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "400"
[4:59:55 AM] ›     [VALIDATOR] ✖  error     Violation: request.body.shipDate Request body property shipDate must match format "date-time"
[5:00:05 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:00:05 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:05 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:05 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:16 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:00:16 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:16 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:16 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:26 AM] › [HTTP SERVER] get /no_auth/pets/findByStatus ℹ  info      Request received
[5:00:26 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:26 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:26 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:37 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:00:37 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:37 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:37 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:47 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:00:47 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:47 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:47 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:57 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:00:57 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:57 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:57 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:01:18 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:01:18 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:01:18 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:01:18 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:02:08 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:02:08 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:02:08 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:02:08 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T05:02:28.665189" elapsed="0.001463"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T05:02:28.666943" elapsed="0.000388"/>
</kw>
<status status="PASS" start="2024-05-06T05:02:28.662652" elapsed="0.004899"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:02:28.662007" elapsed="0.005616"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T05:02:28.661780" elapsed="0.005883"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_user_endpoint_with_fuzzed_data">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:02:28.670363" level="INFO">Running command 'echo '{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}' | radamsa &gt; /tests/resources/mutational-fuzz-data-user-test.dat'.</msg>
<arg>echo '{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-user-test.dat</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:02:28.669369" elapsed="0.013730"/>
</kw>
<arg>Run</arg>
<arg>echo '{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-user-test.dat</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:02:28.669190" elapsed="0.014838"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:02:28.686234" level="INFO">Running command 'httpstat -o /tests/resources/httpstat-response-mutational-fuzz-data-user-output.json -X POST -H 'Content-Type: application/json' -d @/tests/resources/mutational-fuzz-data-user-test.dat http://0.0.0.0:8080/user 2&gt;&amp;1'.</msg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-user-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-user-test.dat http://0.0.0.0:8080/user</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:02:28.684592" elapsed="10.017200"/>
</kw>
<arg>Run</arg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-user-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-user-test.dat http://0.0.0.0:8080/user</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:02:28.684355" elapsed="10.017551"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:02:38.703353" level="INFO">Running command 'TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-user-test.dat -- Logged this on... $TIMESTAMP :: ========" &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-user-endpoint.log'.</msg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-user-test.dat -- Logged this on... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:02:38.702519" elapsed="0.005565"/>
</kw>
<arg>Run</arg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-user-test.dat -- Logged this on... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:02:38.702246" elapsed="0.005938"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:02:38.709987" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-user-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:02:38.708540" elapsed="0.003457"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:02:38.708361" elapsed="0.003736"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:02:38.713190" level="INFO">Running command 'cat /tests/resources/mutational-fuzz-data-user-test.dat &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-user-endpoint.log'.</msg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-user-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:02:38.712489" elapsed="0.004216"/>
</kw>
<arg>Run</arg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-user-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:02:38.712276" elapsed="0.004521"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:02:38.718013" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-user-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:02:38.717214" elapsed="0.002701"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:02:38.716968" elapsed="0.003126"/>
</kw>
<status status="PASS" start="2024-05-06T05:02:28.668792" elapsed="10.051380"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:02:28.668079" elapsed="10.052136"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_user_endpoint_with_fuzzed_data</var>
<status status="PASS" start="2024-05-06T05:02:28.667819" elapsed="10.052429"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T05:02:38.721356" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T05:02:38.722604" level="INFO">${API_SERVER_LOG_CONTENTS} = [4:59:21 AM] › [CLI] …  awaiting  Starting Prism…
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=et
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T05:02:38.721208" elapsed="0.001452"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T05:02:38.723200" level="INFO">[4:59:21 AM] › [CLI] …  awaiting  Starting Prism…
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=et
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=pending&amp;status=sold&amp;status=sold&amp;status=sold&amp;status=available
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=vel&amp;tags=ab&amp;tags=nulla
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/2810100060075393
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/2101083298191845
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[4:59:21 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=pending&amp;status=available&amp;status=pending&amp;status=sold&amp;status=available
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=voluptatibus&amp;tags=non&amp;tags=nam
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/-6407392391714335
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-8594265462933455
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/8217899624968469
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-7974920364530939/uploadImage
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/2
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/7173117196881590
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=et&amp;password=cupiditate
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/velit
[4:59:21 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/voluptas
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/doloremque
[4:59:21 AM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
[4:59:55 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[4:59:55 AM] ›     [VALIDATOR] ⚠  warning   Request did not pass the validation rules
[4:59:55 AM] ›     [VALIDATOR] ✖  error     Request body property shipDate must match format "date-time"
[4:59:55 AM] ›     [NEGOTIATOR] ✔  success   Found response 400. I'll try with it.
[4:59:55 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 400
[4:59:55 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "400"
[4:59:55 AM] ›     [VALIDATOR] ✖  error     Violation: request.body.shipDate Request body property shipDate must match format "date-time"
[5:00:05 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:00:05 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:05 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:05 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:16 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:00:16 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:16 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:16 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:26 AM] › [HTTP SERVER] get /no_auth/pets/findByStatus ℹ  info      Request received
[5:00:26 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:26 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:26 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:37 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:00:37 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:37 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:37 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:47 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:00:47 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:47 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:47 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:57 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:00:57 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:57 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:57 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:01:18 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:01:18 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:01:18 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:01:18 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:02:08 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:02:08 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:02:08 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:02:08 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:02:28 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:02:28 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:02:28 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:02:28 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T05:02:38.722900" elapsed="0.001837"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T05:02:38.725128" elapsed="0.000342"/>
</kw>
<status status="PASS" start="2024-05-06T05:02:38.720901" elapsed="0.004688"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:02:38.720572" elapsed="0.005065"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T05:02:38.720435" elapsed="0.005237"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_pets_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T05:02:38.727636" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T05:02:38.726845" elapsed="0.000866"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:02:38.729336" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:02:38.728664" elapsed="10.338493"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:02:38.728476" elapsed="10.338799"/>
</kw>
<arg>http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-06T05:02:38.726600" elapsed="10.340752"/>
</kw>
<status status="PASS" start="2024-05-06T05:02:38.726369" elapsed="10.341038"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:02:38.726038" elapsed="10.341407"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_pets_endpoint</var>
<status status="PASS" start="2024-05-06T05:02:38.725796" elapsed="10.341679"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T05:02:49.068973" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T05:02:49.070701" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T05:02:49.068768" elapsed="0.001970"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T05:02:49.071160" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10007 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10007 ms
Total:          10007 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T05:02:49.070897" elapsed="0.000328"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T05:02:49.071338" elapsed="0.000144"/>
</kw>
<status status="PASS" start="2024-05-06T05:02:49.068035" elapsed="0.003519"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:02:49.067739" elapsed="0.003853"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T05:02:49.067613" elapsed="0.004010"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_latency_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T05:02:49.073033" elapsed="5.024489"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T05:03:24.099941" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T05:02:54.097795" elapsed="30.002594"/>
</kw>
<kw name="Add Latency Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Latency Toxic to the Vegeta load tests. It will add a delay to all data going through the proxy.</doc>
<status status="PASS" start="2024-05-06T05:03:24.100834" elapsed="5.007413"/>
</kw>
<status status="PASS" start="2024-05-06T05:02:49.072621" elapsed="40.035847"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:02:49.071804" elapsed="40.036899"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_latency_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T05:02:49.071720" elapsed="40.037079"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T05:03:29.111166" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T05:03:29.112501" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T05:03:29.110786" elapsed="0.001761"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T05:03:29.112982" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10007 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10007 ms
Total:          10007 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T05:03:29.112733" elapsed="0.000329"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T05:03:29.113195" elapsed="0.000171"/>
</kw>
<status status="PASS" start="2024-05-06T05:03:29.110041" elapsed="0.003413"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:03:29.109476" elapsed="0.004039"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T05:03:29.109041" elapsed="0.004511"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint">
<kw name="Run HTTPStat POST Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T05:03:29.117558" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T05:03:29.116461" elapsed="0.001307"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:03:29.119789" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order" -method "POST" -body '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:03:29.118950" elapsed="10.434829"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:03:29.118362" elapsed="10.435539"/>
</kw>
<arg>http://0.0.0.0:8080/store/order</arg>
<arg>POST</arg>
<arg>'{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}'</arg>
<status status="PASS" start="2024-05-06T05:03:29.115705" elapsed="10.438280"/>
</kw>
<status status="PASS" start="2024-05-06T05:03:29.115446" elapsed="10.438602"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:03:29.115101" elapsed="10.438987"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-06T05:03:29.114948" elapsed="10.439172"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T05:03:39.559370" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T05:03:39.561429" level="INFO">${API_SERVER_LOG_CONTENTS} = [4:59:21 AM] › [CLI] …  awaiting  Starting Prism…
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=et
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T05:03:39.559123" elapsed="0.002364"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T05:03:39.562135" level="INFO">[4:59:21 AM] › [CLI] …  awaiting  Starting Prism…
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=et
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=pending&amp;status=sold&amp;status=sold&amp;status=sold&amp;status=available
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=vel&amp;tags=ab&amp;tags=nulla
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/2810100060075393
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/2101083298191845
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[4:59:21 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=pending&amp;status=available&amp;status=pending&amp;status=sold&amp;status=available
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=voluptatibus&amp;tags=non&amp;tags=nam
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/-6407392391714335
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-8594265462933455
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/8217899624968469
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-7974920364530939/uploadImage
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/2
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/7173117196881590
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=et&amp;password=cupiditate
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/velit
[4:59:21 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/voluptas
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/doloremque
[4:59:21 AM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
[4:59:55 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[4:59:55 AM] ›     [VALIDATOR] ⚠  warning   Request did not pass the validation rules
[4:59:55 AM] ›     [VALIDATOR] ✖  error     Request body property shipDate must match format "date-time"
[4:59:55 AM] ›     [NEGOTIATOR] ✔  success   Found response 400. I'll try with it.
[4:59:55 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 400
[4:59:55 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "400"
[4:59:55 AM] ›     [VALIDATOR] ✖  error     Violation: request.body.shipDate Request body property shipDate must match format "date-time"
[5:00:05 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:00:05 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:05 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:05 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:16 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:00:16 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:16 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:16 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:26 AM] › [HTTP SERVER] get /no_auth/pets/findByStatus ℹ  info      Request received
[5:00:26 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:26 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:26 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:37 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:00:37 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:37 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:37 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:47 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:00:47 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:47 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:47 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:57 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:00:57 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:57 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:57 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:01:18 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:01:18 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:01:18 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:01:18 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:02:08 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:02:08 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:02:08 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:02:08 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:02:28 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:02:28 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:02:28 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:02:28 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:02:39 AM] › [HTTP SERVER] get /no_auth/pets/findByStatus ℹ  info      Request received
[5:02:39 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:02:39 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:02:39 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:03:29 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:03:29 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:03:29 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:03:29 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T05:03:39.561934" elapsed="0.000415"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T05:03:39.562583" elapsed="0.000575"/>
</kw>
<status status="PASS" start="2024-05-06T05:03:39.558540" elapsed="0.004765"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:03:39.556854" elapsed="0.006520"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T05:03:39.556619" elapsed="0.010970"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_pets_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T05:03:39.577228" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T05:03:39.573092" elapsed="0.004293"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:03:39.589785" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:03:39.578249" elapsed="10.578891"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:03:39.577685" elapsed="10.579554"/>
</kw>
<arg>http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-06T05:03:39.569348" elapsed="10.587967"/>
</kw>
<status status="PASS" start="2024-05-06T05:03:39.568838" elapsed="10.588530"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:03:39.568101" elapsed="10.589306"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_pets_endpoint</var>
<status status="PASS" start="2024-05-06T05:03:39.567768" elapsed="10.589669"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T05:03:50.158478" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T05:03:50.159882" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T05:03:50.158331" elapsed="0.001588"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T05:03:50.160213" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10010 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10011 ms
Total:          10011 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T05:03:50.160070" elapsed="0.000192"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T05:03:50.160368" elapsed="0.000145"/>
</kw>
<status status="PASS" start="2024-05-06T05:03:50.158110" elapsed="0.002476"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:03:50.157723" elapsed="0.002902"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T05:03:50.157595" elapsed="0.003060"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_latency_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T05:03:50.161453" elapsed="5.017640"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T05:04:25.181129" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T05:03:55.179305" elapsed="30.002018"/>
</kw>
<kw name="Add Latency Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Latency Toxic to the Vegeta load tests. It will add a delay to all data going through the proxy.</doc>
<status status="PASS" start="2024-05-06T05:04:25.181709" elapsed="5.006193"/>
</kw>
<status status="PASS" start="2024-05-06T05:03:50.161221" elapsed="40.026859"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:03:50.160843" elapsed="40.027320"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_latency_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T05:03:50.160756" elapsed="40.027465"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T05:04:30.190019" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T05:04:30.191976" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T05:04:30.189766" elapsed="0.002259"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T05:04:30.192427" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10010 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10011 ms
Total:          10011 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T05:04:30.192227" elapsed="0.000273"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T05:04:30.194744" elapsed="0.000330"/>
</kw>
<status status="PASS" start="2024-05-06T05:04:30.189306" elapsed="0.005898"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:04:30.188787" elapsed="0.006482"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T05:04:30.188439" elapsed="0.006878"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_user_endpoint">
<kw name="Run HTTPStat POST Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T05:04:30.198545" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T05:04:30.196749" elapsed="0.001888"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:04:30.199874" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/user" -method "POST" -body '{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}' &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:04:30.198987" elapsed="10.640680"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:04:30.198804" elapsed="10.640982"/>
</kw>
<arg>http://0.0.0.0:8080/user</arg>
<arg>POST</arg>
<arg>'{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}'</arg>
<status status="PASS" start="2024-05-06T05:04:30.196381" elapsed="10.643496"/>
</kw>
<status status="PASS" start="2024-05-06T05:04:30.196098" elapsed="10.643851"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:04:30.195609" elapsed="10.644386"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_user_endpoint</var>
<status status="PASS" start="2024-05-06T05:04:30.195475" elapsed="10.644558"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T05:04:40.841244" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T05:04:40.842349" level="INFO">${API_SERVER_LOG_CONTENTS} = [4:59:21 AM] › [CLI] …  awaiting  Starting Prism…
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=et
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T05:04:40.841076" elapsed="0.001319"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T05:04:40.842834" level="INFO">[4:59:21 AM] › [CLI] …  awaiting  Starting Prism…
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=et
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=pending&amp;status=sold&amp;status=sold&amp;status=sold&amp;status=available
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=vel&amp;tags=ab&amp;tags=nulla
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/2810100060075393
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/2101083298191845
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[4:59:21 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=pending&amp;status=available&amp;status=pending&amp;status=sold&amp;status=available
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=voluptatibus&amp;tags=non&amp;tags=nam
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/-6407392391714335
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-8594265462933455
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/8217899624968469
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-7974920364530939/uploadImage
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/2
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/7173117196881590
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=et&amp;password=cupiditate
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/velit
[4:59:21 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/voluptas
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/doloremque
[4:59:21 AM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
[4:59:55 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[4:59:55 AM] ›     [VALIDATOR] ⚠  warning   Request did not pass the validation rules
[4:59:55 AM] ›     [VALIDATOR] ✖  error     Request body property shipDate must match format "date-time"
[4:59:55 AM] ›     [NEGOTIATOR] ✔  success   Found response 400. I'll try with it.
[4:59:55 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 400
[4:59:55 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "400"
[4:59:55 AM] ›     [VALIDATOR] ✖  error     Violation: request.body.shipDate Request body property shipDate must match format "date-time"
[5:00:05 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:00:05 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:05 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:05 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:16 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:00:16 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:16 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:16 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:26 AM] › [HTTP SERVER] get /no_auth/pets/findByStatus ℹ  info      Request received
[5:00:26 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:26 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:26 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:37 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:00:37 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:37 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:37 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:47 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:00:47 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:47 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:47 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:57 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:00:57 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:57 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:57 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:01:18 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:01:18 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:01:18 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:01:18 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:02:08 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:02:08 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:02:08 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:02:08 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:02:28 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:02:28 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:02:28 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:02:28 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:02:39 AM] › [HTTP SERVER] get /no_auth/pets/findByStatus ℹ  info      Request received
[5:02:39 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:02:39 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:02:39 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:03:29 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:03:29 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:03:29 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:03:29 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:03:40 AM] › [HTTP SERVER] get /no_auth/pets/findByStatus ℹ  info      Request received
[5:03:40 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:03:40 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:03:40 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:04:30 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:04:30 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:04:30 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:04:30 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T05:04:40.842617" elapsed="0.001599"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T05:04:40.844386" elapsed="0.000263"/>
</kw>
<status status="PASS" start="2024-05-06T05:04:40.840798" elapsed="0.003937"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:04:40.840332" elapsed="0.004448"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T05:04:40.840187" elapsed="0.004626"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint_with_fuzzed_data">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:04:40.846432" level="INFO">Running command 'echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; /tests/resources/mutational-fuzz-data-order-test.dat'.</msg>
<arg>echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:04:40.845759" elapsed="0.081512"/>
</kw>
<arg>Run</arg>
<arg>echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:04:40.845563" elapsed="0.081807"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:04:40.928693" level="INFO">Running command 'httpstat -o /tests/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @/tests/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order 2&gt;&amp;1'.</msg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:04:40.927850" elapsed="10.014248"/>
</kw>
<arg>Run</arg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:04:40.927659" elapsed="10.014650"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:04:50.943523" level="INFO">Running command 'TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:04:50.942814" elapsed="0.004929"/>
</kw>
<arg>Run</arg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:04:50.942498" elapsed="0.005376"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:04:50.948909" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:04:50.948225" elapsed="0.002424"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:04:50.948049" elapsed="0.002733"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:04:50.951842" level="INFO">Running command 'cat /tests/resources/mutational-fuzz-data-order-test.dat &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:04:50.951127" elapsed="0.005221"/>
</kw>
<arg>Run</arg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:04:50.950958" elapsed="0.005698"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:04:50.957906" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:04:50.957147" elapsed="0.002383"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:04:50.956947" elapsed="0.002657"/>
</kw>
<status status="PASS" start="2024-05-06T05:04:40.845324" elapsed="10.114351"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:04:40.845018" elapsed="10.114702"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint_with_fuzzed_data</var>
<status status="PASS" start="2024-05-06T05:04:40.844921" elapsed="10.114831"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T05:04:50.960810" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T05:04:50.961621" level="INFO">${API_SERVER_LOG_CONTENTS} = [4:59:21 AM] › [CLI] …  awaiting  Starting Prism…
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=et
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T05:04:50.960646" elapsed="0.001540"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T05:04:50.962848" level="INFO">[4:59:21 AM] › [CLI] …  awaiting  Starting Prism…
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=et
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=pending&amp;status=sold&amp;status=sold&amp;status=sold&amp;status=available
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=vel&amp;tags=ab&amp;tags=nulla
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/2810100060075393
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/2101083298191845
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[4:59:21 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=pending&amp;status=available&amp;status=pending&amp;status=sold&amp;status=available
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=voluptatibus&amp;tags=non&amp;tags=nam
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/-6407392391714335
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-8594265462933455
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/8217899624968469
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-7974920364530939/uploadImage
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/2
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/7173117196881590
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=et&amp;password=cupiditate
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/velit
[4:59:21 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/voluptas
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/doloremque
[4:59:21 AM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
[4:59:55 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[4:59:55 AM] ›     [VALIDATOR] ⚠  warning   Request did not pass the validation rules
[4:59:55 AM] ›     [VALIDATOR] ✖  error     Request body property shipDate must match format "date-time"
[4:59:55 AM] ›     [NEGOTIATOR] ✔  success   Found response 400. I'll try with it.
[4:59:55 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 400
[4:59:55 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "400"
[4:59:55 AM] ›     [VALIDATOR] ✖  error     Violation: request.body.shipDate Request body property shipDate must match format "date-time"
[5:00:05 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:00:05 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:05 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:05 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:16 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:00:16 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:16 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:16 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:26 AM] › [HTTP SERVER] get /no_auth/pets/findByStatus ℹ  info      Request received
[5:00:26 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:26 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:26 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:37 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:00:37 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:37 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:37 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:47 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:00:47 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:47 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:47 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:57 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:00:57 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:57 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:57 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:01:18 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:01:18 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:01:18 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:01:18 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:02:08 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:02:08 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:02:08 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:02:08 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:02:28 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:02:28 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:02:28 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:02:28 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:02:39 AM] › [HTTP SERVER] get /no_auth/pets/findByStatus ℹ  info      Request received
[5:02:39 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:02:39 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:02:39 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:03:29 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:03:29 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:03:29 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:03:29 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:03:40 AM] › [HTTP SERVER] get /no_auth/pets/findByStatus ℹ  info      Request received
[5:03:40 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:03:40 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:03:40 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:04:30 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:04:30 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:04:30 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:04:30 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T05:04:50.962379" elapsed="0.001620"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T05:04:50.964330" elapsed="0.000365"/>
</kw>
<status status="PASS" start="2024-05-06T05:04:50.960320" elapsed="0.004474"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:04:50.959992" elapsed="0.004846"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T05:04:50.959877" elapsed="0.004993"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_pets_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T05:04:50.966701" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T05:04:50.965880" elapsed="0.000897"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:04:50.968044" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:04:50.967074" elapsed="10.341603"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:04:50.966923" elapsed="10.341884"/>
</kw>
<arg>http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-06T05:04:50.965587" elapsed="10.343325"/>
</kw>
<status status="PASS" start="2024-05-06T05:04:50.965363" elapsed="10.343629"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:04:50.965092" elapsed="10.343957"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_pets_endpoint</var>
<status status="PASS" start="2024-05-06T05:04:50.964980" elapsed="10.344116"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T05:05:01.310551" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T05:05:01.312550" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T05:05:01.310301" elapsed="0.002296"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T05:05:01.312961" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10008 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10008 ms
Total:          10008 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T05:05:01.312782" elapsed="0.000242"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T05:05:01.313160" elapsed="0.000232"/>
</kw>
<status status="PASS" start="2024-05-06T05:05:01.309982" elapsed="0.003509"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:05:01.309542" elapsed="0.004000"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T05:05:01.309273" elapsed="0.004310"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint">
<kw name="Run HTTPStat POST Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T05:05:01.315865" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T05:05:01.315031" elapsed="0.000922"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:05:01.317339" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order" -method "POST" -body '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:05:01.316403" elapsed="10.337282"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:05:01.316126" elapsed="10.337691"/>
</kw>
<arg>http://0.0.0.0:8080/store/order</arg>
<arg>POST</arg>
<arg>'{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}'</arg>
<status status="PASS" start="2024-05-06T05:05:01.314456" elapsed="10.339473"/>
</kw>
<status status="PASS" start="2024-05-06T05:05:01.314136" elapsed="10.339883"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:05:01.313817" elapsed="10.340259"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-06T05:05:01.313704" elapsed="10.340417"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T05:05:11.656404" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T05:05:11.657785" level="INFO">${API_SERVER_LOG_CONTENTS} = [4:59:21 AM] › [CLI] …  awaiting  Starting Prism…
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=et
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T05:05:11.656182" elapsed="0.001651"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T05:05:11.658218" level="INFO">[4:59:21 AM] › [CLI] …  awaiting  Starting Prism…
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=et
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=pending&amp;status=sold&amp;status=sold&amp;status=sold&amp;status=available
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=vel&amp;tags=ab&amp;tags=nulla
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/2810100060075393
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/2101083298191845
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[4:59:21 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=pending&amp;status=available&amp;status=pending&amp;status=sold&amp;status=available
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=voluptatibus&amp;tags=non&amp;tags=nam
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/-6407392391714335
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-8594265462933455
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/8217899624968469
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-7974920364530939/uploadImage
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/2
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/7173117196881590
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=et&amp;password=cupiditate
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/velit
[4:59:21 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/voluptas
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/doloremque
[4:59:21 AM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
[4:59:55 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[4:59:55 AM] ›     [VALIDATOR] ⚠  warning   Request did not pass the validation rules
[4:59:55 AM] ›     [VALIDATOR] ✖  error     Request body property shipDate must match format "date-time"
[4:59:55 AM] ›     [NEGOTIATOR] ✔  success   Found response 400. I'll try with it.
[4:59:55 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 400
[4:59:55 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "400"
[4:59:55 AM] ›     [VALIDATOR] ✖  error     Violation: request.body.shipDate Request body property shipDate must match format "date-time"
[5:00:05 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:00:05 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:05 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:05 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:16 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:00:16 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:16 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:16 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:26 AM] › [HTTP SERVER] get /no_auth/pets/findByStatus ℹ  info      Request received
[5:00:26 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:26 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:26 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:37 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:00:37 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:37 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:37 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:47 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:00:47 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:47 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:47 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:57 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:00:57 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:57 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:57 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:01:18 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:01:18 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:01:18 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:01:18 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:02:08 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:02:08 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:02:08 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:02:08 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:02:28 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:02:28 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:02:28 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:02:28 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:02:39 AM] › [HTTP SERVER] get /no_auth/pets/findByStatus ℹ  info      Request received
[5:02:39 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:02:39 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:02:39 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:03:29 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:03:29 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:03:29 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:03:29 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:03:40 AM] › [HTTP SERVER] get /no_auth/pets/findByStatus ℹ  info      Request received
[5:03:40 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:03:40 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:03:40 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:04:30 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:04:30 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:04:30 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:04:30 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:04:51 AM] › [HTTP SERVER] get /no_auth/pets/findByStatus ℹ  info      Request received
[5:04:51 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:04:51 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:04:51 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:05:01 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:05:01 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:05:01 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:05:01 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T05:05:11.658000" elapsed="0.001591"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T05:05:11.659760" elapsed="0.000224"/>
</kw>
<status status="PASS" start="2024-05-06T05:05:11.655861" elapsed="0.004217"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:05:11.655416" elapsed="0.004713"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T05:05:11.655144" elapsed="0.005023"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint_with_fuzzed_data">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:05:11.662092" level="INFO">Running command 'echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; /tests/resources/mutational-fuzz-data-order-test.dat'.</msg>
<arg>echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:05:11.661429" elapsed="0.016277"/>
</kw>
<arg>Run</arg>
<arg>echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:05:11.661176" elapsed="0.016716"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:05:11.679587" level="INFO">Running command 'httpstat -o /tests/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @/tests/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order 2&gt;&amp;1'.</msg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:05:11.678270" elapsed="10.020964"/>
</kw>
<arg>Run</arg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:05:11.678085" elapsed="10.021418"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:05:21.702127" level="INFO">Running command 'TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:05:21.700238" elapsed="0.011035"/>
</kw>
<arg>Run</arg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:05:21.699835" elapsed="0.011765"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:05:21.714143" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:05:21.712592" elapsed="0.006371"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:05:21.712071" elapsed="0.007395"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:05:21.721943" level="INFO">Running command 'cat /tests/resources/mutational-fuzz-data-order-test.dat &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:05:21.720346" elapsed="0.010166"/>
</kw>
<arg>Run</arg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:05:21.719912" elapsed="0.010804"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:05:21.732768" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:05:21.731571" elapsed="0.004079"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:05:21.731055" elapsed="0.004803"/>
</kw>
<status status="PASS" start="2024-05-06T05:05:11.660898" elapsed="10.075115"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:05:11.660531" elapsed="10.075569"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint_with_fuzzed_data</var>
<status status="PASS" start="2024-05-06T05:05:11.660287" elapsed="10.075876"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T05:05:21.740331" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T05:05:21.744412" level="INFO">${API_SERVER_LOG_CONTENTS} = [4:59:21 AM] › [CLI] …  awaiting  Starting Prism…
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=et
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T05:05:21.739136" elapsed="0.006426"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T05:05:21.746519" level="INFO">[4:59:21 AM] › [CLI] …  awaiting  Starting Prism…
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=et
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=pending&amp;status=sold&amp;status=sold&amp;status=sold&amp;status=available
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=vel&amp;tags=ab&amp;tags=nulla
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/2810100060075393
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/2101083298191845
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[4:59:21 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=pending&amp;status=available&amp;status=pending&amp;status=sold&amp;status=available
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=voluptatibus&amp;tags=non&amp;tags=nam
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/-6407392391714335
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-8594265462933455
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/8217899624968469
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-7974920364530939/uploadImage
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/2
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/7173117196881590
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=et&amp;password=cupiditate
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/velit
[4:59:21 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/voluptas
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/doloremque
[4:59:21 AM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
[4:59:55 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[4:59:55 AM] ›     [VALIDATOR] ⚠  warning   Request did not pass the validation rules
[4:59:55 AM] ›     [VALIDATOR] ✖  error     Request body property shipDate must match format "date-time"
[4:59:55 AM] ›     [NEGOTIATOR] ✔  success   Found response 400. I'll try with it.
[4:59:55 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 400
[4:59:55 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "400"
[4:59:55 AM] ›     [VALIDATOR] ✖  error     Violation: request.body.shipDate Request body property shipDate must match format "date-time"
[5:00:05 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:00:05 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:05 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:05 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:16 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:00:16 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:16 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:16 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:26 AM] › [HTTP SERVER] get /no_auth/pets/findByStatus ℹ  info      Request received
[5:00:26 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:26 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:26 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:37 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:00:37 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:37 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:37 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:47 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:00:47 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:47 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:47 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:57 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:00:57 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:57 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:57 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:01:18 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:01:18 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:01:18 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:01:18 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:02:08 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:02:08 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:02:08 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:02:08 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:02:28 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:02:28 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:02:28 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:02:28 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:02:39 AM] › [HTTP SERVER] get /no_auth/pets/findByStatus ℹ  info      Request received
[5:02:39 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:02:39 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:02:39 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:03:29 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:03:29 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:03:29 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:03:29 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:03:40 AM] › [HTTP SERVER] get /no_auth/pets/findByStatus ℹ  info      Request received
[5:03:40 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:03:40 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:03:40 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:04:30 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:04:30 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:04:30 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:04:30 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:04:51 AM] › [HTTP SERVER] get /no_auth/pets/findByStatus ℹ  info      Request received
[5:04:51 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:04:51 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:04:51 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:05:01 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:05:01 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:05:01 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:05:01 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:05:11 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:05:11 AM] ›     [VALIDATOR] ⚠  warning   Request did not pass the validation rules
[5:05:11 AM] ›     [VALIDATOR] ✖  error     Request body property shipDate must match format "date-time"
[5:05:11 AM] ›     [NEGOTIATOR] ✔  success   Found response 400. I'll try with it.
[5:05:11 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 400
[5:05:11 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "400"
[5:05:11 AM] ›     [VALIDATOR] ✖  error     Violation: request.body.shipDate Request body property shipDate must match format "date-time"
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T05:05:21.746002" elapsed="0.003114"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T05:05:21.749684" elapsed="0.000720"/>
</kw>
<status status="PASS" start="2024-05-06T05:05:21.737892" elapsed="0.012792"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:05:21.736746" elapsed="0.014100"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T05:05:21.736506" elapsed="0.014430"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_user_endpoint_with_fuzzed_data">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:05:21.756443" level="INFO">Running command 'echo '{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}' | radamsa &gt; /tests/resources/mutational-fuzz-data-user-test.dat'.</msg>
<arg>echo '{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-user-test.dat</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:05:21.754222" elapsed="0.023531"/>
</kw>
<arg>Run</arg>
<arg>echo '{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-user-test.dat</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:05:21.752897" elapsed="0.025038"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:05:21.780198" level="INFO">Running command 'httpstat -o /tests/resources/httpstat-response-mutational-fuzz-data-user-output.json -X POST -H 'Content-Type: application/json' -d @/tests/resources/mutational-fuzz-data-user-test.dat http://0.0.0.0:8080/user 2&gt;&amp;1'.</msg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-user-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-user-test.dat http://0.0.0.0:8080/user</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:05:21.778834" elapsed="10.028541"/>
</kw>
<arg>Run</arg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-user-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-user-test.dat http://0.0.0.0:8080/user</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:05:21.778456" elapsed="10.029030"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:05:31.809017" level="INFO">Running command 'TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-user-test.dat -- Logged this on... $TIMESTAMP :: ========" &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-user-endpoint.log'.</msg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-user-test.dat -- Logged this on... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:05:31.808036" elapsed="0.006173"/>
</kw>
<arg>Run</arg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-user-test.dat -- Logged this on... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:05:31.807678" elapsed="0.006648"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:05:31.815638" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-user-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:05:31.814677" elapsed="0.003613"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:05:31.814502" elapsed="0.003939"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:05:31.820289" level="INFO">Running command 'cat /tests/resources/mutational-fuzz-data-user-test.dat &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-user-endpoint.log'.</msg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-user-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:05:31.819300" elapsed="0.007819"/>
</kw>
<arg>Run</arg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-user-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:05:31.818707" elapsed="0.008543"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:05:31.829902" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-user-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:05:31.828106" elapsed="0.004267"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:05:31.827570" elapsed="0.004908"/>
</kw>
<status status="PASS" start="2024-05-06T05:05:21.752293" elapsed="10.080263"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:05:21.751653" elapsed="10.081034"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_user_endpoint_with_fuzzed_data</var>
<status status="PASS" start="2024-05-06T05:05:21.751404" elapsed="10.081330"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T05:05:31.833821" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T05:05:31.835001" level="INFO">${API_SERVER_LOG_CONTENTS} = [4:59:21 AM] › [CLI] …  awaiting  Starting Prism…
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=et
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T05:05:31.833630" elapsed="0.002269"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T05:05:31.836353" level="INFO">[4:59:21 AM] › [CLI] …  awaiting  Starting Prism…
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=et
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=pending&amp;status=sold&amp;status=sold&amp;status=sold&amp;status=available
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=vel&amp;tags=ab&amp;tags=nulla
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/2810100060075393
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/2101083298191845
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[4:59:21 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=pending&amp;status=available&amp;status=pending&amp;status=sold&amp;status=available
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=voluptatibus&amp;tags=non&amp;tags=nam
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/-6407392391714335
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-8594265462933455
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/8217899624968469
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-7974920364530939/uploadImage
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/2
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/7173117196881590
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[4:59:21 AM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=et&amp;password=cupiditate
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[4:59:21 AM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/velit
[4:59:21 AM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/voluptas
[4:59:21 AM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/doloremque
[4:59:21 AM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
[4:59:55 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[4:59:55 AM] ›     [VALIDATOR] ⚠  warning   Request did not pass the validation rules
[4:59:55 AM] ›     [VALIDATOR] ✖  error     Request body property shipDate must match format "date-time"
[4:59:55 AM] ›     [NEGOTIATOR] ✔  success   Found response 400. I'll try with it.
[4:59:55 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 400
[4:59:55 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "400"
[4:59:55 AM] ›     [VALIDATOR] ✖  error     Violation: request.body.shipDate Request body property shipDate must match format "date-time"
[5:00:05 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:00:05 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:05 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:05 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:16 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:00:16 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:16 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:16 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:26 AM] › [HTTP SERVER] get /no_auth/pets/findByStatus ℹ  info      Request received
[5:00:26 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:26 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:26 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:37 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:00:37 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:37 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:37 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:47 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:00:47 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:47 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:47 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:00:57 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:00:57 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:00:57 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:00:57 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:01:18 AM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[5:01:18 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:01:18 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:01:18 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:02:08 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:02:08 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:02:08 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:02:08 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:02:28 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:02:28 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:02:28 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:02:28 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:02:39 AM] › [HTTP SERVER] get /no_auth/pets/findByStatus ℹ  info      Request received
[5:02:39 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:02:39 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:02:39 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:03:29 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:03:29 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:03:29 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:03:29 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:03:40 AM] › [HTTP SERVER] get /no_auth/pets/findByStatus ℹ  info      Request received
[5:03:40 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:03:40 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:03:40 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:04:30 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:04:30 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:04:30 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:04:30 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:04:51 AM] › [HTTP SERVER] get /no_auth/pets/findByStatus ℹ  info      Request received
[5:04:51 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:04:51 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:04:51 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:05:01 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:05:01 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:05:01 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:05:01 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[5:05:11 AM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[5:05:11 AM] ›     [VALIDATOR] ⚠  warning   Request did not pass the validation rules
[5:05:11 AM] ›     [VALIDATOR] ✖  error     Request body property shipDate must match format "date-time"
[5:05:11 AM] ›     [NEGOTIATOR] ✔  success   Found response 400. I'll try with it.
[5:05:11 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 400
[5:05:11 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "400"
[5:05:11 AM] ›     [VALIDATOR] ✖  error     Violation: request.body.shipDate Request body property shipDate must match format "date-time"
[5:05:21 AM] › [HTTP SERVER] post /user ℹ  info      Request received
[5:05:21 AM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[5:05:21 AM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[5:05:21 AM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T05:05:31.836119" elapsed="0.001867"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T05:05:31.838171" elapsed="0.000209"/>
</kw>
<status status="PASS" start="2024-05-06T05:05:31.833405" elapsed="0.005056"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:05:31.833090" elapsed="0.005414"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T05:05:31.832959" elapsed="0.005577"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_pets_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T05:05:31.840805" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T05:05:31.839940" elapsed="0.001011"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:05:31.842400" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:05:31.841422" elapsed="10.344384"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T05:05:31.841204" elapsed="10.344834"/>
</kw>
<arg>http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-06T05:05:31.839557" elapsed="10.346589"/>
</kw>
<status status="PASS" start="2024-05-06T05:05:31.839250" elapsed="10.346975"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:05:31.838746" elapsed="10.347536"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_pets_endpoint</var>
<status status="PASS" start="2024-05-06T05:05:31.838645" elapsed="10.347682"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T05:05:42.187769" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T05:05:42.189392" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T05:05:42.187571" elapsed="0.001863"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T05:05:42.189765" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10006 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10006 ms
Total:          10007 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T05:05:42.189598" elapsed="0.000312"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T05:05:42.190053" elapsed="0.000190"/>
</kw>
<status status="PASS" start="2024-05-06T05:05:42.187234" elapsed="0.003101"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:05:42.186673" elapsed="0.003712"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T05:05:42.186503" elapsed="0.003923"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_slow_close_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T05:05:42.191353" elapsed="5.015060"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T05:06:17.208607" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T05:05:47.207027" elapsed="30.001816"/>
</kw>
<kw name="Add Slow Close Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Slow Close Toxic to the Vegeta load tests. It will delay the TCP socket from closing until delay has elapsed.</doc>
<status status="PASS" start="2024-05-06T05:06:17.209393" elapsed="5.008329"/>
</kw>
<status status="PASS" start="2024-05-06T05:05:42.191030" elapsed="40.026961"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:05:42.190649" elapsed="40.027605"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_slow_close_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T05:05:42.190539" elapsed="40.027827"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T05:06:22.220890" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T05:06:22.223511" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T05:06:22.220599" elapsed="0.002970"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T05:06:22.224026" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10006 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10006 ms
Total:          10007 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T05:06:22.223798" elapsed="0.001551"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T05:06:22.225568" elapsed="0.000277"/>
</kw>
<status status="PASS" start="2024-05-06T05:06:22.219958" elapsed="0.006020"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T05:06:22.219112" elapsed="0.007052"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T05:06:22.218701" elapsed="0.007531"/>
</iter>
<var>${GRAPHWALKER_PATH_KEYWORD}</var>
<value>@{GRAPHWALKER_CSV_LINES}</value>
<status status="PASS" start="2024-05-06T04:51:00.875585" elapsed="921.350710"/>
</for>
<arg>${GRAPHWALKER_PATH_LINES}</arg>
<status status="PASS" start="2024-05-06T04:51:00.875138" elapsed="921.351266"/>
</kw>
<arg>GraphwalkerPath.csv</arg>
<status status="PASS" start="2024-05-06T04:51:00.867189" elapsed="921.359300"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T05:06:22.231394" elapsed="0.000346"/>
</kw>
<status status="PASS" start="2024-05-06T05:06:22.230724" elapsed="0.001146"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-06T05:06:22.233864" elapsed="0.000129"/>
</kw>
<status status="PASS" start="2024-05-06T05:06:22.233432" elapsed="0.000659"/>
</kw>
<tag>Chaos_Tests</tag>
<tag>Exploratory_Tests</tag>
<tag>Jira_ID1</tag>
<tag>Model-Based_Tests</tag>
<tag>Run_All_Tests</tag>
<tag>Test_ID1</tag>
<status status="PASS" start="2024-05-06T04:51:00.863637" elapsed="921.370678"/>
</test>
<test id="s1-t5" name="VEGETA CHAOS LOAD TESTS - RAMP UP RUNNER : Run the Vegeta Load Tests that connect to Toxiproxy and ramp up." line="50">
<kw name="Automation Section For Slack Notifications">
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-05-06T05:06:22.241175" level="INFO">${AUTOMATION_SECTION_NAME} = VEGETA CHAOS LOAD TESTS - RAMP UP</msg>
<arg>${AUTOMATION_SECTION_NAME}</arg>
<arg>${AUTOMATION_SECTION}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-05-06T05:06:22.240693" elapsed="0.000585"/>
</kw>
<arg>VEGETA CHAOS LOAD TESTS - RAMP UP</arg>
<status status="PASS" start="2024-05-06T05:06:22.239419" elapsed="0.001953"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T05:06:22.241920" elapsed="0.000298"/>
</kw>
<status status="PASS" start="2024-05-06T05:06:22.241633" elapsed="0.000665"/>
</kw>
<kw name="Run Ramp Up Load Test Connected To Toxiproxy">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T05:06:22.249672" level="INFO" html="true">File '&lt;a href="file:///tests/*.bin"&gt;/tests/*.bin&lt;/a&gt;' does not exist.</msg>
<arg>${EXECDIR}/*.bin</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T05:06:22.242980" elapsed="0.006798"/>
</kw>
<kw name="Run Vegeta Ramp Up Load Test" owner="VegetaLoadTestLibrary">
<msg time="2024-05-06T05:17:56.579188" level="INFO">Running Vegeta load test: go run vegeta-load-test-runner.go -rate 50 -duration 30s -url http://0.0.0.0:8080/user/vitae -method GET -output results-0.bin
Vegeta load test executed successfully: Vegeta Load Test Runner - Results
Requests: 1500
Success Rate: 100 %

Running Vegeta load test: go run vegeta-load-test-runner.go -rate 100 -duration 60s -url http://0.0.0.0:8080/user/vitae -method GET -output results-1.bin
Vegeta load test executed successfully: Vegeta Load Test Runner - Results
Requests: 6000
Success Rate: 100 %

Running Vegeta load test: go run vegeta-load-test-runner.go -rate 150 -duration 90s -url http://0.0.0.0:8080/user/vitae -method GET -output results-2.bin
Vegeta load test executed successfully: Vegeta Load Test Runner - Results
Requests: 13500
Success Rate: 100 %

Running Vegeta load test: go run vegeta-load-test-runner.go -rate 200 -duration 120s -url http://0.0.0.0:8080/user/vitae -method GET -output results-3.bin
Vegeta load test executed successfully: Vegeta Load Test Runner - Results
Requests: 24000
Success Rate: 100 %

Running Vegeta load test: go run vegeta-load-test-runner.go -rate 250 -duration 150s -url http://0.0.0.0:8080/user/vitae -method GET -output results-4.bin
Vegeta load test executed successfully: Vegeta Load Test Runner - Results
Requests: 37500
Success Rate: 100 %

Running Vegeta load test: go run vegeta-load-test-runner.go -rate 300 -duration 180s -url http://0.0.0.0:8080/user/vitae -method GET -output results-5.bin
Vegeta load test executed successfully: Vegeta Load Test Runner - Results
Requests: 54000
Success Rate: 100 %</msg>
<arg>http://0.0.0.0:8080/user/vitae</arg>
<arg>GET</arg>
<doc>Runs the vegeta-load-test-runner.go automation with a ramp up mechanism.</doc>
<status status="PASS" start="2024-05-06T05:06:22.249972" elapsed="694.338597"/>
</kw>
<kw name="Move Files" owner="OperatingSystem">
<msg time="2024-05-06T05:17:56.616221" level="INFO" html="true">Moved file from '&lt;a href="file:///tests/results-4.bin"&gt;/tests/results-4.bin&lt;/a&gt;' to '&lt;a href="file:///tests/results/results-4.bin"&gt;/tests/results/results-4.bin&lt;/a&gt;'.</msg>
<msg time="2024-05-06T05:17:56.618770" level="INFO" html="true">Moved file from '&lt;a href="file:///tests/results-5.bin"&gt;/tests/results-5.bin&lt;/a&gt;' to '&lt;a href="file:///tests/results/results-5.bin"&gt;/tests/results/results-5.bin&lt;/a&gt;'.</msg>
<msg time="2024-05-06T05:17:56.620135" level="INFO" html="true">Moved file from '&lt;a href="file:///tests/results-1.bin"&gt;/tests/results-1.bin&lt;/a&gt;' to '&lt;a href="file:///tests/results/results-1.bin"&gt;/tests/results/results-1.bin&lt;/a&gt;'.</msg>
<msg time="2024-05-06T05:17:56.621452" level="INFO" html="true">Moved file from '&lt;a href="file:///tests/results-0.bin"&gt;/tests/results-0.bin&lt;/a&gt;' to '&lt;a href="file:///tests/results/results-0.bin"&gt;/tests/results/results-0.bin&lt;/a&gt;'.</msg>
<msg time="2024-05-06T05:17:56.622992" level="INFO" html="true">Moved file from '&lt;a href="file:///tests/results-2.bin"&gt;/tests/results-2.bin&lt;/a&gt;' to '&lt;a href="file:///tests/results/results-2.bin"&gt;/tests/results/results-2.bin&lt;/a&gt;'.</msg>
<msg time="2024-05-06T05:17:56.624295" level="INFO" html="true">Moved file from '&lt;a href="file:///tests/results-3.bin"&gt;/tests/results-3.bin&lt;/a&gt;' to '&lt;a href="file:///tests/results/results-3.bin"&gt;/tests/results/results-3.bin&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/*.bin</arg>
<arg>${EXECDIR}/results/</arg>
<doc>Moves specified files to the target directory.</doc>
<status status="PASS" start="2024-05-06T05:17:56.594895" elapsed="0.030148"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Vegeta Load Test Completed</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T05:17:56.627841" elapsed="0.001391"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Check the results.bin files found in... ${EXECDIR}/results</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T05:17:56.629566" elapsed="0.000446"/>
</kw>
<status status="PASS" start="2024-05-06T05:06:22.242623" elapsed="694.389945"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T05:17:56.637422" elapsed="0.000679"/>
</kw>
<status status="PASS" start="2024-05-06T05:17:56.634734" elapsed="0.003505"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-06T05:17:56.639881" elapsed="0.000979"/>
</kw>
<status status="PASS" start="2024-05-06T05:17:56.638794" elapsed="0.002188"/>
</kw>
<tag>Chaos_Tests</tag>
<tag>Jira_ID2</tag>
<tag>Load_Tests</tag>
<tag>Run_All_Tests</tag>
<tag>Test_ID2</tag>
<status status="PASS" start="2024-05-06T05:06:22.238414" elapsed="694.402891"/>
</test>
<test id="s1-t6" name="VEGETA CHAOS LOAD TESTS - CUSTOMIZED PARAMETERS RUNNER - POST REQUESTS : Run the Vegeta Load Tests with custom user defined parameters. This can run for seconds, minutes, hours, days etc. as long as the duration is given a valid amount of seconds." line="57">
<kw name="Automation Section For Slack Notifications">
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-05-06T05:17:56.645681" level="INFO">${AUTOMATION_SECTION_NAME} = VEGETA CHAOS LOAD TESTS - CUSTOMIZED PARAMETERS RUNNER - POST REQUESTS</msg>
<arg>${AUTOMATION_SECTION_NAME}</arg>
<arg>${AUTOMATION_SECTION}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-05-06T05:17:56.645140" elapsed="0.000640"/>
</kw>
<arg>VEGETA CHAOS LOAD TESTS - CUSTOMIZED PARAMETERS RUNNER - POST REQUESTS</arg>
<status status="PASS" start="2024-05-06T05:17:56.644532" elapsed="0.001377"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T05:17:56.646642" elapsed="0.000212"/>
</kw>
<status status="PASS" start="2024-05-06T05:17:56.646245" elapsed="0.000715"/>
</kw>
<kw name="Create Base64 JQ Output From Given String">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:17:56.650424" level="INFO">Running command 'echo -n '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | jq -r '@base64' 2&gt;&amp;1'.</msg>
<msg time="2024-05-06T05:17:56.692357" level="INFO">${BASE64_OUTPUT} = eyJpZCI6OSwicGV0SWQiOjksInF1YW50aXR5IjoxLCJzaGlwRGF0ZSI6IjIwMjEtMDctMjlUMDA6MDA6MDAuMDAwWiIsInN0YXR1cyI6InBsYWNlZCIsImNvbXBsZXRlIjp0cnVlfQ==</msg>
<var>${BASE64_OUTPUT}</var>
<arg>echo -n '${STRING_INPUT}' | jq -r '@base64'</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:17:56.649010" elapsed="0.043399"/>
</kw>
<return>
<value>${BASE64_OUTPUT}</value>
<status status="PASS" start="2024-05-06T05:17:56.693253" elapsed="0.002063"/>
</return>
<msg time="2024-05-06T05:17:56.695598" level="INFO">${BASE64_OUTPUT} = eyJpZCI6OSwicGV0SWQiOjksInF1YW50aXR5IjoxLCJzaGlwRGF0ZSI6IjIwMjEtMDctMjlUMDA6MDA6MDAuMDAwWiIsInN0YXR1cyI6InBsYWNlZCIsImNvbXBsZXRlIjp0cnVlfQ==</msg>
<var>${BASE64_OUTPUT}</var>
<arg>{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}</arg>
<status status="PASS" start="2024-05-06T05:17:56.648460" elapsed="0.047171"/>
</kw>
<kw name="Run Custom Vegeta Load Test Connected To Toxiproxy">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T05:17:56.697789" level="INFO" html="true">File '&lt;a href="file:///tests/*.bin"&gt;/tests/*.bin&lt;/a&gt;' does not exist.</msg>
<arg>${EXECDIR}/*.bin</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T05:17:56.696477" elapsed="0.001402"/>
</kw>
<kw name="Run Specific Parameters Vegeta Load Test" owner="VegetaLoadTestLibrary">
<msg time="2024-05-06T05:18:17.056876" level="INFO">Running Vegeta load test: go run vegeta-load-test-runner.go -rate 100 -duration 10s -url http://0.0.0.0:8080/store/order -method POST -body eyJpZCI6OSwicGV0SWQiOjksInF1YW50aXR5IjoxLCJzaGlwRGF0ZSI6IjIwMjEtMDctMjlUMDA6MDA6MDAuMDAwWiIsInN0YXR1cyI6InBsYWNlZCIsImNvbXBsZXRlIjp0cnVlfQ== -output results.bin
Vegeta load test executed successfully: Vegeta Load Test Runner - Results
Requests: 1000
Success Rate: 0 %</msg>
<arg>${USER_DEFINED_TEST_RATE}</arg>
<arg>${USER_DEFINED_TEST_DURATION}</arg>
<arg>${USER_DEFINED_URL}</arg>
<arg>${USER_DEFINED_METHOD}</arg>
<arg>${USER_DEFINED_TEST_REQUEST_BODY}</arg>
<arg>${USER_DEFINED_TEST_OUTPUT_FILE}</arg>
<doc>Runs the vegeta-load-test-runner.go automation with specific given parameters for more customization.</doc>
<status status="PASS" start="2024-05-06T05:17:56.698190" elapsed="20.358810"/>
</kw>
<kw name="Move Files" owner="OperatingSystem">
<msg time="2024-05-06T05:18:17.062724" level="INFO" html="true">Moved file from '&lt;a href="file:///tests/results.bin"&gt;/tests/results.bin&lt;/a&gt;' to '&lt;a href="file:///tests/results/results.bin"&gt;/tests/results/results.bin&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/*.bin</arg>
<arg>${EXECDIR}/results/</arg>
<doc>Moves specified files to the target directory.</doc>
<status status="PASS" start="2024-05-06T05:18:17.057353" elapsed="0.005548"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Vegeta Load Test Completed</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T05:18:17.063191" elapsed="0.000277"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Check the results.bin files found in... ${EXECDIR}/results</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T05:18:17.063620" elapsed="0.000399"/>
</kw>
<arg>http://0.0.0.0:8080/store/order</arg>
<arg>${BASE64_OUTPUT}</arg>
<arg>POST</arg>
<status status="PASS" start="2024-05-06T05:17:56.696044" elapsed="20.368114"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T05:18:17.065277" elapsed="0.000286"/>
</kw>
<status status="PASS" start="2024-05-06T05:18:17.064611" elapsed="0.001036"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-06T05:18:17.067639" elapsed="0.000127"/>
</kw>
<status status="PASS" start="2024-05-06T05:18:17.066354" elapsed="0.001497"/>
</kw>
<tag>Chaos_Tests</tag>
<tag>Jira_ID3</tag>
<tag>Load_Tests</tag>
<tag>Run_All_Tests</tag>
<tag>Test_ID3</tag>
<status status="PASS" start="2024-05-06T05:17:56.642346" elapsed="20.425642"/>
</test>
<test id="s1-t7" name="VEGETA CHAOS LOAD TESTS - CUSTOMIZED PARAMETERS RUNNER - GET REQUESTS : Run the Vegeta Load Tests with custom user defined parameters. This can run for seconds, minutes, hours, days etc. as long as the duration is given a valid amount of seconds." line="65">
<kw name="Automation Section For Slack Notifications">
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-05-06T05:18:17.072068" level="INFO">${AUTOMATION_SECTION_NAME} = VEGETA CHAOS LOAD TESTS - CUSTOMIZED PARAMETERS RUNNER - GET REQUESTS</msg>
<arg>${AUTOMATION_SECTION_NAME}</arg>
<arg>${AUTOMATION_SECTION}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-05-06T05:18:17.071030" elapsed="0.002190"/>
</kw>
<arg>VEGETA CHAOS LOAD TESTS - CUSTOMIZED PARAMETERS RUNNER - GET REQUESTS</arg>
<status status="PASS" start="2024-05-06T05:18:17.069717" elapsed="0.003709"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T05:18:17.074741" elapsed="0.000555"/>
</kw>
<status status="PASS" start="2024-05-06T05:18:17.073865" elapsed="0.001583"/>
</kw>
<kw name="Run Custom Vegeta Load Test Connected To Toxiproxy">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T05:18:17.085620" level="INFO" html="true">File '&lt;a href="file:///tests/*.bin"&gt;/tests/*.bin&lt;/a&gt;' does not exist.</msg>
<arg>${EXECDIR}/*.bin</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T05:18:17.084354" elapsed="0.001361"/>
</kw>
<kw name="Run Specific Parameters Vegeta Load Test" owner="VegetaLoadTestLibrary">
<msg time="2024-05-06T05:18:37.460816" level="INFO">Running Vegeta load test: go run vegeta-load-test-runner.go -rate 100 -duration 10s -url http://0.0.0.0:8080/store/order/9 -method GET -body  -output results.bin
Vegeta load test executed successfully: Vegeta Load Test Runner - Results
Requests: 1000
Success Rate: 100 %</msg>
<arg>${USER_DEFINED_TEST_RATE}</arg>
<arg>${USER_DEFINED_TEST_DURATION}</arg>
<arg>${USER_DEFINED_URL}</arg>
<arg>${USER_DEFINED_METHOD}</arg>
<arg>${USER_DEFINED_TEST_REQUEST_BODY}</arg>
<arg>${USER_DEFINED_TEST_OUTPUT_FILE}</arg>
<doc>Runs the vegeta-load-test-runner.go automation with specific given parameters for more customization.</doc>
<status status="PASS" start="2024-05-06T05:18:17.085880" elapsed="20.375055"/>
</kw>
<kw name="Move Files" owner="OperatingSystem">
<msg time="2024-05-06T05:18:37.465551" level="INFO" html="true">Moved file from '&lt;a href="file:///tests/results.bin"&gt;/tests/results.bin&lt;/a&gt;' to '&lt;a href="file:///tests/results/results.bin"&gt;/tests/results/results.bin&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/*.bin</arg>
<arg>${EXECDIR}/results/</arg>
<doc>Moves specified files to the target directory.</doc>
<status status="PASS" start="2024-05-06T05:18:37.461290" elapsed="0.004437"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Vegeta Load Test Completed</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T05:18:37.465955" elapsed="0.000360"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Check the results.bin files found in... ${EXECDIR}/results</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T05:18:37.466493" elapsed="0.000456"/>
</kw>
<arg>http://0.0.0.0:8080/store/order/9</arg>
<arg>${EMPTY}</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-06T05:18:17.075864" elapsed="20.391356"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T05:18:37.468452" elapsed="0.000306"/>
</kw>
<status status="PASS" start="2024-05-06T05:18:37.467717" elapsed="0.001135"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-06T05:18:37.469613" elapsed="0.000116"/>
</kw>
<status status="PASS" start="2024-05-06T05:18:37.469282" elapsed="0.000529"/>
</kw>
<tag>Chaos_Tests</tag>
<tag>Jira_ID4</tag>
<tag>Load_Tests</tag>
<tag>Run_All_Tests</tag>
<tag>Test_ID4</tag>
<status status="PASS" start="2024-05-06T05:18:17.068448" elapsed="20.401494"/>
</test>
<test id="s1-t8" name="GO TEST FUNCTIONAL TESTS - GET /USER/USERNAME : Analyze the Go Httpstat functional test for a GET request on the /user/vitae API endpoint" line="72">
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T05:18:37.471954" elapsed="0.000434"/>
</kw>
<status status="PASS" start="2024-05-06T05:18:37.471645" elapsed="0.000910"/>
</kw>
<kw name="Analyze Go Test Results">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:18:37.474560" level="INFO">Running command 'cat /tests/resources/go-test-console-results.log | grep vitae 2&gt;&amp;1'.</msg>
<msg time="2024-05-06T05:18:37.485558" level="INFO">${GO_TEST_OUTPUT_CONTENTS} =   "Output": "    --- PASS: TestHTTPRequests/GET_http://0.0.0.0:4010/user/vitae (0.10s)\n"</msg>
<var>${GO_TEST_OUTPUT_CONTENTS}</var>
<arg>cat ${EXECDIR}/resources/go-test-console-results.log | grep ${GO_TEST_OUTPUT_CHECK1}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:18:37.473635" elapsed="0.011970"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T05:18:37.485945" level="INFO">  "Output": "    --- PASS: TestHTTPRequests/GET_http://0.0.0.0:4010/user/vitae (0.10s)\n"</msg>
<arg>${GO_TEST_OUTPUT_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T05:18:37.485783" elapsed="0.000205"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${GO_TEST_OUTPUT_CONTENTS}</arg>
<arg>${GO_TEST_OUTPUT_CHECK2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-06T05:18:37.486096" elapsed="0.000363"/>
</kw>
<arg>vitae</arg>
<arg>PASS</arg>
<status status="PASS" start="2024-05-06T05:18:37.472969" elapsed="0.013559"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T05:18:37.487029" elapsed="0.000288"/>
</kw>
<status status="PASS" start="2024-05-06T05:18:37.486778" elapsed="0.000608"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-06T05:18:37.488049" elapsed="0.000203"/>
</kw>
<status status="PASS" start="2024-05-06T05:18:37.487707" elapsed="0.000637"/>
</kw>
<tag>Functional_Tests</tag>
<tag>Functional_Tests_Analysis</tag>
<tag>Jira_ID5</tag>
<tag>Run_All_Tests</tag>
<tag>Test_ID5</tag>
<status status="PASS" start="2024-05-06T05:18:37.470666" elapsed="0.017794"/>
</test>
<test id="s1-t9" name="GO TEST FUNCTIONAL TESTS - GET /NO_AUTH/PETS/FINDBYSTATUS : Analyze the Go Httpstat functional test for a GET request on the /no_auth/pets/findByStatus API endpoint" line="78">
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T05:18:37.490246" elapsed="0.000254"/>
</kw>
<status status="PASS" start="2024-05-06T05:18:37.489739" elapsed="0.000865"/>
</kw>
<kw name="Analyze Go Test Results">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:18:37.492190" level="INFO">Running command 'cat /tests/resources/go-test-console-results.log | grep findByStatus 2&gt;&amp;1'.</msg>
<msg time="2024-05-06T05:18:37.495544" level="INFO">${GO_TEST_OUTPUT_CONTENTS} =   "Output": "    --- PASS: TestHTTPRequests/GET_http://0.0.0.0:4010/no_auth/pets/findByStatus?status=available (0.02s)\n"</msg>
<var>${GO_TEST_OUTPUT_CONTENTS}</var>
<arg>cat ${EXECDIR}/resources/go-test-console-results.log | grep ${GO_TEST_OUTPUT_CHECK1}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:18:37.491409" elapsed="0.004180"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T05:18:37.496555" level="INFO">  "Output": "    --- PASS: TestHTTPRequests/GET_http://0.0.0.0:4010/no_auth/pets/findByStatus?status=available (0.02s)\n"</msg>
<arg>${GO_TEST_OUTPUT_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T05:18:37.496363" elapsed="0.000242"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${GO_TEST_OUTPUT_CONTENTS}</arg>
<arg>${GO_TEST_OUTPUT_CHECK2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-06T05:18:37.496723" elapsed="0.000168"/>
</kw>
<arg>findByStatus</arg>
<arg>PASS</arg>
<status status="PASS" start="2024-05-06T05:18:37.490859" elapsed="0.006101"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T05:18:37.497597" elapsed="0.000193"/>
</kw>
<status status="PASS" start="2024-05-06T05:18:37.497329" elapsed="0.000546"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-06T05:18:37.498701" elapsed="0.000109"/>
</kw>
<status status="PASS" start="2024-05-06T05:18:37.498374" elapsed="0.000509"/>
</kw>
<tag>Functional_Tests</tag>
<tag>Functional_Tests_Analysis</tag>
<tag>Jira_ID6</tag>
<tag>Run_All_Tests</tag>
<tag>Test_ID6</tag>
<status status="PASS" start="2024-05-06T05:18:37.488922" elapsed="0.010085"/>
</test>
<test id="s1-t10" name="GO TEST FUNCTIONAL TESTS - GET /STORE/ORDER/NUMBER : Analyze the Go Httpstat functional test for a GET request on the /store/order/9 API endpoint" line="84">
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T05:18:37.500443" elapsed="0.000200"/>
</kw>
<status status="PASS" start="2024-05-06T05:18:37.500039" elapsed="0.000709"/>
</kw>
<kw name="Analyze Go Test Results">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:18:37.502806" level="INFO">Running command 'cat /tests/resources/go-test-console-results.log | grep store/order/9 2&gt;&amp;1'.</msg>
<msg time="2024-05-06T05:18:37.506146" level="INFO">${GO_TEST_OUTPUT_CONTENTS} =   "Output": "    --- PASS: TestHTTPRequests/GET_http://0.0.0.0:4010/store/order/9 (0.02s)\n"</msg>
<var>${GO_TEST_OUTPUT_CONTENTS}</var>
<arg>cat ${EXECDIR}/resources/go-test-console-results.log | grep ${GO_TEST_OUTPUT_CHECK1}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:18:37.501441" elapsed="0.004750"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T05:18:37.506545" level="INFO">  "Output": "    --- PASS: TestHTTPRequests/GET_http://0.0.0.0:4010/store/order/9 (0.02s)\n"</msg>
<arg>${GO_TEST_OUTPUT_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T05:18:37.506377" elapsed="0.000216"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${GO_TEST_OUTPUT_CONTENTS}</arg>
<arg>${GO_TEST_OUTPUT_CHECK2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-06T05:18:37.506707" elapsed="0.000157"/>
</kw>
<arg>store/order/9</arg>
<arg>PASS</arg>
<status status="PASS" start="2024-05-06T05:18:37.500974" elapsed="0.005954"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T05:18:37.510725" elapsed="0.000313"/>
</kw>
<status status="PASS" start="2024-05-06T05:18:37.507206" elapsed="0.003994"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-06T05:18:37.511785" elapsed="0.000085"/>
</kw>
<status status="PASS" start="2024-05-06T05:18:37.511502" elapsed="0.000429"/>
</kw>
<tag>Functional_Tests</tag>
<tag>Functional_Tests_Analysis</tag>
<tag>Jira_ID7</tag>
<tag>Run_All_Tests</tag>
<tag>Test_ID7</tag>
<status status="PASS" start="2024-05-06T05:18:37.499385" elapsed="0.012652"/>
</test>
<test id="s1-t11" name="GO TEST FUNCTIONAL TESTS - POST /STORE/ORDER : Analyze the Go Httpstat functional test for a POST request on the /store/order API endpoint. This will create a new order." line="90">
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T05:18:37.513606" elapsed="0.000248"/>
</kw>
<status status="PASS" start="2024-05-06T05:18:37.513318" elapsed="0.000626"/>
</kw>
<kw name="Analyze Go Test Results">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:18:37.515676" level="INFO">Running command 'cat /tests/resources/go-test-console-results.log | grep POST_http://0.0.0.0:4010/store/order 2&gt;&amp;1'.</msg>
<msg time="2024-05-06T05:18:37.522123" level="INFO">${GO_TEST_OUTPUT_CONTENTS} =   "Output": "    --- PASS: TestHTTPRequests/POST_http://0.0.0.0:4010/store/order (0.02s)\n"</msg>
<var>${GO_TEST_OUTPUT_CONTENTS}</var>
<arg>cat ${EXECDIR}/resources/go-test-console-results.log | grep ${GO_TEST_OUTPUT_CHECK1}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:18:37.514727" elapsed="0.007665"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T05:18:37.523086" level="INFO">  "Output": "    --- PASS: TestHTTPRequests/POST_http://0.0.0.0:4010/store/order (0.02s)\n"</msg>
<arg>${GO_TEST_OUTPUT_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T05:18:37.522857" elapsed="0.000468"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${GO_TEST_OUTPUT_CONTENTS}</arg>
<arg>${GO_TEST_OUTPUT_CHECK2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-06T05:18:37.523689" elapsed="0.000359"/>
</kw>
<arg>POST_http://0.0.0.0:4010/store/order</arg>
<arg>PASS</arg>
<status status="PASS" start="2024-05-06T05:18:37.514345" elapsed="0.009981"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T05:18:37.526418" elapsed="0.000661"/>
</kw>
<status status="PASS" start="2024-05-06T05:18:37.525398" elapsed="0.001939"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-06T05:18:37.528851" elapsed="0.000105"/>
</kw>
<status status="PASS" start="2024-05-06T05:18:37.528293" elapsed="0.000738"/>
</kw>
<tag>Functional_Tests</tag>
<tag>Functional_Tests_Analysis</tag>
<tag>Jira_ID8</tag>
<tag>Run_All_Tests</tag>
<tag>Test_ID8</tag>
<status status="PASS" start="2024-05-06T05:18:37.512464" elapsed="0.016694"/>
</test>
<test id="s1-t12" name="GO TEST FUNCTIONAL TESTS - POST /USER : Analyze the Go Httpstat functional test for a POST request on the /user API endpoint. This will create a new user." line="96">
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T05:18:37.530914" elapsed="0.000370"/>
</kw>
<status status="PASS" start="2024-05-06T05:18:37.530528" elapsed="0.001910"/>
</kw>
<kw name="Analyze Go Test Results">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T05:18:37.534132" level="INFO">Running command 'cat /tests/resources/go-test-console-results.log | grep POST_http://0.0.0.0:4010/user 2&gt;&amp;1'.</msg>
<msg time="2024-05-06T05:18:37.537812" level="INFO">${GO_TEST_OUTPUT_CONTENTS} =   "Output": "    --- PASS: TestHTTPRequests/POST_http://0.0.0.0:4010/user (0.02s)\n"</msg>
<var>${GO_TEST_OUTPUT_CONTENTS}</var>
<arg>cat ${EXECDIR}/resources/go-test-console-results.log | grep ${GO_TEST_OUTPUT_CHECK1}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T05:18:37.533240" elapsed="0.004618"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T05:18:37.538348" level="INFO">  "Output": "    --- PASS: TestHTTPRequests/POST_http://0.0.0.0:4010/user (0.02s)\n"</msg>
<arg>${GO_TEST_OUTPUT_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T05:18:37.538153" elapsed="0.000243"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${GO_TEST_OUTPUT_CONTENTS}</arg>
<arg>${GO_TEST_OUTPUT_CHECK2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-06T05:18:37.538516" elapsed="0.000159"/>
</kw>
<arg>POST_http://0.0.0.0:4010/user</arg>
<arg>PASS</arg>
<status status="PASS" start="2024-05-06T05:18:37.532754" elapsed="0.005988"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T05:18:37.539406" elapsed="0.000247"/>
</kw>
<status status="PASS" start="2024-05-06T05:18:37.538963" elapsed="0.000789"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-06T05:18:37.540789" elapsed="0.000118"/>
</kw>
<status status="PASS" start="2024-05-06T05:18:37.540303" elapsed="0.000685"/>
</kw>
<tag>Functional_Tests</tag>
<tag>Functional_Tests_Analysis</tag>
<tag>Jira_ID9</tag>
<tag>Run_All_Tests</tag>
<tag>Test_ID9</tag>
<status status="PASS" start="2024-05-06T05:18:37.529633" elapsed="0.011484"/>
</test>
<status status="PASS" start="2024-05-06T04:50:20.613003" elapsed="1696.933382"/>
</suite>
<statistics>
<total>
<stat pass="12" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="4" fail="0" skip="0">Chaos_Tests</stat>
<stat pass="1" fail="0" skip="0">Exploratory_Tests</stat>
<stat pass="5" fail="0" skip="0">Functional_Tests</stat>
<stat pass="5" fail="0" skip="0">Functional_Tests_Analysis</stat>
<stat pass="1" fail="0" skip="0">Jira_ID1</stat>
<stat pass="1" fail="0" skip="0">Jira_ID2</stat>
<stat pass="1" fail="0" skip="0">Jira_ID3</stat>
<stat pass="1" fail="0" skip="0">Jira_ID4</stat>
<stat pass="1" fail="0" skip="0">Jira_ID5</stat>
<stat pass="1" fail="0" skip="0">Jira_ID6</stat>
<stat pass="1" fail="0" skip="0">Jira_ID7</stat>
<stat pass="1" fail="0" skip="0">Jira_ID8</stat>
<stat pass="1" fail="0" skip="0">Jira_ID9</stat>
<stat pass="3" fail="0" skip="0">Load_Tests</stat>
<stat pass="1" fail="0" skip="0">Model-Based_Tests</stat>
<stat pass="12" fail="0" skip="0">Run_All_Tests</stat>
<stat pass="1" fail="0" skip="0">Test_ID1</stat>
<stat pass="1" fail="0" skip="0">Test_ID2</stat>
<stat pass="1" fail="0" skip="0">Test_ID3</stat>
<stat pass="1" fail="0" skip="0">Test_ID4</stat>
<stat pass="1" fail="0" skip="0">Test_ID5</stat>
<stat pass="1" fail="0" skip="0">Test_ID6</stat>
<stat pass="1" fail="0" skip="0">Test_ID7</stat>
<stat pass="1" fail="0" skip="0">Test_ID8</stat>
<stat pass="1" fail="0" skip="0">Test_ID9</stat>
<stat pass="3" fail="0" skip="0">Tests_Setup</stat>
</tag>
<suite>
<stat pass="12" fail="0" skip="0" id="s1" name="Generic-Automation">Generic-Automation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
