<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.0 (Python 3.12.3 on linux)" generated="2024-05-06T15:26:36.799147" rpa="false" schemaversion="5">
<suite id="s1" name="Generic-Automation" source="/tests/generic-automation.robot">
<test id="s1-t1" name="FUNCTIONAL TESTS SETUP : Start the Prism API Mock Server for the Go Httpstat functional tests and Vegeta Load Tests." line="22">
<kw name="Automation Section For Slack Notifications">
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-05-06T15:26:36.938935" level="INFO">${AUTOMATION_SECTION_NAME} = FUNCTIONAL TESTS SETUP</msg>
<arg>${AUTOMATION_SECTION_NAME}</arg>
<arg>${AUTOMATION_SECTION}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-05-06T15:26:36.937629" elapsed="0.001377"/>
</kw>
<arg>FUNCTIONAL TESTS SETUP</arg>
<status status="PASS" start="2024-05-06T15:26:36.935908" elapsed="0.003195"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T15:26:36.939835" elapsed="0.000386"/>
</kw>
<status status="PASS" start="2024-05-06T15:26:36.939473" elapsed="0.001058"/>
</kw>
<kw name="Start Prism API Mock Server">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:26:36.942500" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:26:36.941598" elapsed="0.001038"/>
</kw>
<kw name="Download And Install Prism" owner="PrismMockServerLibrary">
<doc>Downloads and installs the Prism tool.</doc>
<status status="PASS" start="2024-05-06T15:26:36.942845" elapsed="7.644121"/>
</kw>
<kw name="Start Prism Mock Server" owner="PrismMockServerLibrary">
<doc>Start the Prism tool and create a mock API server.</doc>
<status status="PASS" start="2024-05-06T15:26:44.587675" elapsed="5.012823"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Prism Mock Server Started</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T15:26:49.600715" elapsed="0.001876"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Check the Mock API log found in... ${EXECDIR}/resources/api-application.log</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T15:26:49.602834" elapsed="0.005067"/>
</kw>
<status status="PASS" start="2024-05-06T15:26:36.940913" elapsed="12.669093"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T15:26:49.613940" elapsed="0.002999"/>
</kw>
<status status="PASS" start="2024-05-06T15:26:49.610394" elapsed="0.006641"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-06T15:26:49.619482" elapsed="0.001116"/>
</kw>
<status status="PASS" start="2024-05-06T15:26:49.618556" elapsed="0.002125"/>
</kw>
<tag>Run_All_Tests</tag>
<tag>Tests_Setup</tag>
<status status="PASS" start="2024-05-06T15:26:36.934815" elapsed="12.686553"/>
</test>
<test id="s1-t2" name="CHAOS AND LOAD TESTS SETUP : Start the Toxiproxy TCP Chaos Proxy." line="29">
<kw name="Automation Section For Slack Notifications">
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-05-06T15:26:49.625025" level="INFO">${AUTOMATION_SECTION_NAME} = CHAOS AND LOAD TESTS SETUP</msg>
<arg>${AUTOMATION_SECTION_NAME}</arg>
<arg>${AUTOMATION_SECTION}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-05-06T15:26:49.624110" elapsed="0.000983"/>
</kw>
<arg>CHAOS AND LOAD TESTS SETUP</arg>
<status status="PASS" start="2024-05-06T15:26:49.623147" elapsed="0.002024"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T15:26:49.625818" elapsed="0.000193"/>
</kw>
<status status="PASS" start="2024-05-06T15:26:49.625539" elapsed="0.000561"/>
</kw>
<kw name="Start Toxiproxy TCP Proxy">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:26:49.632080" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/toxiproxy.log"&gt;/tests/resources/toxiproxy.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/toxiproxy.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:26:49.626964" elapsed="0.005221"/>
</kw>
<kw name="Start Toxiproxy Server" owner="ToxiproxyChaosTestLibrary">
<doc>Start the Toxiproxy server.</doc>
<status status="PASS" start="2024-05-06T15:26:49.632506" elapsed="5.004049"/>
</kw>
<kw name="Create TCP Chaos Proxy" owner="ToxiproxyChaosTestLibrary">
<doc>Create a TCP Chaos Proxy for the Vegeta load tests.</doc>
<status status="PASS" start="2024-05-06T15:26:54.636759" elapsed="5.008788"/>
</kw>
<kw name="Add Limited Bandwidth Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Limited Bandwidth Toxic to the Vegeta load tests. It will limit a connection to a maximum number of kilobytes per second.</doc>
<status status="PASS" start="2024-05-06T15:26:59.645768" elapsed="5.004189"/>
</kw>
<kw name="Add Slow Close Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Slow Close Toxic to the Vegeta load tests. It will delay the TCP socket from closing until delay has elapsed.</doc>
<status status="PASS" start="2024-05-06T15:27:04.650657" elapsed="5.015811"/>
</kw>
<kw name="Add Latency Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Latency Toxic to the Vegeta load tests. It will add a delay to all data going through the proxy.</doc>
<status status="PASS" start="2024-05-06T15:27:09.667031" elapsed="5.021553"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Toxiproxy Server Started</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T15:27:14.692451" elapsed="0.001863"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Check the Toxiproxy log found in... ${EXECDIR}/resources/toxiproxy.log</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T15:27:14.695830" elapsed="0.003814"/>
</kw>
<status status="PASS" start="2024-05-06T15:26:49.626524" elapsed="25.073300"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T15:27:14.705262" elapsed="0.001714"/>
</kw>
<status status="PASS" start="2024-05-06T15:27:14.702283" elapsed="0.005330"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-06T15:27:14.714895" elapsed="0.000609"/>
</kw>
<status status="PASS" start="2024-05-06T15:27:14.708094" elapsed="0.007555"/>
</kw>
<tag>Run_All_Tests</tag>
<tag>Tests_Setup</tag>
<status status="PASS" start="2024-05-06T15:26:49.622562" elapsed="25.093253"/>
</test>
<test id="s1-t3" name="MODEL-BASED CHAOS TESTS SETUP : Create a new Graphwalker Path File for the Model-Based Chaos Tests. The Graphwalker Model combines API Functional Test, Chaos Test, and Mutational Fuzz Test strategies." line="36">
<kw name="Automation Section For Slack Notifications">
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-05-06T15:27:14.732071" level="INFO">${AUTOMATION_SECTION_NAME} = MODEL-BASED CHAOS TESTS SETUP</msg>
<arg>${AUTOMATION_SECTION_NAME}</arg>
<arg>${AUTOMATION_SECTION}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-05-06T15:27:14.730003" elapsed="0.003613"/>
</kw>
<arg>MODEL-BASED CHAOS TESTS SETUP</arg>
<status status="PASS" start="2024-05-06T15:27:14.726779" elapsed="0.012818"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T15:27:14.750201" elapsed="0.000623"/>
</kw>
<status status="PASS" start="2024-05-06T15:27:14.741822" elapsed="0.011035"/>
</kw>
<kw name="Create Graphwalker Path File">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:27:14.781979" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/GraphwalkerPath.csv"&gt;/tests/resources/GraphwalkerPath.csv&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/GraphwalkerPath.csv</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:27:14.766604" elapsed="0.017961"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:27:14.833681" level="INFO">Running command 'java -jar /usr/bin/graphwalker-cli-4.3.2.jar offline --start-element send_get_request_to_user_endpoint --model /tests/resources/GraphwalkerModel.graphml "random(edge_coverage(100))" | jq -r '.currentElementName' &gt;&gt; /tests/resources/GraphwalkerPath.csv'.</msg>
<arg>java -jar /usr/bin/graphwalker-cli-4.3.2.jar offline --start-element send_get_request_to_user_endpoint --model ${EXECDIR}/resources/GraphwalkerModel.graphml "random(edge_coverage(100))" | jq -r '.currentElementName' &gt;&gt; ${EXECDIR}/resources/GraphwalkerPath.csv</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:27:14.795264" elapsed="5.911043"/>
</kw>
<arg>Run</arg>
<arg>java -jar /usr/bin/graphwalker-cli-4.3.2.jar offline --start-element send_get_request_to_user_endpoint --model ${EXECDIR}/resources/GraphwalkerModel.graphml "random(edge_coverage(100))" | jq -r '.currentElementName' &gt;&gt; ${EXECDIR}/resources/GraphwalkerPath.csv</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:27:14.793305" elapsed="5.913604"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Graphwalker Path File Created</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T15:27:20.707267" elapsed="0.000340"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Check the Graphwalker Path File found in... ${EXECDIR}/resources/GraphwalkerPath.csv</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T15:27:20.707840" elapsed="0.000366"/>
</kw>
<status status="PASS" start="2024-05-06T15:27:14.756843" elapsed="5.951543"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T15:27:20.709180" elapsed="0.000371"/>
</kw>
<status status="PASS" start="2024-05-06T15:27:20.708772" elapsed="0.000901"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-06T15:27:20.710659" elapsed="0.000159"/>
</kw>
<status status="PASS" start="2024-05-06T15:27:20.710070" elapsed="0.000865"/>
</kw>
<tag>Run_All_Tests</tag>
<tag>Tests_Setup</tag>
<status status="PASS" start="2024-05-06T15:27:14.719161" elapsed="5.991928"/>
</test>
<test id="s1-t4" name="MODEL-BASED CHAOS TESTS RUNNER - Test_ID1 : Run the Graphwalker Path File for the Model-Based Chaos Tests. The Graphwalker Model combines API Functional Test, Chaos Test, and Mutational Fuzz Test strategies." line="43">
<kw name="Automation Section For Slack Notifications">
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-05-06T15:27:20.714035" level="INFO">${AUTOMATION_SECTION_NAME} = MODEL-BASED CHAOS TESTS RUNNER</msg>
<arg>${AUTOMATION_SECTION_NAME}</arg>
<arg>${AUTOMATION_SECTION}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-05-06T15:27:20.713658" elapsed="0.000455"/>
</kw>
<arg>MODEL-BASED CHAOS TESTS RUNNER</arg>
<status status="PASS" start="2024-05-06T15:27:20.713010" elapsed="0.001218"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T15:27:20.715084" elapsed="0.000380"/>
</kw>
<status status="PASS" start="2024-05-06T15:27:20.714631" elapsed="0.000947"/>
</kw>
<kw name="Run Graphwalker Model Based Tests">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:27:20.716720" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/GraphwalkerPath.csv"&gt;/tests/resources/GraphwalkerPath.csv&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:27:20.720305" level="INFO">${GRAPHWALKER_CSV_FILE_CONTENTS} = send_get_request_to_user_endpoint
check_api_response_log_files
add_toxiproxy_limited_bandwidth_then_send_user_get_request
check_api_response_log_files
add_toxiproxy_latency_then_send_user_get_request
...</msg>
<var>${GRAPHWALKER_CSV_FILE_CONTENTS}</var>
<arg>${EXECDIR}/resources/${GRAPHWALKER_CSV_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:27:20.716318" elapsed="0.004062"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:27:20.720929" level="INFO">send_get_request_to_user_endpoint
check_api_response_log_files
add_toxiproxy_limited_bandwidth_then_send_user_get_request
check_api_response_log_files
add_toxiproxy_latency_then_send_user_get_request
check_api_response_log_files
add_toxiproxy_latency_then_send_user_get_request
check_api_response_log_files
add_toxiproxy_limited_bandwidth_then_send_user_get_request
check_api_response_log_files
add_toxiproxy_limited_bandwidth_then_send_user_get_request
check_api_response_log_files
add_toxiproxy_limited_bandwidth_then_send_user_get_request
check_api_response_log_files
add_toxiproxy_slow_close_then_send_user_get_request
check_api_response_log_files
send_post_request_to_user_endpoint
check_server_log_files
send_post_request_to_order_endpoint_with_fuzzed_data
check_server_log_files
send_get_request_to_pets_endpoint
check_api_response_log_files
add_toxiproxy_limited_bandwidth_then_send_user_get_request
check_api_response_log_files
add_toxiproxy_latency_then_send_user_get_request
check_api_response_log_files
add_toxiproxy_latency_then_send_user_get_request
check_api_response_log_files
send_post_request_to_user_endpoint
check_server_log_files
send_post_request_to_user_endpoint_with_fuzzed_data
check_server_log_files
send_post_request_to_order_endpoint_with_fuzzed_data
check_server_log_files
send_post_request_to_user_endpoint_with_fuzzed_data
check_server_log_files
send_get_request_to_order_endpoint
check_api_response_log_files
send_post_request_to_order_endpoint
check_server_log_files
send_get_request_to_pets_endpoint
check_api_response_log_files
send_post_request_to_user_endpoint
check_server_log_files
send_get_request_to_pets_endpoint
check_api_response_log_files
add_toxiproxy_latency_then_send_user_get_request
check_api_response_log_files
add_toxiproxy_limited_bandwidth_then_send_user_get_request
check_api_response_log_files
add_toxiproxy_limited_bandwidth_then_send_user_get_request
check_api_response_log_files
send_post_request_to_user_endpoint
check_server_log_files
send_get_request_to_order_endpoint
check_api_response_log_files
send_post_request_to_order_endpoint
check_server_log_files
send_get_request_to_order_endpoint
check_api_response_log_files
add_toxiproxy_limited_bandwidth_then_send_user_get_request
check_api_response_log_files
send_post_request_to_order_endpoint
check_server_log_files
send_get_request_to_order_endpoint
check_api_response_log_files
send_post_request_to_order_endpoint
check_server_log_files
send_get_request_to_order_endpoint
check_api_response_log_files
add_toxiproxy_latency_then_send_user_get_request
check_api_response_log_files
add_toxiproxy_slow_close_then_send_user_get_request
check_api_response_log_files
add_toxiproxy_latency_then_send_user_get_request
check_api_response_log_files
add_toxiproxy_slow_close_then_send_user_get_request
check_api_response_log_files
send_post_request_to_user_endpoint
check_server_log_files
send_get_request_to_pets_endpoint
check_api_response_log_files
send_post_request_to_order_endpoint
check_server_log_files
send_get_request_to_order_endpoint
check_api_response_log_files
add_toxiproxy_latency_then_send_user_get_request
check_api_response_log_files
add_toxiproxy_latency_then_send_user_get_request
check_api_response_log_files
send_post_request_to_order_endpoint
check_server_log_files
send_get_request_to_pets_endpoint
check_api_response_log_files
add_toxiproxy_slow_close_then_send_user_get_request
check_api_response_log_files
add_toxiproxy_limited_bandwidth_then_send_user_get_request
check_api_response_log_files
send_post_request_to_order_endpoint
check_server_log_files
send_get_request_to_pets_endpoint
check_api_response_log_files
add_toxiproxy_limited_bandwidth_then_send_user_get_request
check_api_response_log_files
add_toxiproxy_latency_then_send_user_get_request
check_api_response_log_files
send_post_request_to_order_endpoint
check_server_log_files
send_get_request_to_order_endpoint
check_api_response_log_files
add_toxiproxy_limited_bandwidth_then_send_user_get_request
check_api_response_log_files
add_toxiproxy_latency_then_send_user_get_request
check_api_response_log_files
add_toxiproxy_limited_bandwidth_then_send_user_get_request
check_api_response_log_files
send_post_request_to_order_endpoint
check_server_log_files
send_get_request_to_pets_endpoint
check_api_response_log_files
add_toxiproxy_limited_bandwidth_then_send_user_get_request
check_api_response_log_files
send_post_request_to_user_endpoint
check_server_log_files
send_post_request_to_user_endpoint_with_fuzzed_data
check_server_log_files
send_post_request_to_order_endpoint_with_fuzzed_data
check_server_log_files
send_get_request_to_pets_endpoint
check_api_response_log_files
add_toxiproxy_limited_bandwidth_then_send_user_get_request
check_api_response_log_files
send_post_request_to_user_endpoint
check_server_log_files
restart_server
check_server_log_files
</msg>
<arg>${GRAPHWALKER_CSV_FILE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:27:20.720682" elapsed="0.001649"/>
</kw>
<kw name="Get Graphwalker Path Keywords From CSV File">
<kw name="Split To Lines" owner="String">
<msg time="2024-05-06T15:27:20.723668" level="INFO">136 lines returned</msg>
<msg time="2024-05-06T15:27:20.723948" level="INFO">@{GRAPHWALKER_LINES} = [ send_get_request_to_user_endpoint | check_api_response_log_files | add_toxiproxy_limited_bandwidth_then_send_user_get_request | check_api_response_log_files | add_toxiproxy_latency_then_send_user_ge...</msg>
<var>@{GRAPHWALKER_LINES}</var>
<arg>${GRAPHWALKER_CSV_CONTENT}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2024-05-06T15:27:20.723360" elapsed="0.000636"/>
</kw>
<return>
<value>@{GRAPHWALKER_LINES}</value>
<status status="PASS" start="2024-05-06T15:27:20.724085" elapsed="0.000094"/>
</return>
<msg time="2024-05-06T15:27:20.724693" level="INFO">@{GRAPHWALKER_PATH_LINES} = [ send_get_request_to_user_endpoint | check_api_response_log_files | add_toxiproxy_limited_bandwidth_then_send_user_get_request | check_api_response_log_files | add_toxiproxy_latency_then_send_user_ge...</msg>
<var>@{GRAPHWALKER_PATH_LINES}</var>
<arg>${GRAPHWALKER_CSV_FILE_CONTENTS}</arg>
<status status="PASS" start="2024-05-06T15:27:20.722875" elapsed="0.001870"/>
</kw>
<kw name="Run Graphwalker Path Keywords">
<for flavor="IN">
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_user_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:27:20.743264" level="INFO" html="true">File '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;' does not exist.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:27:20.741703" elapsed="0.001897"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:27:20.745262" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/user/vitae" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:27:20.744130" elapsed="11.859899"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:27:20.743880" elapsed="11.860957"/>
</kw>
<arg>http://0.0.0.0:8080/user/vitae</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-06T15:27:20.741179" elapsed="11.863828"/>
</kw>
<status status="PASS" start="2024-05-06T15:27:20.740328" elapsed="11.865319"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:27:20.726564" elapsed="11.879823"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_user_endpoint</var>
<status status="PASS" start="2024-05-06T15:27:20.726297" elapsed="11.881594"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:27:32.611435" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:27:32.613856" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/user/vitae
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"username":"string","firstName":"string","lastName":"string","emai...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:27:32.611128" elapsed="0.002804"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:27:32.614758" level="INFO">--------------
URL: http://0.0.0.0:8080/user/vitae
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"username":"string","firstName":"string","lastName":"string","email":"string","password":"string","phone":"string","userStatus":-2147483648}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:      73 ms
TLS handshake:        0 ms
Server processing: 10388 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:          73 ms
Pre Transfer:     73 ms
Start Transfer: 10462 ms
Total:          10462 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:27:32.614319" elapsed="0.000520"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:27:32.615190" elapsed="0.000394"/>
</kw>
<status status="PASS" start="2024-05-06T15:27:32.610665" elapsed="0.005065"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:27:32.609561" elapsed="0.006237"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:27:32.608081" elapsed="0.007785"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_limited_bandwidth_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T15:27:32.618200" elapsed="5.022472"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T15:28:07.648823" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T15:27:37.643546" elapsed="30.008051"/>
</kw>
<kw name="Add Limited Bandwidth Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Limited Bandwidth Toxic to the Vegeta load tests. It will limit a connection to a maximum number of kilobytes per second.</doc>
<status status="PASS" start="2024-05-06T15:28:07.656078" elapsed="5.015418"/>
</kw>
<status status="PASS" start="2024-05-06T15:27:32.617292" elapsed="40.055131"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:27:32.616301" elapsed="40.056671"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_limited_bandwidth_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T15:27:32.616077" elapsed="40.057336"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:28:12.679482" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:28:12.681615" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/user/vitae
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"username":"string","firstName":"string","lastName":"string","emai...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:28:12.678669" elapsed="0.003055"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:28:12.682874" level="INFO">--------------
URL: http://0.0.0.0:8080/user/vitae
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"username":"string","firstName":"string","lastName":"string","email":"string","password":"string","phone":"string","userStatus":-2147483648}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:      73 ms
TLS handshake:        0 ms
Server processing: 10388 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:          73 ms
Pre Transfer:     73 ms
Start Transfer: 10462 ms
Total:          10462 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:28:12.682398" elapsed="0.000591"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:28:12.683303" elapsed="0.000326"/>
</kw>
<status status="PASS" start="2024-05-06T15:28:12.677740" elapsed="0.005973"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:28:12.675499" elapsed="0.008266"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:28:12.675135" elapsed="0.008676"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_latency_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T15:28:12.684858" elapsed="5.023349"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T15:28:47.711520" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T15:28:17.708501" elapsed="30.003149"/>
</kw>
<kw name="Add Latency Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Latency Toxic to the Vegeta load tests. It will add a delay to all data going through the proxy.</doc>
<status status="PASS" start="2024-05-06T15:28:47.712023" elapsed="5.016318"/>
</kw>
<status status="PASS" start="2024-05-06T15:28:12.684449" elapsed="40.044111"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:28:12.684090" elapsed="40.044569"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_latency_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T15:28:12.683962" elapsed="40.044770"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:28:52.743374" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:28:52.745039" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/user/vitae
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"username":"string","firstName":"string","lastName":"string","emai...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:28:52.743146" elapsed="0.001942"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:28:52.745509" level="INFO">--------------
URL: http://0.0.0.0:8080/user/vitae
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"username":"string","firstName":"string","lastName":"string","email":"string","password":"string","phone":"string","userStatus":-2147483648}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:      73 ms
TLS handshake:        0 ms
Server processing: 10388 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:          73 ms
Pre Transfer:     73 ms
Start Transfer: 10462 ms
Total:          10462 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:28:52.745299" elapsed="0.000283"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:28:52.745739" elapsed="0.000313"/>
</kw>
<status status="PASS" start="2024-05-06T15:28:52.741018" elapsed="0.006044"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:28:52.729349" elapsed="0.018596"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:28:52.729097" elapsed="0.018920"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_latency_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T15:28:52.749053" elapsed="5.238182"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T15:29:27.989655" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T15:28:57.987593" elapsed="30.002274"/>
</kw>
<kw name="Add Latency Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Latency Toxic to the Vegeta load tests. It will add a delay to all data going through the proxy.</doc>
<status status="PASS" start="2024-05-06T15:29:27.990226" elapsed="5.015681"/>
</kw>
<status status="PASS" start="2024-05-06T15:28:52.748708" elapsed="40.257458"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:28:52.748325" elapsed="40.257971"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_latency_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T15:28:52.748179" elapsed="40.258289"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:29:33.008605" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:29:33.011009" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/user/vitae
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"username":"string","firstName":"string","lastName":"string","emai...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:29:33.008223" elapsed="0.002868"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:29:33.011834" level="INFO">--------------
URL: http://0.0.0.0:8080/user/vitae
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"username":"string","firstName":"string","lastName":"string","email":"string","password":"string","phone":"string","userStatus":-2147483648}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:      73 ms
TLS handshake:        0 ms
Server processing: 10388 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:          73 ms
Pre Transfer:     73 ms
Start Transfer: 10462 ms
Total:          10462 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:29:33.011492" elapsed="0.000434"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:29:33.012119" elapsed="0.000325"/>
</kw>
<status status="PASS" start="2024-05-06T15:29:33.007719" elapsed="0.004864"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:29:33.006994" elapsed="0.005660"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:29:33.006754" elapsed="0.005953"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_limited_bandwidth_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T15:29:33.014003" elapsed="5.031722"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T15:30:08.047431" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T15:29:38.046163" elapsed="30.001396"/>
</kw>
<kw name="Add Limited Bandwidth Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Limited Bandwidth Toxic to the Vegeta load tests. It will limit a connection to a maximum number of kilobytes per second.</doc>
<status status="PASS" start="2024-05-06T15:30:08.048498" elapsed="5.004351"/>
</kw>
<status status="PASS" start="2024-05-06T15:29:33.013608" elapsed="40.039448"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:29:33.013035" elapsed="40.040118"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_limited_bandwidth_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T15:29:33.012874" elapsed="40.040351"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:30:13.055315" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:30:13.057624" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/user/vitae
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"username":"string","firstName":"string","lastName":"string","emai...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:30:13.055027" elapsed="0.003877"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:30:13.059522" level="INFO">--------------
URL: http://0.0.0.0:8080/user/vitae
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"username":"string","firstName":"string","lastName":"string","email":"string","password":"string","phone":"string","userStatus":-2147483648}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:      73 ms
TLS handshake:        0 ms
Server processing: 10388 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:          73 ms
Pre Transfer:     73 ms
Start Transfer: 10462 ms
Total:          10462 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:30:13.059152" elapsed="0.000447"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:30:13.059757" elapsed="0.000214"/>
</kw>
<status status="PASS" start="2024-05-06T15:30:13.054536" elapsed="0.005543"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:30:13.053828" elapsed="0.006309"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:30:13.053582" elapsed="0.006600"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_limited_bandwidth_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T15:30:13.061175" elapsed="5.031795"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T15:30:48.095565" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T15:30:18.093552" elapsed="30.002252"/>
</kw>
<kw name="Add Limited Bandwidth Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Limited Bandwidth Toxic to the Vegeta load tests. It will limit a connection to a maximum number of kilobytes per second.</doc>
<status status="PASS" start="2024-05-06T15:30:48.096330" elapsed="5.012101"/>
</kw>
<status status="PASS" start="2024-05-06T15:30:13.060882" elapsed="40.047815"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:30:13.060504" elapsed="40.048320"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_limited_bandwidth_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T15:30:13.060313" elapsed="40.048613"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:30:53.111608" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:30:53.114077" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/user/vitae
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"username":"string","firstName":"string","lastName":"string","emai...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:30:53.111322" elapsed="0.002827"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:30:53.114682" level="INFO">--------------
URL: http://0.0.0.0:8080/user/vitae
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"username":"string","firstName":"string","lastName":"string","email":"string","password":"string","phone":"string","userStatus":-2147483648}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:      73 ms
TLS handshake:        0 ms
Server processing: 10388 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:          73 ms
Pre Transfer:     73 ms
Start Transfer: 10462 ms
Total:          10462 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:30:53.114457" elapsed="0.000310"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:30:53.115062" elapsed="0.000260"/>
</kw>
<status status="PASS" start="2024-05-06T15:30:53.110670" elapsed="0.004782"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:30:53.109710" elapsed="0.005810"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:30:53.109396" elapsed="0.006177"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_limited_bandwidth_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T15:30:53.116778" elapsed="5.034640"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T15:31:28.153802" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T15:30:58.151948" elapsed="30.002092"/>
</kw>
<kw name="Add Limited Bandwidth Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Limited Bandwidth Toxic to the Vegeta load tests. It will limit a connection to a maximum number of kilobytes per second.</doc>
<status status="PASS" start="2024-05-06T15:31:28.154576" elapsed="5.014325"/>
</kw>
<status status="PASS" start="2024-05-06T15:30:53.116421" elapsed="40.052929"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:30:53.115951" elapsed="40.053497"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_limited_bandwidth_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T15:30:53.115727" elapsed="40.053782"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:31:33.176565" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:31:33.184092" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/user/vitae
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"username":"string","firstName":"string","lastName":"string","emai...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:31:33.175428" elapsed="0.008851"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:31:33.187687" level="INFO">--------------
URL: http://0.0.0.0:8080/user/vitae
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"username":"string","firstName":"string","lastName":"string","email":"string","password":"string","phone":"string","userStatus":-2147483648}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:      73 ms
TLS handshake:        0 ms
Server processing: 10388 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:          73 ms
Pre Transfer:     73 ms
Start Transfer: 10462 ms
Total:          10462 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:31:33.187248" elapsed="0.000549"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:31:33.188069" elapsed="0.000429"/>
</kw>
<status status="PASS" start="2024-05-06T15:31:33.174357" elapsed="0.014304"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:31:33.171192" elapsed="0.017552"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:31:33.170665" elapsed="0.018142"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_slow_close_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T15:31:33.191002" elapsed="5.040226"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T15:32:08.233014" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T15:31:38.231521" elapsed="30.001680"/>
</kw>
<kw name="Add Slow Close Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Slow Close Toxic to the Vegeta load tests. It will delay the TCP socket from closing until delay has elapsed.</doc>
<status status="PASS" start="2024-05-06T15:32:08.233519" elapsed="5.007755"/>
</kw>
<status status="PASS" start="2024-05-06T15:31:33.189933" elapsed="40.051498"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:31:33.189257" elapsed="40.052395"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_slow_close_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T15:31:33.189007" elapsed="40.052762"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:32:13.243552" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:32:13.245530" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/user/vitae
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"username":"string","firstName":"string","lastName":"string","emai...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:32:13.243306" elapsed="0.002280"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:32:13.245999" level="INFO">--------------
URL: http://0.0.0.0:8080/user/vitae
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"username":"string","firstName":"string","lastName":"string","email":"string","password":"string","phone":"string","userStatus":-2147483648}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:      73 ms
TLS handshake:        0 ms
Server processing: 10388 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:          73 ms
Pre Transfer:     73 ms
Start Transfer: 10462 ms
Total:          10462 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:32:13.245794" elapsed="0.000278"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:32:13.246229" elapsed="0.000208"/>
</kw>
<status status="PASS" start="2024-05-06T15:32:13.242977" elapsed="0.003631"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:32:13.242405" elapsed="0.004266"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:32:13.242080" elapsed="0.004636"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_user_endpoint">
<kw name="Run HTTPStat POST Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:32:13.251383" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:32:13.248050" elapsed="0.003576"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:32:13.254528" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/user" -method "POST" -body '{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}' &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:32:13.252100" elapsed="11.653168"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:32:13.251870" elapsed="11.653513"/>
</kw>
<arg>http://0.0.0.0:8080/user</arg>
<arg>POST</arg>
<arg>'{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}'</arg>
<status status="PASS" start="2024-05-06T15:32:13.247696" elapsed="11.657783"/>
</kw>
<status status="PASS" start="2024-05-06T15:32:13.247357" elapsed="11.658288"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:32:13.247022" elapsed="11.658674"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_user_endpoint</var>
<status status="PASS" start="2024-05-06T15:32:13.246860" elapsed="11.659620"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:32:24.908769" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:32:24.910792" level="INFO">${API_SERVER_LOG_CONTENTS} = [3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a documen...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:32:24.908297" elapsed="0.002586"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:32:24.911266" level="INFO">[3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a document file. Can be both a file or a fetchable resource on the web.  [string] [required]

Options:
      --version                           Show version number  [boolean]
      --help                              Show help  [boolean]
  -p, --port                              Port that Prism will run on.  [number] [required] [default: 4010]
  -h, --host                              Host that Prism will listen to.  [string] [required] [default: "127.0.0.1"]
      --cors                              Enables CORS headers.  [boolean] [default: true]
  -m, --multiprocess                      Forks the http server from the CLI for faster log processing.  [boolean] [default: false]
      --errors                            Specifies whether request/response violations marked as errors will produce an error response  [boolean] [required] [default: false]
  -v, --verboseLevel                      Turns on verbose logging.  [required] [choices: "trace", "debug", "info", "warn", "error", "fatal", "silent"] [default: "info"]
  -d, --dynamic                           Dynamically generate examples.  [boolean] [default: false]
      --json-schema-faker-fillProperties  Generate additional properties when using dynamic generation.  [boolean]
      --ignoreExamples                    Tell Prism to treat the spec as though it has no examples. When in static mode,
                                                                  returns an example that has not been generated using json-schema-faker, but was
                                                                  created by Prism. When in dynamic mode, this flag is ignored, since in dynamic mode,
                                                                  examples are not consulted and json-schema-faker is used to generate a response based
                                                                  on the schema defined in the spec  [boolean] [default: false]

listen EADDRINUSE: address already in use 0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:32:24.911081" elapsed="0.000287"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:32:24.911560" elapsed="0.000200"/>
</kw>
<status status="PASS" start="2024-05-06T15:32:24.907727" elapsed="0.004160"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:32:24.906943" elapsed="0.004994"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T15:32:24.906763" elapsed="0.005210"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint_with_fuzzed_data">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:32:24.913711" level="INFO">Running command 'echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; /tests/resources/mutational-fuzz-data-order-test.dat'.</msg>
<arg>echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:32:24.912993" elapsed="0.022017"/>
</kw>
<arg>Run</arg>
<arg>echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:32:24.912837" elapsed="0.022275"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:32:24.936230" level="INFO">Running command 'httpstat -o /tests/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @/tests/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order 2&gt;&amp;1'.</msg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:32:24.935557" elapsed="10.037483"/>
</kw>
<arg>Run</arg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:32:24.935296" elapsed="10.038079"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:32:34.976194" level="INFO">Running command 'TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:32:34.974678" elapsed="0.010346"/>
</kw>
<arg>Run</arg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:32:34.973735" elapsed="0.011398"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:32:34.986582" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:32:34.985514" elapsed="0.003239"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:32:34.985321" elapsed="0.003705"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:32:34.990742" level="INFO">Running command 'cat /tests/resources/mutational-fuzz-data-order-test.dat &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:32:34.989648" elapsed="0.007299"/>
</kw>
<arg>Run</arg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:32:34.989285" elapsed="0.007767"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:32:34.997999" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:32:34.997433" elapsed="0.002078"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:32:34.997257" elapsed="0.002325"/>
</kw>
<status status="PASS" start="2024-05-06T15:32:24.912564" elapsed="10.087089"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:32:24.912191" elapsed="10.087504"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint_with_fuzzed_data</var>
<status status="PASS" start="2024-05-06T15:32:24.912089" elapsed="10.087638"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:32:35.001019" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:32:35.001712" level="INFO">${API_SERVER_LOG_CONTENTS} = [3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a documen...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:32:35.000840" elapsed="0.000911"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:32:35.002092" level="INFO">[3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a document file. Can be both a file or a fetchable resource on the web.  [string] [required]

Options:
      --version                           Show version number  [boolean]
      --help                              Show help  [boolean]
  -p, --port                              Port that Prism will run on.  [number] [required] [default: 4010]
  -h, --host                              Host that Prism will listen to.  [string] [required] [default: "127.0.0.1"]
      --cors                              Enables CORS headers.  [boolean] [default: true]
  -m, --multiprocess                      Forks the http server from the CLI for faster log processing.  [boolean] [default: false]
      --errors                            Specifies whether request/response violations marked as errors will produce an error response  [boolean] [required] [default: false]
  -v, --verboseLevel                      Turns on verbose logging.  [required] [choices: "trace", "debug", "info", "warn", "error", "fatal", "silent"] [default: "info"]
  -d, --dynamic                           Dynamically generate examples.  [boolean] [default: false]
      --json-schema-faker-fillProperties  Generate additional properties when using dynamic generation.  [boolean]
      --ignoreExamples                    Tell Prism to treat the spec as though it has no examples. When in static mode,
                                                                  returns an example that has not been generated using json-schema-faker, but was
                                                                  created by Prism. When in dynamic mode, this flag is ignored, since in dynamic mode,
                                                                  examples are not consulted and json-schema-faker is used to generate a response based
                                                                  on the schema defined in the spec  [boolean] [default: false]

listen EADDRINUSE: address already in use 0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:32:35.001884" elapsed="0.000311"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:32:35.002305" elapsed="0.000143"/>
</kw>
<status status="PASS" start="2024-05-06T15:32:35.000437" elapsed="0.002084"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:32:35.000077" elapsed="0.002482"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T15:32:34.999844" elapsed="0.002744"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_pets_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:32:35.004184" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:32:35.003495" elapsed="0.000767"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:32:35.005305" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:32:35.004563" elapsed="10.581558"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:32:35.004416" elapsed="10.582528"/>
</kw>
<arg>http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-06T15:32:35.003263" elapsed="10.583788"/>
</kw>
<status status="PASS" start="2024-05-06T15:32:35.003051" elapsed="10.584097"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:32:35.002765" elapsed="10.584430"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_pets_endpoint</var>
<status status="PASS" start="2024-05-06T15:32:35.002679" elapsed="10.584552"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:32:45.588548" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:32:45.590407" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:32:45.588312" elapsed="0.002149"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:32:45.590966" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10041 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10042 ms
Total:          10042 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:32:45.590673" elapsed="0.000375"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:32:45.591243" elapsed="0.000299"/>
</kw>
<status status="PASS" start="2024-05-06T15:32:45.588030" elapsed="0.003609"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:32:45.587566" elapsed="0.004125"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:32:45.587372" elapsed="0.004358"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_limited_bandwidth_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T15:32:45.592547" elapsed="5.023912"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T15:33:20.618863" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T15:32:50.616816" elapsed="30.002386"/>
</kw>
<kw name="Add Limited Bandwidth Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Limited Bandwidth Toxic to the Vegeta load tests. It will limit a connection to a maximum number of kilobytes per second.</doc>
<status status="PASS" start="2024-05-06T15:33:20.619627" elapsed="5.008975"/>
</kw>
<status status="PASS" start="2024-05-06T15:32:45.592316" elapsed="40.036457"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:32:45.592009" elapsed="40.036844"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_limited_bandwidth_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T15:32:45.591897" elapsed="40.037016"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:33:25.630674" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:33:25.632476" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:33:25.630465" elapsed="0.002061"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:33:25.632909" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10041 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10042 ms
Total:          10042 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:33:25.632722" elapsed="0.000259"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:33:25.633192" elapsed="0.000216"/>
</kw>
<status status="PASS" start="2024-05-06T15:33:25.629966" elapsed="0.003550"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:33:25.629450" elapsed="0.004121"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:33:25.629234" elapsed="0.004381"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_latency_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T15:33:25.634599" elapsed="5.018195"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T15:34:00.655298" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T15:33:30.653555" elapsed="30.001993"/>
</kw>
<kw name="Add Latency Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Latency Toxic to the Vegeta load tests. It will add a delay to all data going through the proxy.</doc>
<status status="PASS" start="2024-05-06T15:34:00.656733" elapsed="5.006959"/>
</kw>
<status status="PASS" start="2024-05-06T15:33:25.634302" elapsed="40.029645"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:33:25.633870" elapsed="40.030425"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_latency_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T15:33:25.633745" elapsed="40.030659"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:34:05.666768" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:34:05.668507" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:34:05.666487" elapsed="0.002089"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:34:05.669215" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10041 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10042 ms
Total:          10042 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:34:05.668878" elapsed="0.000427"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:34:05.669490" elapsed="0.000252"/>
</kw>
<status status="PASS" start="2024-05-06T15:34:05.665942" elapsed="0.003925"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:34:05.665027" elapsed="0.004904"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:34:05.664722" elapsed="0.005260"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_latency_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T15:34:05.671570" elapsed="5.016608"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T15:34:40.689997" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T15:34:10.688405" elapsed="30.001819"/>
</kw>
<kw name="Add Latency Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Latency Toxic to the Vegeta load tests. It will add a delay to all data going through the proxy.</doc>
<status status="PASS" start="2024-05-06T15:34:40.690620" elapsed="5.008626"/>
</kw>
<status status="PASS" start="2024-05-06T15:34:05.671201" elapsed="40.028346"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:34:05.670408" elapsed="40.029439"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_latency_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T15:34:05.670249" elapsed="40.029700"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:34:45.702435" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:34:45.705008" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:34:45.702148" elapsed="0.002929"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:34:45.705896" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10041 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10042 ms
Total:          10042 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:34:45.705363" elapsed="0.000630"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:34:45.706197" elapsed="0.000263"/>
</kw>
<status status="PASS" start="2024-05-06T15:34:45.701534" elapsed="0.005056"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:34:45.700583" elapsed="0.006137"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:34:45.700273" elapsed="0.006507"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_user_endpoint">
<kw name="Run HTTPStat POST Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:34:45.709535" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:34:45.708382" elapsed="0.001341"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:34:45.711173" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/user" -method "POST" -body '{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}' &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:34:45.710119" elapsed="10.353859"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:34:45.709909" elapsed="10.354200"/>
</kw>
<arg>http://0.0.0.0:8080/user</arg>
<arg>POST</arg>
<arg>'{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}'</arg>
<status status="PASS" start="2024-05-06T15:34:45.707949" elapsed="10.356269"/>
</kw>
<status status="PASS" start="2024-05-06T15:34:45.707508" elapsed="10.356797"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:34:45.707086" elapsed="10.357275"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_user_endpoint</var>
<status status="PASS" start="2024-05-06T15:34:45.706935" elapsed="10.357473"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:34:56.065741" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:34:56.066854" level="INFO">${API_SERVER_LOG_CONTENTS} = [3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a documen...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:34:56.065528" elapsed="0.001369"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:34:56.067203" level="INFO">[3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a document file. Can be both a file or a fetchable resource on the web.  [string] [required]

Options:
      --version                           Show version number  [boolean]
      --help                              Show help  [boolean]
  -p, --port                              Port that Prism will run on.  [number] [required] [default: 4010]
  -h, --host                              Host that Prism will listen to.  [string] [required] [default: "127.0.0.1"]
      --cors                              Enables CORS headers.  [boolean] [default: true]
  -m, --multiprocess                      Forks the http server from the CLI for faster log processing.  [boolean] [default: false]
      --errors                            Specifies whether request/response violations marked as errors will produce an error response  [boolean] [required] [default: false]
  -v, --verboseLevel                      Turns on verbose logging.  [required] [choices: "trace", "debug", "info", "warn", "error", "fatal", "silent"] [default: "info"]
  -d, --dynamic                           Dynamically generate examples.  [boolean] [default: false]
      --json-schema-faker-fillProperties  Generate additional properties when using dynamic generation.  [boolean]
      --ignoreExamples                    Tell Prism to treat the spec as though it has no examples. When in static mode,
                                                                  returns an example that has not been generated using json-schema-faker, but was
                                                                  created by Prism. When in dynamic mode, this flag is ignored, since in dynamic mode,
                                                                  examples are not consulted and json-schema-faker is used to generate a response based
                                                                  on the schema defined in the spec  [boolean] [default: false]

listen EADDRINUSE: address already in use 0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:34:56.067043" elapsed="0.000306"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:34:56.067484" elapsed="0.000321"/>
</kw>
<status status="PASS" start="2024-05-06T15:34:56.065255" elapsed="0.002657"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:34:56.064804" elapsed="0.003161"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T15:34:56.064581" elapsed="0.003423"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_user_endpoint_with_fuzzed_data">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:34:56.069888" level="INFO">Running command 'echo '{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}' | radamsa &gt; /tests/resources/mutational-fuzz-data-user-test.dat'.</msg>
<arg>echo '{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-user-test.dat</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:34:56.069088" elapsed="0.017955"/>
</kw>
<arg>Run</arg>
<arg>echo '{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-user-test.dat</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:34:56.068919" elapsed="0.018222"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:34:56.088198" level="INFO">Running command 'httpstat -o /tests/resources/httpstat-response-mutational-fuzz-data-user-output.json -X POST -H 'Content-Type: application/json' -d @/tests/resources/mutational-fuzz-data-user-test.dat http://0.0.0.0:8080/user 2&gt;&amp;1'.</msg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-user-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-user-test.dat http://0.0.0.0:8080/user</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:34:56.087477" elapsed="10.022354"/>
</kw>
<arg>Run</arg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-user-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-user-test.dat http://0.0.0.0:8080/user</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:34:56.087307" elapsed="10.022667"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:35:06.112222" level="INFO">Running command 'TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-user-test.dat -- Logged this on... $TIMESTAMP :: ========" &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-user-endpoint.log'.</msg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-user-test.dat -- Logged this on... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:35:06.111222" elapsed="0.006642"/>
</kw>
<arg>Run</arg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-user-test.dat -- Logged this on... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:35:06.110977" elapsed="0.007006"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:35:06.119665" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-user-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:35:06.118440" elapsed="0.003548"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:35:06.118198" elapsed="0.003894"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:35:06.123489" level="INFO">Running command 'cat /tests/resources/mutational-fuzz-data-user-test.dat &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-user-endpoint.log'.</msg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-user-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:35:06.122466" elapsed="0.007382"/>
</kw>
<arg>Run</arg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-user-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:35:06.122273" elapsed="0.007681"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:35:06.131039" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-user-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:35:06.130307" elapsed="0.002570"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:35:06.130134" elapsed="0.002835"/>
</kw>
<status status="PASS" start="2024-05-06T15:34:56.068646" elapsed="10.064400"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:34:56.068250" elapsed="10.064839"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_user_endpoint_with_fuzzed_data</var>
<status status="PASS" start="2024-05-06T15:34:56.068124" elapsed="10.065014"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:35:06.134218" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:35:06.134799" level="INFO">${API_SERVER_LOG_CONTENTS} = [3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a documen...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:35:06.134078" elapsed="0.000755"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:35:06.135106" level="INFO">[3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a document file. Can be both a file or a fetchable resource on the web.  [string] [required]

Options:
      --version                           Show version number  [boolean]
      --help                              Show help  [boolean]
  -p, --port                              Port that Prism will run on.  [number] [required] [default: 4010]
  -h, --host                              Host that Prism will listen to.  [string] [required] [default: "127.0.0.1"]
      --cors                              Enables CORS headers.  [boolean] [default: true]
  -m, --multiprocess                      Forks the http server from the CLI for faster log processing.  [boolean] [default: false]
      --errors                            Specifies whether request/response violations marked as errors will produce an error response  [boolean] [required] [default: false]
  -v, --verboseLevel                      Turns on verbose logging.  [required] [choices: "trace", "debug", "info", "warn", "error", "fatal", "silent"] [default: "info"]
  -d, --dynamic                           Dynamically generate examples.  [boolean] [default: false]
      --json-schema-faker-fillProperties  Generate additional properties when using dynamic generation.  [boolean]
      --ignoreExamples                    Tell Prism to treat the spec as though it has no examples. When in static mode,
                                                                  returns an example that has not been generated using json-schema-faker, but was
                                                                  created by Prism. When in dynamic mode, this flag is ignored, since in dynamic mode,
                                                                  examples are not consulted and json-schema-faker is used to generate a response based
                                                                  on the schema defined in the spec  [boolean] [default: false]

listen EADDRINUSE: address already in use 0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:35:06.134976" elapsed="0.000233"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:35:06.135314" elapsed="0.000460"/>
</kw>
<status status="PASS" start="2024-05-06T15:35:06.133833" elapsed="0.002472"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:35:06.133387" elapsed="0.002967"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T15:35:06.133271" elapsed="0.003116"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint_with_fuzzed_data">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:35:06.138036" level="INFO">Running command 'echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; /tests/resources/mutational-fuzz-data-order-test.dat'.</msg>
<arg>echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:35:06.137427" elapsed="0.010670"/>
</kw>
<arg>Run</arg>
<arg>echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:35:06.137283" elapsed="0.011051"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:35:06.150026" level="INFO">Running command 'httpstat -o /tests/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @/tests/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order 2&gt;&amp;1'.</msg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:35:06.149081" elapsed="10.037998"/>
</kw>
<arg>Run</arg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:35:06.148536" elapsed="10.038689"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:35:16.189248" level="INFO">Running command 'TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:35:16.187882" elapsed="0.006963"/>
</kw>
<arg>Run</arg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:35:16.187482" elapsed="0.007511"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:35:16.196946" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:35:16.195703" elapsed="0.003131"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:35:16.195244" elapsed="0.003685"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:35:16.200072" level="INFO">Running command 'cat /tests/resources/mutational-fuzz-data-order-test.dat &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:35:16.199291" elapsed="0.004738"/>
</kw>
<arg>Run</arg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:35:16.199104" elapsed="0.005013"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:35:16.205333" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:35:16.204449" elapsed="0.002685"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:35:16.204278" elapsed="0.002947"/>
</kw>
<status status="PASS" start="2024-05-06T15:35:06.137059" elapsed="10.070244"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:35:06.136722" elapsed="10.070625"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint_with_fuzzed_data</var>
<status status="PASS" start="2024-05-06T15:35:06.136533" elapsed="10.070848"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:35:16.208396" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:35:16.208917" level="INFO">${API_SERVER_LOG_CONTENTS} = [3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a documen...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:35:16.208258" elapsed="0.000695"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:35:16.209213" level="INFO">[3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a document file. Can be both a file or a fetchable resource on the web.  [string] [required]

Options:
      --version                           Show version number  [boolean]
      --help                              Show help  [boolean]
  -p, --port                              Port that Prism will run on.  [number] [required] [default: 4010]
  -h, --host                              Host that Prism will listen to.  [string] [required] [default: "127.0.0.1"]
      --cors                              Enables CORS headers.  [boolean] [default: true]
  -m, --multiprocess                      Forks the http server from the CLI for faster log processing.  [boolean] [default: false]
      --errors                            Specifies whether request/response violations marked as errors will produce an error response  [boolean] [required] [default: false]
  -v, --verboseLevel                      Turns on verbose logging.  [required] [choices: "trace", "debug", "info", "warn", "error", "fatal", "silent"] [default: "info"]
  -d, --dynamic                           Dynamically generate examples.  [boolean] [default: false]
      --json-schema-faker-fillProperties  Generate additional properties when using dynamic generation.  [boolean]
      --ignoreExamples                    Tell Prism to treat the spec as though it has no examples. When in static mode,
                                                                  returns an example that has not been generated using json-schema-faker, but was
                                                                  created by Prism. When in dynamic mode, this flag is ignored, since in dynamic mode,
                                                                  examples are not consulted and json-schema-faker is used to generate a response based
                                                                  on the schema defined in the spec  [boolean] [default: false]

listen EADDRINUSE: address already in use 0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:35:16.209079" elapsed="0.000614"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:35:16.209833" elapsed="0.000158"/>
</kw>
<status status="PASS" start="2024-05-06T15:35:16.208025" elapsed="0.002039"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:35:16.207704" elapsed="0.002398"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T15:35:16.207513" elapsed="0.002618"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_user_endpoint_with_fuzzed_data">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:35:16.211523" level="INFO">Running command 'echo '{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}' | radamsa &gt; /tests/resources/mutational-fuzz-data-user-test.dat'.</msg>
<arg>echo '{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-user-test.dat</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:35:16.210982" elapsed="0.009238"/>
</kw>
<arg>Run</arg>
<arg>echo '{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-user-test.dat</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:35:16.210845" elapsed="0.009478"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:35:16.221812" level="INFO">Running command 'httpstat -o /tests/resources/httpstat-response-mutational-fuzz-data-user-output.json -X POST -H 'Content-Type: application/json' -d @/tests/resources/mutational-fuzz-data-user-test.dat http://0.0.0.0:8080/user 2&gt;&amp;1'.</msg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-user-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-user-test.dat http://0.0.0.0:8080/user</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:35:16.220980" elapsed="10.019313"/>
</kw>
<arg>Run</arg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-user-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-user-test.dat http://0.0.0.0:8080/user</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:35:16.220586" elapsed="10.019851"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:35:26.242296" level="INFO">Running command 'TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-user-test.dat -- Logged this on... $TIMESTAMP :: ========" &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-user-endpoint.log'.</msg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-user-test.dat -- Logged this on... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:35:26.241100" elapsed="0.006643"/>
</kw>
<arg>Run</arg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-user-test.dat -- Logged this on... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:35:26.240815" elapsed="0.007160"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:35:26.249464" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-user-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:35:26.248486" elapsed="0.003148"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:35:26.248246" elapsed="0.003492"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:35:26.252942" level="INFO">Running command 'cat /tests/resources/mutational-fuzz-data-user-test.dat &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-user-endpoint.log'.</msg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-user-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:35:26.252112" elapsed="0.005027"/>
</kw>
<arg>Run</arg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-user-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:35:26.251919" elapsed="0.005889"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:35:26.258801" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-user-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:35:26.258158" elapsed="0.002170"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:35:26.257981" elapsed="0.002412"/>
</kw>
<status status="PASS" start="2024-05-06T15:35:16.210620" elapsed="10.049841"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:35:16.210308" elapsed="10.050194"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_user_endpoint_with_fuzzed_data</var>
<status status="PASS" start="2024-05-06T15:35:16.210222" elapsed="10.050353"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:35:26.261468" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:35:26.262211" level="INFO">${API_SERVER_LOG_CONTENTS} = [3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a documen...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:35:26.261341" elapsed="0.000913"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:35:26.262716" level="INFO">[3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a document file. Can be both a file or a fetchable resource on the web.  [string] [required]

Options:
      --version                           Show version number  [boolean]
      --help                              Show help  [boolean]
  -p, --port                              Port that Prism will run on.  [number] [required] [default: 4010]
  -h, --host                              Host that Prism will listen to.  [string] [required] [default: "127.0.0.1"]
      --cors                              Enables CORS headers.  [boolean] [default: true]
  -m, --multiprocess                      Forks the http server from the CLI for faster log processing.  [boolean] [default: false]
      --errors                            Specifies whether request/response violations marked as errors will produce an error response  [boolean] [required] [default: false]
  -v, --verboseLevel                      Turns on verbose logging.  [required] [choices: "trace", "debug", "info", "warn", "error", "fatal", "silent"] [default: "info"]
  -d, --dynamic                           Dynamically generate examples.  [boolean] [default: false]
      --json-schema-faker-fillProperties  Generate additional properties when using dynamic generation.  [boolean]
      --ignoreExamples                    Tell Prism to treat the spec as though it has no examples. When in static mode,
                                                                  returns an example that has not been generated using json-schema-faker, but was
                                                                  created by Prism. When in dynamic mode, this flag is ignored, since in dynamic mode,
                                                                  examples are not consulted and json-schema-faker is used to generate a response based
                                                                  on the schema defined in the spec  [boolean] [default: false]

listen EADDRINUSE: address already in use 0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:35:26.262408" elapsed="0.000431"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:35:26.262975" elapsed="0.000170"/>
</kw>
<status status="PASS" start="2024-05-06T15:35:26.261128" elapsed="0.002095"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:35:26.260821" elapsed="0.002443"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T15:35:26.260714" elapsed="0.002582"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_order_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:35:26.265122" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:35:26.264436" elapsed="0.000750"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:35:26.266197" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order/9" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:35:26.265453" elapsed="10.327881"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:35:26.265312" elapsed="10.328147"/>
</kw>
<arg>http://0.0.0.0:8080/store/order/9</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-06T15:35:26.264043" elapsed="10.329521"/>
</kw>
<status status="PASS" start="2024-05-06T15:35:26.263814" elapsed="10.329825"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:35:26.263491" elapsed="10.330201"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-06T15:35:26.263398" elapsed="10.330337"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:35:36.595792" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:35:36.596967" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"20...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:35:36.595623" elapsed="0.001383"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:35:36.597328" level="INFO">--------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"2019-08-24T14:15:22Z","status":"placed","complete":false}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10017 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10017 ms
Total:          10018 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:35:36.597172" elapsed="0.000216"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:35:36.597519" elapsed="0.000174"/>
</kw>
<status status="PASS" start="2024-05-06T15:35:36.595353" elapsed="0.002431"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:35:36.594963" elapsed="0.002868"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:35:36.594692" elapsed="0.003225"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint">
<kw name="Run HTTPStat POST Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:35:36.599774" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:35:36.599158" elapsed="0.000796"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:35:36.601017" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order" -method "POST" -body '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:35:36.600243" elapsed="10.313786"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:35:36.600090" elapsed="10.314045"/>
</kw>
<arg>http://0.0.0.0:8080/store/order</arg>
<arg>POST</arg>
<arg>'{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}'</arg>
<status status="PASS" start="2024-05-06T15:35:36.598789" elapsed="10.315429"/>
</kw>
<status status="PASS" start="2024-05-06T15:35:36.598516" elapsed="10.315764"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:35:36.598159" elapsed="10.316162"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-06T15:35:36.598038" elapsed="10.316318"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:35:46.915702" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:35:46.916949" level="INFO">${API_SERVER_LOG_CONTENTS} = [3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a documen...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:35:46.915541" elapsed="0.001449"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:35:46.917305" level="INFO">[3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a document file. Can be both a file or a fetchable resource on the web.  [string] [required]

Options:
      --version                           Show version number  [boolean]
      --help                              Show help  [boolean]
  -p, --port                              Port that Prism will run on.  [number] [required] [default: 4010]
  -h, --host                              Host that Prism will listen to.  [string] [required] [default: "127.0.0.1"]
      --cors                              Enables CORS headers.  [boolean] [default: true]
  -m, --multiprocess                      Forks the http server from the CLI for faster log processing.  [boolean] [default: false]
      --errors                            Specifies whether request/response violations marked as errors will produce an error response  [boolean] [required] [default: false]
  -v, --verboseLevel                      Turns on verbose logging.  [required] [choices: "trace", "debug", "info", "warn", "error", "fatal", "silent"] [default: "info"]
  -d, --dynamic                           Dynamically generate examples.  [boolean] [default: false]
      --json-schema-faker-fillProperties  Generate additional properties when using dynamic generation.  [boolean]
      --ignoreExamples                    Tell Prism to treat the spec as though it has no examples. When in static mode,
                                                                  returns an example that has not been generated using json-schema-faker, but was
                                                                  created by Prism. When in dynamic mode, this flag is ignored, since in dynamic mode,
                                                                  examples are not consulted and json-schema-faker is used to generate a response based
                                                                  on the schema defined in the spec  [boolean] [default: false]

listen EADDRINUSE: address already in use 0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:35:46.917147" elapsed="0.000880"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:35:46.918168" elapsed="0.000177"/>
</kw>
<status status="PASS" start="2024-05-06T15:35:46.915229" elapsed="0.003199"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:35:46.914621" elapsed="0.003851"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T15:35:46.914492" elapsed="0.004014"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_pets_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:35:46.920483" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:35:46.919626" elapsed="0.000940"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:35:46.921691" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:35:46.920973" elapsed="10.323842"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:35:46.920721" elapsed="10.324332"/>
</kw>
<arg>http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-06T15:35:46.919355" elapsed="10.325802"/>
</kw>
<status status="PASS" start="2024-05-06T15:35:46.919094" elapsed="10.326141"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:35:46.918717" elapsed="10.326572"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_pets_endpoint</var>
<status status="PASS" start="2024-05-06T15:35:46.918616" elapsed="10.326717"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:35:57.246743" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:35:57.247974" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:35:57.246546" elapsed="0.001470"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:35:57.248350" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10014 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10014 ms
Total:          10014 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:35:57.248186" elapsed="0.000227"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:35:57.248546" elapsed="0.000179"/>
</kw>
<status status="PASS" start="2024-05-06T15:35:57.246190" elapsed="0.002627"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:35:57.245668" elapsed="0.003195"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:35:57.245504" elapsed="0.003476"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_user_endpoint">
<kw name="Run HTTPStat POST Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:35:57.251690" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:35:57.251106" elapsed="0.000659"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:35:57.252910" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/user" -method "POST" -body '{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}' &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:35:57.252191" elapsed="10.284247"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:35:57.251998" elapsed="10.284569"/>
</kw>
<arg>http://0.0.0.0:8080/user</arg>
<arg>POST</arg>
<arg>'{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}'</arg>
<status status="PASS" start="2024-05-06T15:35:57.249902" elapsed="10.286821"/>
</kw>
<status status="PASS" start="2024-05-06T15:35:57.249587" elapsed="10.287232"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:35:57.249266" elapsed="10.287609"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_user_endpoint</var>
<status status="PASS" start="2024-05-06T15:35:57.249102" elapsed="10.287821"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:36:07.538242" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:36:07.539401" level="INFO">${API_SERVER_LOG_CONTENTS} = [3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a documen...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:36:07.538001" elapsed="0.001450"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:36:07.539803" level="INFO">[3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a document file. Can be both a file or a fetchable resource on the web.  [string] [required]

Options:
      --version                           Show version number  [boolean]
      --help                              Show help  [boolean]
  -p, --port                              Port that Prism will run on.  [number] [required] [default: 4010]
  -h, --host                              Host that Prism will listen to.  [string] [required] [default: "127.0.0.1"]
      --cors                              Enables CORS headers.  [boolean] [default: true]
  -m, --multiprocess                      Forks the http server from the CLI for faster log processing.  [boolean] [default: false]
      --errors                            Specifies whether request/response violations marked as errors will produce an error response  [boolean] [required] [default: false]
  -v, --verboseLevel                      Turns on verbose logging.  [required] [choices: "trace", "debug", "info", "warn", "error", "fatal", "silent"] [default: "info"]
  -d, --dynamic                           Dynamically generate examples.  [boolean] [default: false]
      --json-schema-faker-fillProperties  Generate additional properties when using dynamic generation.  [boolean]
      --ignoreExamples                    Tell Prism to treat the spec as though it has no examples. When in static mode,
                                                                  returns an example that has not been generated using json-schema-faker, but was
                                                                  created by Prism. When in dynamic mode, this flag is ignored, since in dynamic mode,
                                                                  examples are not consulted and json-schema-faker is used to generate a response based
                                                                  on the schema defined in the spec  [boolean] [default: false]

listen EADDRINUSE: address already in use 0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:36:07.539617" elapsed="0.000300"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:36:07.540052" elapsed="0.000233"/>
</kw>
<status status="PASS" start="2024-05-06T15:36:07.537730" elapsed="0.002647"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:36:07.537356" elapsed="0.003069"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T15:36:07.537096" elapsed="0.003367"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_pets_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:36:07.542406" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:36:07.541638" elapsed="0.000833"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:36:07.543523" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:36:07.542763" elapsed="10.309032"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:36:07.542602" elapsed="10.309350"/>
</kw>
<arg>http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-06T15:36:07.541339" elapsed="10.311639"/>
</kw>
<status status="PASS" start="2024-05-06T15:36:07.540991" elapsed="10.312205"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:36:07.540686" elapsed="10.312591"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_pets_endpoint</var>
<status status="PASS" start="2024-05-06T15:36:07.540577" elapsed="10.312753"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:36:17.854893" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:36:17.856665" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:36:17.854687" elapsed="0.002024"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:36:17.857085" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10007 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10007 ms
Total:          10008 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:36:17.856905" elapsed="0.000329"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:36:17.857380" elapsed="0.000206"/>
</kw>
<status status="PASS" start="2024-05-06T15:36:17.854261" elapsed="0.003421"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:36:17.853727" elapsed="0.004005"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:36:17.853544" elapsed="0.004225"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_latency_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T15:36:17.858713" elapsed="5.016262"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T15:36:52.877119" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T15:36:22.875548" elapsed="30.001947"/>
</kw>
<kw name="Add Latency Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Latency Toxic to the Vegeta load tests. It will add a delay to all data going through the proxy.</doc>
<status status="PASS" start="2024-05-06T15:36:52.877915" elapsed="5.013942"/>
</kw>
<status status="PASS" start="2024-05-06T15:36:17.858385" elapsed="40.033735"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:36:17.858000" elapsed="40.034436"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_latency_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T15:36:17.857891" elapsed="40.034674"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:36:57.895095" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:36:57.897733" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:36:57.894792" elapsed="0.003015"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:36:57.898505" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10007 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10007 ms
Total:          10008 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:36:57.898083" elapsed="0.000566"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:36:57.898841" elapsed="0.000252"/>
</kw>
<status status="PASS" start="2024-05-06T15:36:57.894164" elapsed="0.005054"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:36:57.893195" elapsed="0.006152"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:36:57.892890" elapsed="0.006518"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_limited_bandwidth_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T15:36:57.900569" elapsed="5.018555"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T15:37:32.921510" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T15:37:02.919708" elapsed="30.002067"/>
</kw>
<kw name="Add Limited Bandwidth Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Limited Bandwidth Toxic to the Vegeta load tests. It will limit a connection to a maximum number of kilobytes per second.</doc>
<status status="PASS" start="2024-05-06T15:37:32.922378" elapsed="5.008075"/>
</kw>
<status status="PASS" start="2024-05-06T15:36:57.900144" elapsed="40.030423"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:36:57.899710" elapsed="40.031487"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_limited_bandwidth_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T15:36:57.899560" elapsed="40.031694"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:37:37.932246" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:37:37.933070" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:37:37.932013" elapsed="0.001120"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:37:37.933389" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10007 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10007 ms
Total:          10008 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:37:37.933275" elapsed="0.000161"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:37:37.933534" elapsed="0.000134"/>
</kw>
<status status="PASS" start="2024-05-06T15:37:37.931802" elapsed="0.001938"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:37:37.931506" elapsed="0.002270"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:37:37.931384" elapsed="0.002421"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_limited_bandwidth_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T15:37:37.934480" elapsed="5.015232"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T15:38:12.951247" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T15:37:42.950277" elapsed="30.001203"/>
</kw>
<kw name="Add Limited Bandwidth Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Limited Bandwidth Toxic to the Vegeta load tests. It will limit a connection to a maximum number of kilobytes per second.</doc>
<status status="PASS" start="2024-05-06T15:38:12.952031" elapsed="5.009212"/>
</kw>
<status status="PASS" start="2024-05-06T15:37:37.934286" elapsed="40.027232"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:37:37.933974" elapsed="40.027814"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_limited_bandwidth_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T15:37:37.933891" elapsed="40.028007"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:38:17.964283" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:38:17.967071" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:38:17.963991" elapsed="0.003140"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:38:17.967690" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10007 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10007 ms
Total:          10008 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:38:17.967353" elapsed="0.000427"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:38:17.967967" elapsed="0.000251"/>
</kw>
<status status="PASS" start="2024-05-06T15:38:17.963436" elapsed="0.004913"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:38:17.962534" elapsed="0.005880"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:38:17.962223" elapsed="0.006242"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_user_endpoint">
<kw name="Run HTTPStat POST Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:38:17.971135" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:38:17.970186" elapsed="0.001051"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:38:17.972823" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/user" -method "POST" -body '{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}' &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:38:17.971753" elapsed="10.321020"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:38:17.971441" elapsed="10.322156"/>
</kw>
<arg>http://0.0.0.0:8080/user</arg>
<arg>POST</arg>
<arg>'{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}'</arg>
<status status="PASS" start="2024-05-06T15:38:17.969739" elapsed="10.323960"/>
</kw>
<status status="PASS" start="2024-05-06T15:38:17.969272" elapsed="10.324502"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:38:17.968846" elapsed="10.324976"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_user_endpoint</var>
<status status="PASS" start="2024-05-06T15:38:17.968689" elapsed="10.325173"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:38:28.295248" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:38:28.296641" level="INFO">${API_SERVER_LOG_CONTENTS} = [3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a documen...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:38:28.295048" elapsed="0.001655"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:38:28.297033" level="INFO">[3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a document file. Can be both a file or a fetchable resource on the web.  [string] [required]

Options:
      --version                           Show version number  [boolean]
      --help                              Show help  [boolean]
  -p, --port                              Port that Prism will run on.  [number] [required] [default: 4010]
  -h, --host                              Host that Prism will listen to.  [string] [required] [default: "127.0.0.1"]
      --cors                              Enables CORS headers.  [boolean] [default: true]
  -m, --multiprocess                      Forks the http server from the CLI for faster log processing.  [boolean] [default: false]
      --errors                            Specifies whether request/response violations marked as errors will produce an error response  [boolean] [required] [default: false]
  -v, --verboseLevel                      Turns on verbose logging.  [required] [choices: "trace", "debug", "info", "warn", "error", "fatal", "silent"] [default: "info"]
  -d, --dynamic                           Dynamically generate examples.  [boolean] [default: false]
      --json-schema-faker-fillProperties  Generate additional properties when using dynamic generation.  [boolean]
      --ignoreExamples                    Tell Prism to treat the spec as though it has no examples. When in static mode,
                                                                  returns an example that has not been generated using json-schema-faker, but was
                                                                  created by Prism. When in dynamic mode, this flag is ignored, since in dynamic mode,
                                                                  examples are not consulted and json-schema-faker is used to generate a response based
                                                                  on the schema defined in the spec  [boolean] [default: false]

listen EADDRINUSE: address already in use 0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:38:28.296875" elapsed="0.000259"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:38:28.297258" elapsed="0.000162"/>
</kw>
<status status="PASS" start="2024-05-06T15:38:28.294533" elapsed="0.002967"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:38:28.294165" elapsed="0.003456"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T15:38:28.294015" elapsed="0.003643"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_order_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:38:28.299410" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:38:28.298696" elapsed="0.000852"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:38:28.300738" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order/9" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:38:28.300051" elapsed="10.325146"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:38:28.299700" elapsed="10.325644"/>
</kw>
<arg>http://0.0.0.0:8080/store/order/9</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-06T15:38:28.298387" elapsed="10.327175"/>
</kw>
<status status="PASS" start="2024-05-06T15:38:28.298154" elapsed="10.327486"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:38:28.297870" elapsed="10.327825"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-06T15:38:28.297767" elapsed="10.327974"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:38:38.627096" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:38:38.628505" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"20...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:38:38.626922" elapsed="0.002326"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:38:38.629696" level="INFO">--------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"2019-08-24T14:15:22Z","status":"placed","complete":false}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10009 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10010 ms
Total:          10010 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:38:38.629516" elapsed="0.000245"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:38:38.629899" elapsed="0.000187"/>
</kw>
<status status="PASS" start="2024-05-06T15:38:38.626498" elapsed="0.003682"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:38:38.626077" elapsed="0.004152"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:38:38.625909" elapsed="0.004358"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint">
<kw name="Run HTTPStat POST Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:38:38.632060" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:38:38.631434" elapsed="0.000689"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:38:38.633201" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order" -method "POST" -body '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:38:38.632410" elapsed="10.309451"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:38:38.632256" elapsed="10.309761"/>
</kw>
<arg>http://0.0.0.0:8080/store/order</arg>
<arg>POST</arg>
<arg>'{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}'</arg>
<status status="PASS" start="2024-05-06T15:38:38.631128" elapsed="10.310990"/>
</kw>
<status status="PASS" start="2024-05-06T15:38:38.630856" elapsed="10.311338"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:38:38.630491" elapsed="10.311751"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-06T15:38:38.630381" elapsed="10.311900"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:38:48.943546" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:38:48.944799" level="INFO">${API_SERVER_LOG_CONTENTS} = [3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a documen...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:38:48.943321" elapsed="0.001525"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:38:48.945169" level="INFO">[3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a document file. Can be both a file or a fetchable resource on the web.  [string] [required]

Options:
      --version                           Show version number  [boolean]
      --help                              Show help  [boolean]
  -p, --port                              Port that Prism will run on.  [number] [required] [default: 4010]
  -h, --host                              Host that Prism will listen to.  [string] [required] [default: "127.0.0.1"]
      --cors                              Enables CORS headers.  [boolean] [default: true]
  -m, --multiprocess                      Forks the http server from the CLI for faster log processing.  [boolean] [default: false]
      --errors                            Specifies whether request/response violations marked as errors will produce an error response  [boolean] [required] [default: false]
  -v, --verboseLevel                      Turns on verbose logging.  [required] [choices: "trace", "debug", "info", "warn", "error", "fatal", "silent"] [default: "info"]
  -d, --dynamic                           Dynamically generate examples.  [boolean] [default: false]
      --json-schema-faker-fillProperties  Generate additional properties when using dynamic generation.  [boolean]
      --ignoreExamples                    Tell Prism to treat the spec as though it has no examples. When in static mode,
                                                                  returns an example that has not been generated using json-schema-faker, but was
                                                                  created by Prism. When in dynamic mode, this flag is ignored, since in dynamic mode,
                                                                  examples are not consulted and json-schema-faker is used to generate a response based
                                                                  on the schema defined in the spec  [boolean] [default: false]

listen EADDRINUSE: address already in use 0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:38:48.945006" elapsed="0.000281"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:38:48.945421" elapsed="0.000261"/>
</kw>
<status status="PASS" start="2024-05-06T15:38:48.943038" elapsed="0.003423"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:38:48.942668" elapsed="0.003849"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T15:38:48.942508" elapsed="0.004049"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_order_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:38:48.948332" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:38:48.947674" elapsed="0.000793"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:38:48.949513" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order/9" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:38:48.948820" elapsed="10.343199"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:38:48.948622" elapsed="10.343529"/>
</kw>
<arg>http://0.0.0.0:8080/store/order/9</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-06T15:38:48.947360" elapsed="10.344895"/>
</kw>
<status status="PASS" start="2024-05-06T15:38:48.947091" elapsed="10.345432"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:38:48.946784" elapsed="10.345915"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-06T15:38:48.946671" elapsed="10.346099"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:38:59.294042" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:38:59.295510" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"20...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:38:59.293865" elapsed="0.001699"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:38:59.295910" level="INFO">--------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"2019-08-24T14:15:22Z","status":"placed","complete":false}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10008 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10008 ms
Total:          10008 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:38:59.295745" elapsed="0.000228"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:38:59.296109" elapsed="0.000182"/>
</kw>
<status status="PASS" start="2024-05-06T15:38:59.293586" elapsed="0.002799"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:38:59.293117" elapsed="0.003400"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:38:59.292947" elapsed="0.003616"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_limited_bandwidth_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T15:38:59.297379" elapsed="5.014537"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T15:39:34.313814" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T15:39:04.312360" elapsed="30.001981"/>
</kw>
<kw name="Add Limited Bandwidth Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Limited Bandwidth Toxic to the Vegeta load tests. It will limit a connection to a maximum number of kilobytes per second.</doc>
<status status="PASS" start="2024-05-06T15:39:34.314564" elapsed="5.005750"/>
</kw>
<status status="PASS" start="2024-05-06T15:38:59.297117" elapsed="40.023457"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:38:59.296794" elapsed="40.023907"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_limited_bandwidth_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T15:38:59.296681" elapsed="40.024253"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:39:39.323592" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:39:39.325825" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"20...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:39:39.323308" elapsed="0.002621"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:39:39.326374" level="INFO">--------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"2019-08-24T14:15:22Z","status":"placed","complete":false}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10008 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10008 ms
Total:          10008 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:39:39.326157" elapsed="0.001415"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:39:39.327899" elapsed="0.000273"/>
</kw>
<status status="PASS" start="2024-05-06T15:39:39.322722" elapsed="0.005583"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:39:39.321562" elapsed="0.006809"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:39:39.321259" elapsed="0.007164"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint">
<kw name="Run HTTPStat POST Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:39:39.330885" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:39:39.330056" elapsed="0.000923"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:39:39.332506" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order" -method "POST" -body '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:39:39.331367" elapsed="10.301016"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:39:39.331159" elapsed="10.301327"/>
</kw>
<arg>http://0.0.0.0:8080/store/order</arg>
<arg>POST</arg>
<arg>'{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}'</arg>
<status status="PASS" start="2024-05-06T15:39:39.329626" elapsed="10.302944"/>
</kw>
<status status="PASS" start="2024-05-06T15:39:39.329224" elapsed="10.303488"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:39:39.328794" elapsed="10.303961"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-06T15:39:39.328578" elapsed="10.304211"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:39:49.633840" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:39:49.634768" level="INFO">${API_SERVER_LOG_CONTENTS} = [3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a documen...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:39:49.633678" elapsed="0.001132"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:39:49.635100" level="INFO">[3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a document file. Can be both a file or a fetchable resource on the web.  [string] [required]

Options:
      --version                           Show version number  [boolean]
      --help                              Show help  [boolean]
  -p, --port                              Port that Prism will run on.  [number] [required] [default: 4010]
  -h, --host                              Host that Prism will listen to.  [string] [required] [default: "127.0.0.1"]
      --cors                              Enables CORS headers.  [boolean] [default: true]
  -m, --multiprocess                      Forks the http server from the CLI for faster log processing.  [boolean] [default: false]
      --errors                            Specifies whether request/response violations marked as errors will produce an error response  [boolean] [required] [default: false]
  -v, --verboseLevel                      Turns on verbose logging.  [required] [choices: "trace", "debug", "info", "warn", "error", "fatal", "silent"] [default: "info"]
  -d, --dynamic                           Dynamically generate examples.  [boolean] [default: false]
      --json-schema-faker-fillProperties  Generate additional properties when using dynamic generation.  [boolean]
      --ignoreExamples                    Tell Prism to treat the spec as though it has no examples. When in static mode,
                                                                  returns an example that has not been generated using json-schema-faker, but was
                                                                  created by Prism. When in dynamic mode, this flag is ignored, since in dynamic mode,
                                                                  examples are not consulted and json-schema-faker is used to generate a response based
                                                                  on the schema defined in the spec  [boolean] [default: false]

listen EADDRINUSE: address already in use 0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:39:49.634952" elapsed="0.000234"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:39:49.635299" elapsed="0.000152"/>
</kw>
<status status="PASS" start="2024-05-06T15:39:49.633387" elapsed="0.002139"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:39:49.633055" elapsed="0.002511"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T15:39:49.632926" elapsed="0.002673"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_order_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:39:49.637876" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:39:49.637250" elapsed="0.000687"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:39:49.638797" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order/9" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:39:49.638200" elapsed="10.304592"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:39:49.638059" elapsed="10.304863"/>
</kw>
<arg>http://0.0.0.0:8080/store/order/9</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-06T15:39:49.637009" elapsed="10.306047"/>
</kw>
<status status="PASS" start="2024-05-06T15:39:49.636777" elapsed="10.306352"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:39:49.635883" elapsed="10.307293"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-06T15:39:49.635693" elapsed="10.307523"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:39:59.944401" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:39:59.945963" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"20...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:39:59.944235" elapsed="0.001773"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:39:59.946385" level="INFO">--------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"2019-08-24T14:15:22Z","status":"placed","complete":false}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10012 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10012 ms
Total:          10013 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:39:59.946202" elapsed="0.000248"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:39:59.946586" elapsed="0.000234"/>
</kw>
<status status="PASS" start="2024-05-06T15:39:59.943942" elapsed="0.002976"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:39:59.943509" elapsed="0.003458"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:39:59.943366" elapsed="0.003639"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint">
<kw name="Run HTTPStat POST Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:39:59.949023" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:39:59.948203" elapsed="0.000902"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:39:59.950164" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order" -method "POST" -body '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:39:59.949420" elapsed="10.329420"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:39:59.949257" elapsed="10.329811"/>
</kw>
<arg>http://0.0.0.0:8080/store/order</arg>
<arg>POST</arg>
<arg>'{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}'</arg>
<status status="PASS" start="2024-05-06T15:39:59.947874" elapsed="10.331311"/>
</kw>
<status status="PASS" start="2024-05-06T15:39:59.947547" elapsed="10.331725"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:39:59.947234" elapsed="10.332095"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-06T15:39:59.947123" elapsed="10.332254"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:40:10.280679" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:40:10.281974" level="INFO">${API_SERVER_LOG_CONTENTS} = [3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a documen...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:40:10.280503" elapsed="0.001526"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:40:10.282397" level="INFO">[3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a document file. Can be both a file or a fetchable resource on the web.  [string] [required]

Options:
      --version                           Show version number  [boolean]
      --help                              Show help  [boolean]
  -p, --port                              Port that Prism will run on.  [number] [required] [default: 4010]
  -h, --host                              Host that Prism will listen to.  [string] [required] [default: "127.0.0.1"]
      --cors                              Enables CORS headers.  [boolean] [default: true]
  -m, --multiprocess                      Forks the http server from the CLI for faster log processing.  [boolean] [default: false]
      --errors                            Specifies whether request/response violations marked as errors will produce an error response  [boolean] [required] [default: false]
  -v, --verboseLevel                      Turns on verbose logging.  [required] [choices: "trace", "debug", "info", "warn", "error", "fatal", "silent"] [default: "info"]
  -d, --dynamic                           Dynamically generate examples.  [boolean] [default: false]
      --json-schema-faker-fillProperties  Generate additional properties when using dynamic generation.  [boolean]
      --ignoreExamples                    Tell Prism to treat the spec as though it has no examples. When in static mode,
                                                                  returns an example that has not been generated using json-schema-faker, but was
                                                                  created by Prism. When in dynamic mode, this flag is ignored, since in dynamic mode,
                                                                  examples are not consulted and json-schema-faker is used to generate a response based
                                                                  on the schema defined in the spec  [boolean] [default: false]

listen EADDRINUSE: address already in use 0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:40:10.282202" elapsed="0.000962"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:40:10.283320" elapsed="0.000199"/>
</kw>
<status status="PASS" start="2024-05-06T15:40:10.280229" elapsed="0.003383"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:40:10.279741" elapsed="0.003919"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T15:40:10.279574" elapsed="0.004125"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_order_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:40:10.285814" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:40:10.284858" elapsed="0.001094"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:40:10.286911" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order/9" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:40:10.286262" elapsed="10.294368"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:40:10.286100" elapsed="10.294658"/>
</kw>
<arg>http://0.0.0.0:8080/store/order/9</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-06T15:40:10.284572" elapsed="10.296291"/>
</kw>
<status status="PASS" start="2024-05-06T15:40:10.284304" elapsed="10.296639"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:40:10.283929" elapsed="10.297174"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-06T15:40:10.283817" elapsed="10.297334"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:40:20.582472" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:40:20.583753" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"20...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:40:20.582274" elapsed="0.001517"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:40:20.584197" level="INFO">--------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"2019-08-24T14:15:22Z","status":"placed","complete":false}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10006 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10007 ms
Total:          10007 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:40:20.584028" elapsed="0.000265"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:40:20.584436" elapsed="0.000183"/>
</kw>
<status status="PASS" start="2024-05-06T15:40:20.581895" elapsed="0.002817"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:40:20.581522" elapsed="0.003238"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:40:20.581335" elapsed="0.003464"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_latency_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T15:40:20.585717" elapsed="5.015493"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T15:40:55.602788" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T15:40:25.602093" elapsed="30.000802"/>
</kw>
<kw name="Add Latency Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Latency Toxic to the Vegeta load tests. It will add a delay to all data going through the proxy.</doc>
<status status="PASS" start="2024-05-06T15:40:55.603060" elapsed="5.003808"/>
</kw>
<status status="PASS" start="2024-05-06T15:40:20.585451" elapsed="40.021534"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:40:20.585106" elapsed="40.021938"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_latency_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T15:40:20.584913" elapsed="40.022168"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:41:00.608055" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:41:00.609522" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"20...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:41:00.607905" elapsed="0.001715"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:41:00.609916" level="INFO">--------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"2019-08-24T14:15:22Z","status":"placed","complete":false}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10006 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10007 ms
Total:          10007 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:41:00.609773" elapsed="0.000192"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:41:00.610071" elapsed="0.000142"/>
</kw>
<status status="PASS" start="2024-05-06T15:41:00.607643" elapsed="0.002645"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:41:00.607337" elapsed="0.002989"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:41:00.607214" elapsed="0.003142"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_slow_close_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T15:41:00.611061" elapsed="5.018613"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T15:41:35.631874" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T15:41:05.630307" elapsed="30.001792"/>
</kw>
<kw name="Add Slow Close Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Slow Close Toxic to the Vegeta load tests. It will delay the TCP socket from closing until delay has elapsed.</doc>
<status status="PASS" start="2024-05-06T15:41:35.632843" elapsed="5.008211"/>
</kw>
<status status="PASS" start="2024-05-06T15:41:00.610857" elapsed="40.030317"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:41:00.610551" elapsed="40.030711"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_slow_close_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T15:41:00.610462" elapsed="40.030837"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:41:40.642286" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:41:40.644000" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"20...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:41:40.642102" elapsed="0.001940"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:41:40.644402" level="INFO">--------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"2019-08-24T14:15:22Z","status":"placed","complete":false}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10006 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10007 ms
Total:          10007 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:41:40.644251" elapsed="0.000201"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:41:40.644566" elapsed="0.000142"/>
</kw>
<status status="PASS" start="2024-05-06T15:41:40.641872" elapsed="0.002912"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:41:40.641562" elapsed="0.003262"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:41:40.641435" elapsed="0.003419"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_latency_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T15:41:40.645551" elapsed="5.015175"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T15:42:15.663151" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T15:41:45.661116" elapsed="30.002264"/>
</kw>
<kw name="Add Latency Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Latency Toxic to the Vegeta load tests. It will add a delay to all data going through the proxy.</doc>
<status status="PASS" start="2024-05-06T15:42:15.663897" elapsed="5.009426"/>
</kw>
<status status="PASS" start="2024-05-06T15:41:40.645338" elapsed="40.030343"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:41:40.645038" elapsed="40.030784"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_latency_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T15:41:40.644951" elapsed="40.030969"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:42:20.678505" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:42:20.681021" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"20...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:42:20.678225" elapsed="0.002854"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:42:20.681575" level="INFO">--------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"2019-08-24T14:15:22Z","status":"placed","complete":false}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10006 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10007 ms
Total:          10007 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:42:20.681291" elapsed="0.000371"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:42:20.681849" elapsed="0.000251"/>
</kw>
<status status="PASS" start="2024-05-06T15:42:20.677757" elapsed="0.004470"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:42:20.676537" elapsed="0.005755"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:42:20.676235" elapsed="0.006109"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_slow_close_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T15:42:20.683505" elapsed="5.016238"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T15:42:55.701468" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T15:42:25.700073" elapsed="30.001512"/>
</kw>
<kw name="Add Slow Close Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Slow Close Toxic to the Vegeta load tests. It will delay the TCP socket from closing until delay has elapsed.</doc>
<status status="PASS" start="2024-05-06T15:42:55.701766" elapsed="5.009829"/>
</kw>
<status status="PASS" start="2024-05-06T15:42:20.683160" elapsed="40.028574"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:42:20.682720" elapsed="40.029070"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_slow_close_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T15:42:20.682566" elapsed="40.029264"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:43:00.712907" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:43:00.714267" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"20...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:43:00.712753" elapsed="0.001552"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:43:00.714597" level="INFO">--------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"2019-08-24T14:15:22Z","status":"placed","complete":false}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10006 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10007 ms
Total:          10007 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:43:00.714452" elapsed="0.000199"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:43:00.714768" elapsed="0.000161"/>
</kw>
<status status="PASS" start="2024-05-06T15:43:00.712494" elapsed="0.002516"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:43:00.712113" elapsed="0.002941"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:43:00.711974" elapsed="0.003114"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_user_endpoint">
<kw name="Run HTTPStat POST Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:43:00.716772" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:43:00.716131" elapsed="0.000720"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:43:00.718967" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/user" -method "POST" -body '{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}' &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:43:00.717173" elapsed="10.321422"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:43:00.717004" elapsed="10.322390"/>
</kw>
<arg>http://0.0.0.0:8080/user</arg>
<arg>POST</arg>
<arg>'{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}'</arg>
<status status="PASS" start="2024-05-06T15:43:00.715857" elapsed="10.323630"/>
</kw>
<status status="PASS" start="2024-05-06T15:43:00.715615" elapsed="10.324034"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:43:00.715331" elapsed="10.324367"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_user_endpoint</var>
<status status="PASS" start="2024-05-06T15:43:00.715187" elapsed="10.324550"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:43:11.040940" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:43:11.042031" level="INFO">${API_SERVER_LOG_CONTENTS} = [3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a documen...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:43:11.040771" elapsed="0.001304"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:43:11.042407" level="INFO">[3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a document file. Can be both a file or a fetchable resource on the web.  [string] [required]

Options:
      --version                           Show version number  [boolean]
      --help                              Show help  [boolean]
  -p, --port                              Port that Prism will run on.  [number] [required] [default: 4010]
  -h, --host                              Host that Prism will listen to.  [string] [required] [default: "127.0.0.1"]
      --cors                              Enables CORS headers.  [boolean] [default: true]
  -m, --multiprocess                      Forks the http server from the CLI for faster log processing.  [boolean] [default: false]
      --errors                            Specifies whether request/response violations marked as errors will produce an error response  [boolean] [required] [default: false]
  -v, --verboseLevel                      Turns on verbose logging.  [required] [choices: "trace", "debug", "info", "warn", "error", "fatal", "silent"] [default: "info"]
  -d, --dynamic                           Dynamically generate examples.  [boolean] [default: false]
      --json-schema-faker-fillProperties  Generate additional properties when using dynamic generation.  [boolean]
      --ignoreExamples                    Tell Prism to treat the spec as though it has no examples. When in static mode,
                                                                  returns an example that has not been generated using json-schema-faker, but was
                                                                  created by Prism. When in dynamic mode, this flag is ignored, since in dynamic mode,
                                                                  examples are not consulted and json-schema-faker is used to generate a response based
                                                                  on the schema defined in the spec  [boolean] [default: false]

listen EADDRINUSE: address already in use 0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:43:11.042223" elapsed="0.000290"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:43:11.042739" elapsed="0.000189"/>
</kw>
<status status="PASS" start="2024-05-06T15:43:11.040452" elapsed="0.002565"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:43:11.040077" elapsed="0.002987"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T15:43:11.039923" elapsed="0.003179"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_pets_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:43:11.044930" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:43:11.044189" elapsed="0.000816"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:43:11.046020" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:43:11.045316" elapsed="10.323991"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:43:11.045151" elapsed="10.324289"/>
</kw>
<arg>http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-06T15:43:11.043930" elapsed="10.325778"/>
</kw>
<status status="PASS" start="2024-05-06T15:43:11.043694" elapsed="10.326128"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:43:11.043323" elapsed="10.326560"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_pets_endpoint</var>
<status status="PASS" start="2024-05-06T15:43:11.043215" elapsed="10.326736"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:43:21.371299" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:43:21.372986" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:43:21.371126" elapsed="0.001897"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:43:21.373321" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10010 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10010 ms
Total:          10010 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:43:21.373172" elapsed="0.000210"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:43:21.373511" elapsed="0.000267"/>
</kw>
<status status="PASS" start="2024-05-06T15:43:21.370789" elapsed="0.003084"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:43:21.370299" elapsed="0.003622"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:43:21.370130" elapsed="0.003828"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint">
<kw name="Run HTTPStat POST Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:43:21.375793" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:43:21.375186" elapsed="0.000673"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:43:21.376844" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order" -method "POST" -body '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:43:21.376147" elapsed="10.309874"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:43:21.375993" elapsed="10.310131"/>
</kw>
<arg>http://0.0.0.0:8080/store/order</arg>
<arg>POST</arg>
<arg>'{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}'</arg>
<status status="PASS" start="2024-05-06T15:43:21.374830" elapsed="10.311377"/>
</kw>
<status status="PASS" start="2024-05-06T15:43:21.374551" elapsed="10.311784"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:43:21.374179" elapsed="10.312219"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-06T15:43:21.374071" elapsed="10.312373"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:43:31.687807" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:43:31.689260" level="INFO">${API_SERVER_LOG_CONTENTS} = [3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a documen...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:43:31.687601" elapsed="0.001748"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:43:31.689884" level="INFO">[3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a document file. Can be both a file or a fetchable resource on the web.  [string] [required]

Options:
      --version                           Show version number  [boolean]
      --help                              Show help  [boolean]
  -p, --port                              Port that Prism will run on.  [number] [required] [default: 4010]
  -h, --host                              Host that Prism will listen to.  [string] [required] [default: "127.0.0.1"]
      --cors                              Enables CORS headers.  [boolean] [default: true]
  -m, --multiprocess                      Forks the http server from the CLI for faster log processing.  [boolean] [default: false]
      --errors                            Specifies whether request/response violations marked as errors will produce an error response  [boolean] [required] [default: false]
  -v, --verboseLevel                      Turns on verbose logging.  [required] [choices: "trace", "debug", "info", "warn", "error", "fatal", "silent"] [default: "info"]
  -d, --dynamic                           Dynamically generate examples.  [boolean] [default: false]
      --json-schema-faker-fillProperties  Generate additional properties when using dynamic generation.  [boolean]
      --ignoreExamples                    Tell Prism to treat the spec as though it has no examples. When in static mode,
                                                                  returns an example that has not been generated using json-schema-faker, but was
                                                                  created by Prism. When in dynamic mode, this flag is ignored, since in dynamic mode,
                                                                  examples are not consulted and json-schema-faker is used to generate a response based
                                                                  on the schema defined in the spec  [boolean] [default: false]

listen EADDRINUSE: address already in use 0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:43:31.689546" elapsed="0.000442"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:43:31.690730" elapsed="0.000183"/>
</kw>
<status status="PASS" start="2024-05-06T15:43:31.687361" elapsed="0.003643"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:43:31.686974" elapsed="0.004071"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T15:43:31.686824" elapsed="0.004252"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_order_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:43:31.692650" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:43:31.692010" elapsed="0.000702"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:43:31.693791" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order/9" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:43:31.693164" elapsed="10.315025"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:43:31.692832" elapsed="10.315473"/>
</kw>
<arg>http://0.0.0.0:8080/store/order/9</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-06T15:43:31.691784" elapsed="10.316618"/>
</kw>
<status status="PASS" start="2024-05-06T15:43:31.691526" elapsed="10.316945"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:43:31.691266" elapsed="10.317251"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-06T15:43:31.691177" elapsed="10.317380"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:43:42.009710" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:43:42.010727" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"20...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:43:42.009545" elapsed="0.001220"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:43:42.011065" level="INFO">--------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"2019-08-24T14:15:22Z","status":"placed","complete":false}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10008 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10009 ms
Total:          10009 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:43:42.010916" elapsed="0.000209"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:43:42.011344" elapsed="0.000184"/>
</kw>
<status status="PASS" start="2024-05-06T15:43:42.009271" elapsed="0.002348"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:43:42.008850" elapsed="0.002817"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:43:42.008707" elapsed="0.002997"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_latency_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T15:43:42.012545" elapsed="5.017379"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T15:44:17.032496" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T15:43:47.030503" elapsed="30.002320"/>
</kw>
<kw name="Add Latency Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Latency Toxic to the Vegeta load tests. It will add a delay to all data going through the proxy.</doc>
<status status="PASS" start="2024-05-06T15:44:17.033242" elapsed="5.010834"/>
</kw>
<status status="PASS" start="2024-05-06T15:43:42.012289" elapsed="40.031921"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:43:42.011918" elapsed="40.032348"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_latency_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T15:43:42.011811" elapsed="40.032497"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:44:22.045493" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:44:22.046848" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"20...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:44:22.045322" elapsed="0.001569"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:44:22.047229" level="INFO">--------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"2019-08-24T14:15:22Z","status":"placed","complete":false}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10008 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10009 ms
Total:          10009 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:44:22.047061" elapsed="0.000993"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:44:22.048221" elapsed="0.000208"/>
</kw>
<status status="PASS" start="2024-05-06T15:44:22.045045" elapsed="0.003483"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:44:22.044609" elapsed="0.003969"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:44:22.044462" elapsed="0.004155"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_latency_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T15:44:22.049595" elapsed="5.016525"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T15:44:57.067487" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T15:44:27.066474" elapsed="30.001242"/>
</kw>
<kw name="Add Latency Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Latency Toxic to the Vegeta load tests. It will add a delay to all data going through the proxy.</doc>
<status status="PASS" start="2024-05-06T15:44:57.068239" elapsed="5.008005"/>
</kw>
<status status="PASS" start="2024-05-06T15:44:22.049333" elapsed="40.027044"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:44:22.048981" elapsed="40.027452"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_latency_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T15:44:22.048738" elapsed="40.027739"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:45:02.077670" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:45:02.079033" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"20...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:45:02.077501" elapsed="0.001577"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:45:02.079438" level="INFO">--------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"2019-08-24T14:15:22Z","status":"placed","complete":false}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10008 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10009 ms
Total:          10009 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:45:02.079267" elapsed="0.000233"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:45:02.079634" elapsed="0.000181"/>
</kw>
<status status="PASS" start="2024-05-06T15:45:02.077229" elapsed="0.002680"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:45:02.076798" elapsed="0.003159"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:45:02.076652" elapsed="0.003467"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint">
<kw name="Run HTTPStat POST Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:45:02.082147" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:45:02.081371" elapsed="0.000884"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:45:02.083932" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order" -method "POST" -body '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:45:02.082651" elapsed="10.305681"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:45:02.082448" elapsed="10.306015"/>
</kw>
<arg>http://0.0.0.0:8080/store/order</arg>
<arg>POST</arg>
<arg>'{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}'</arg>
<status status="PASS" start="2024-05-06T15:45:02.080974" elapsed="10.307598"/>
</kw>
<status status="PASS" start="2024-05-06T15:45:02.080696" elapsed="10.307962"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:45:02.080365" elapsed="10.308446"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-06T15:45:02.080246" elapsed="10.308616"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:45:12.390258" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:45:12.392459" level="INFO">${API_SERVER_LOG_CONTENTS} = [3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a documen...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:45:12.390049" elapsed="0.002475"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:45:12.393050" level="INFO">[3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a document file. Can be both a file or a fetchable resource on the web.  [string] [required]

Options:
      --version                           Show version number  [boolean]
      --help                              Show help  [boolean]
  -p, --port                              Port that Prism will run on.  [number] [required] [default: 4010]
  -h, --host                              Host that Prism will listen to.  [string] [required] [default: "127.0.0.1"]
      --cors                              Enables CORS headers.  [boolean] [default: true]
  -m, --multiprocess                      Forks the http server from the CLI for faster log processing.  [boolean] [default: false]
      --errors                            Specifies whether request/response violations marked as errors will produce an error response  [boolean] [required] [default: false]
  -v, --verboseLevel                      Turns on verbose logging.  [required] [choices: "trace", "debug", "info", "warn", "error", "fatal", "silent"] [default: "info"]
  -d, --dynamic                           Dynamically generate examples.  [boolean] [default: false]
      --json-schema-faker-fillProperties  Generate additional properties when using dynamic generation.  [boolean]
      --ignoreExamples                    Tell Prism to treat the spec as though it has no examples. When in static mode,
                                                                  returns an example that has not been generated using json-schema-faker, but was
                                                                  created by Prism. When in dynamic mode, this flag is ignored, since in dynamic mode,
                                                                  examples are not consulted and json-schema-faker is used to generate a response based
                                                                  on the schema defined in the spec  [boolean] [default: false]

listen EADDRINUSE: address already in use 0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:45:12.392830" elapsed="0.000338"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:45:12.393313" elapsed="0.000189"/>
</kw>
<status status="PASS" start="2024-05-06T15:45:12.389632" elapsed="0.003965"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:45:12.389209" elapsed="0.004491"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T15:45:12.389041" elapsed="0.004704"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_pets_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:45:12.396031" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:45:12.395018" elapsed="0.001239"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:45:12.398116" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:45:12.396868" elapsed="10.330052"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:45:12.396537" elapsed="10.330499"/>
</kw>
<arg>http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-06T15:45:12.394682" elapsed="10.332450"/>
</kw>
<status status="PASS" start="2024-05-06T15:45:12.394325" elapsed="10.332879"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:45:12.393992" elapsed="10.333278"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_pets_endpoint</var>
<status status="PASS" start="2024-05-06T15:45:12.393875" elapsed="10.333438"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:45:22.728519" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:45:22.729756" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:45:22.728351" elapsed="0.001458"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:45:22.730295" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10009 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10009 ms
Total:          10009 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:45:22.730104" elapsed="0.000262"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:45:22.730507" elapsed="0.000192"/>
</kw>
<status status="PASS" start="2024-05-06T15:45:22.728078" elapsed="0.003376"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:45:22.727614" elapsed="0.003894"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:45:22.727467" elapsed="0.004082"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_slow_close_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T15:45:22.732415" elapsed="5.015051"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T15:45:57.749269" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T15:45:27.748030" elapsed="30.001472"/>
</kw>
<kw name="Add Slow Close Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Slow Close Toxic to the Vegeta load tests. It will delay the TCP socket from closing until delay has elapsed.</doc>
<status status="PASS" start="2024-05-06T15:45:57.750028" elapsed="5.008208"/>
</kw>
<status status="PASS" start="2024-05-06T15:45:22.732186" elapsed="40.026285"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:45:22.731886" elapsed="40.026828"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_slow_close_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T15:45:22.731779" elapsed="40.027048"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:46:02.761159" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:46:02.762910" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:46:02.760856" elapsed="0.002129"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:46:02.763526" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10009 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10009 ms
Total:          10009 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:46:02.763252" elapsed="0.000384"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:46:02.763956" elapsed="0.000340"/>
</kw>
<status status="PASS" start="2024-05-06T15:46:02.760269" elapsed="0.004195"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:46:02.759454" elapsed="0.005129"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:46:02.759146" elapsed="0.005498"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_limited_bandwidth_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T15:46:02.765863" elapsed="5.016964"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T15:46:37.783947" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T15:46:07.783061" elapsed="30.001070"/>
</kw>
<kw name="Add Limited Bandwidth Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Limited Bandwidth Toxic to the Vegeta load tests. It will limit a connection to a maximum number of kilobytes per second.</doc>
<status status="PASS" start="2024-05-06T15:46:37.784458" elapsed="5.041637"/>
</kw>
<status status="PASS" start="2024-05-06T15:46:02.765451" elapsed="40.060900"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:46:02.765015" elapsed="40.062800"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_limited_bandwidth_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T15:46:02.764862" elapsed="40.063071"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:46:42.831202" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:46:42.834674" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:46:42.830765" elapsed="0.003965"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:46:42.835205" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10009 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10009 ms
Total:          10009 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:46:42.834948" elapsed="0.000325"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:46:42.835428" elapsed="0.000176"/>
</kw>
<status status="PASS" start="2024-05-06T15:46:42.829984" elapsed="0.005760"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:46:42.829089" elapsed="0.008053"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:46:42.828736" elapsed="0.008521"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint">
<kw name="Run HTTPStat POST Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:46:42.840817" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:46:42.839668" elapsed="0.001243"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:46:42.842977" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order" -method "POST" -body '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:46:42.841536" elapsed="10.370655"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:46:42.841211" elapsed="10.371111"/>
</kw>
<arg>http://0.0.0.0:8080/store/order</arg>
<arg>POST</arg>
<arg>'{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}'</arg>
<status status="PASS" start="2024-05-06T15:46:42.838885" elapsed="10.373550"/>
</kw>
<status status="PASS" start="2024-05-06T15:46:42.838330" elapsed="10.374195"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:46:42.837784" elapsed="10.374797"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-06T15:46:42.837507" elapsed="10.375222"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:46:53.214072" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:46:53.215281" level="INFO">${API_SERVER_LOG_CONTENTS} = [3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a documen...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:46:53.213901" elapsed="0.001430"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:46:53.215772" level="INFO">[3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a document file. Can be both a file or a fetchable resource on the web.  [string] [required]

Options:
      --version                           Show version number  [boolean]
      --help                              Show help  [boolean]
  -p, --port                              Port that Prism will run on.  [number] [required] [default: 4010]
  -h, --host                              Host that Prism will listen to.  [string] [required] [default: "127.0.0.1"]
      --cors                              Enables CORS headers.  [boolean] [default: true]
  -m, --multiprocess                      Forks the http server from the CLI for faster log processing.  [boolean] [default: false]
      --errors                            Specifies whether request/response violations marked as errors will produce an error response  [boolean] [required] [default: false]
  -v, --verboseLevel                      Turns on verbose logging.  [required] [choices: "trace", "debug", "info", "warn", "error", "fatal", "silent"] [default: "info"]
  -d, --dynamic                           Dynamically generate examples.  [boolean] [default: false]
      --json-schema-faker-fillProperties  Generate additional properties when using dynamic generation.  [boolean]
      --ignoreExamples                    Tell Prism to treat the spec as though it has no examples. When in static mode,
                                                                  returns an example that has not been generated using json-schema-faker, but was
                                                                  created by Prism. When in dynamic mode, this flag is ignored, since in dynamic mode,
                                                                  examples are not consulted and json-schema-faker is used to generate a response based
                                                                  on the schema defined in the spec  [boolean] [default: false]

listen EADDRINUSE: address already in use 0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:46:53.215503" elapsed="0.000402"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:46:53.216047" elapsed="0.000185"/>
</kw>
<status status="PASS" start="2024-05-06T15:46:53.213538" elapsed="0.002787"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:46:53.213101" elapsed="0.003274"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T15:46:53.212917" elapsed="0.003497"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_pets_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:46:53.218522" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:46:53.217583" elapsed="0.001096"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:46:53.219707" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:46:53.219022" elapsed="10.310752"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:46:53.218861" elapsed="10.311811"/>
</kw>
<arg>http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-06T15:46:53.217277" elapsed="10.313522"/>
</kw>
<status status="PASS" start="2024-05-06T15:46:53.217010" elapsed="10.313875"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:46:53.216637" elapsed="10.314306"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_pets_endpoint</var>
<status status="PASS" start="2024-05-06T15:46:53.216529" elapsed="10.314463"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:47:03.532347" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:47:03.533552" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:47:03.532174" elapsed="0.001498"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:47:03.534010" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10006 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10006 ms
Total:          10007 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:47:03.533841" elapsed="0.000234"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:47:03.534211" elapsed="0.000184"/>
</kw>
<status status="PASS" start="2024-05-06T15:47:03.531859" elapsed="0.002628"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:47:03.531326" elapsed="0.003209"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:47:03.531164" elapsed="0.003453"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_limited_bandwidth_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T15:47:03.535423" elapsed="5.015568"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T15:47:38.552615" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T15:47:08.551463" elapsed="30.001519"/>
</kw>
<kw name="Add Limited Bandwidth Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Limited Bandwidth Toxic to the Vegeta load tests. It will limit a connection to a maximum number of kilobytes per second.</doc>
<status status="PASS" start="2024-05-06T15:47:38.553333" elapsed="5.007878"/>
</kw>
<status status="PASS" start="2024-05-06T15:47:03.535173" elapsed="40.026748"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:47:03.534852" elapsed="40.027316"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_limited_bandwidth_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T15:47:03.534743" elapsed="40.027535"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:47:43.564856" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:47:43.567335" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:47:43.564552" elapsed="0.002842"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:47:43.568296" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10006 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10006 ms
Total:          10007 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:47:43.567742" elapsed="0.000647"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:47:43.568654" elapsed="0.000268"/>
</kw>
<status status="PASS" start="2024-05-06T15:47:43.563997" elapsed="0.005055"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:47:43.563100" elapsed="0.006018"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:47:43.562790" elapsed="0.006381"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_latency_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T15:47:43.570746" elapsed="5.017292"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T15:48:18.590443" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T15:47:48.588415" elapsed="30.002187"/>
</kw>
<kw name="Add Latency Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Latency Toxic to the Vegeta load tests. It will add a delay to all data going through the proxy.</doc>
<status status="PASS" start="2024-05-06T15:48:18.592123" elapsed="5.005882"/>
</kw>
<status status="PASS" start="2024-05-06T15:47:43.570215" elapsed="40.028263"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:47:43.569475" elapsed="40.029143"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_latency_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T15:47:43.569324" elapsed="40.029394"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:48:23.601688" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:48:23.604260" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:48:23.601314" elapsed="0.003008"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:48:23.604811" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10006 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10006 ms
Total:          10007 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:48:23.604573" elapsed="0.000327"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:48:23.605087" elapsed="0.000432"/>
</kw>
<status status="PASS" start="2024-05-06T15:48:23.600556" elapsed="0.005163"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:48:23.599527" elapsed="0.006267"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:48:23.599035" elapsed="0.006815"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint">
<kw name="Run HTTPStat POST Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:48:23.608444" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:48:23.607556" elapsed="0.001021"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:48:23.610495" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order" -method "POST" -body '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:48:23.609163" elapsed="10.325469"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:48:23.608885" elapsed="10.325871"/>
</kw>
<arg>http://0.0.0.0:8080/store/order</arg>
<arg>POST</arg>
<arg>'{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}'</arg>
<status status="PASS" start="2024-05-06T15:48:23.607111" elapsed="10.327749"/>
</kw>
<status status="PASS" start="2024-05-06T15:48:23.606708" elapsed="10.328233"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:48:23.606177" elapsed="10.328819"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-06T15:48:23.606022" elapsed="10.329020"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:48:33.936241" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:48:33.937754" level="INFO">${API_SERVER_LOG_CONTENTS} = [3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a documen...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:48:33.936074" elapsed="0.001729"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:48:33.938158" level="INFO">[3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a document file. Can be both a file or a fetchable resource on the web.  [string] [required]

Options:
      --version                           Show version number  [boolean]
      --help                              Show help  [boolean]
  -p, --port                              Port that Prism will run on.  [number] [required] [default: 4010]
  -h, --host                              Host that Prism will listen to.  [string] [required] [default: "127.0.0.1"]
      --cors                              Enables CORS headers.  [boolean] [default: true]
  -m, --multiprocess                      Forks the http server from the CLI for faster log processing.  [boolean] [default: false]
      --errors                            Specifies whether request/response violations marked as errors will produce an error response  [boolean] [required] [default: false]
  -v, --verboseLevel                      Turns on verbose logging.  [required] [choices: "trace", "debug", "info", "warn", "error", "fatal", "silent"] [default: "info"]
  -d, --dynamic                           Dynamically generate examples.  [boolean] [default: false]
      --json-schema-faker-fillProperties  Generate additional properties when using dynamic generation.  [boolean]
      --ignoreExamples                    Tell Prism to treat the spec as though it has no examples. When in static mode,
                                                                  returns an example that has not been generated using json-schema-faker, but was
                                                                  created by Prism. When in dynamic mode, this flag is ignored, since in dynamic mode,
                                                                  examples are not consulted and json-schema-faker is used to generate a response based
                                                                  on the schema defined in the spec  [boolean] [default: false]

listen EADDRINUSE: address already in use 0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:48:33.937974" elapsed="0.000878"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:48:33.939004" elapsed="0.000193"/>
</kw>
<status status="PASS" start="2024-05-06T15:48:33.935803" elapsed="0.003486"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:48:33.935376" elapsed="0.003962"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T15:48:33.935233" elapsed="0.004144"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_order_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:48:33.941405" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:48:33.940555" elapsed="0.000994"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:48:33.942641" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order/9" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:48:33.941850" elapsed="10.321137"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:48:33.941693" elapsed="10.321441"/>
</kw>
<arg>http://0.0.0.0:8080/store/order/9</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-06T15:48:33.940293" elapsed="10.322951"/>
</kw>
<status status="PASS" start="2024-05-06T15:48:33.940008" elapsed="10.323315"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:48:33.939679" elapsed="10.323699"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-06T15:48:33.939493" elapsed="10.323933"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:48:44.264808" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:48:44.266152" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"20...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:48:44.264640" elapsed="0.001552"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:48:44.266626" level="INFO">--------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"2019-08-24T14:15:22Z","status":"placed","complete":false}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10006 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10007 ms
Total:          10007 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:48:44.266358" elapsed="0.000344"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:48:44.266864" elapsed="0.000520"/>
</kw>
<status status="PASS" start="2024-05-06T15:48:44.264320" elapsed="0.003171"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:48:44.263868" elapsed="0.003672"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:48:44.263698" elapsed="0.003880"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_limited_bandwidth_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T15:48:44.268480" elapsed="5.014545"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T15:49:19.299863" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T15:48:49.298777" elapsed="30.001321"/>
</kw>
<kw name="Add Limited Bandwidth Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Limited Bandwidth Toxic to the Vegeta load tests. It will limit a connection to a maximum number of kilobytes per second.</doc>
<status status="PASS" start="2024-05-06T15:49:19.300668" elapsed="5.008189"/>
</kw>
<status status="PASS" start="2024-05-06T15:48:44.268230" elapsed="40.040833"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:48:44.267896" elapsed="40.041261"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_limited_bandwidth_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T15:48:44.267773" elapsed="40.041456"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:49:24.311559" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:49:24.313622" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"20...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:49:24.311323" elapsed="0.002345"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:49:24.314057" level="INFO">--------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"2019-08-24T14:15:22Z","status":"placed","complete":false}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10006 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10007 ms
Total:          10007 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:49:24.313873" elapsed="0.000258"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:49:24.314284" elapsed="0.000212"/>
</kw>
<status status="PASS" start="2024-05-06T15:49:24.310905" elapsed="0.003798"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:49:24.309831" elapsed="0.004936"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:49:24.309477" elapsed="0.005336"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_latency_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T15:49:24.316023" elapsed="5.017837"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T15:49:59.335804" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T15:49:29.334300" elapsed="30.001665"/>
</kw>
<kw name="Add Latency Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Latency Toxic to the Vegeta load tests. It will add a delay to all data going through the proxy.</doc>
<status status="PASS" start="2024-05-06T15:49:59.336147" elapsed="5.005210"/>
</kw>
<status status="PASS" start="2024-05-06T15:49:24.315466" elapsed="40.026619"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:49:24.315082" elapsed="40.027090"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_latency_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T15:49:24.314951" elapsed="40.027260"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:50:04.393660" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:50:04.406123" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"20...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:50:04.393058" elapsed="0.013108"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:50:04.406505" level="INFO">--------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"2019-08-24T14:15:22Z","status":"placed","complete":false}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10006 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10007 ms
Total:          10007 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:50:04.406341" elapsed="0.000217"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:50:04.406671" elapsed="0.000147"/>
</kw>
<status status="PASS" start="2024-05-06T15:50:04.392348" elapsed="0.014548"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:50:04.342478" elapsed="0.064494"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:50:04.342349" elapsed="0.064664"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_limited_bandwidth_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T15:50:04.408038" elapsed="5.015305"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T15:50:39.424886" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T15:50:09.423537" elapsed="30.001619"/>
</kw>
<kw name="Add Limited Bandwidth Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Limited Bandwidth Toxic to the Vegeta load tests. It will limit a connection to a maximum number of kilobytes per second.</doc>
<status status="PASS" start="2024-05-06T15:50:39.425694" elapsed="5.009994"/>
</kw>
<status status="PASS" start="2024-05-06T15:50:04.407572" elapsed="40.028255"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:50:04.407215" elapsed="40.028669"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_limited_bandwidth_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T15:50:04.407118" elapsed="40.028809"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:50:44.437135" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:50:44.439475" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"20...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:50:44.436963" elapsed="0.002559"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:50:44.439889" level="INFO">--------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"2019-08-24T14:15:22Z","status":"placed","complete":false}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10006 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10007 ms
Total:          10007 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:50:44.439713" elapsed="0.000240"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:50:44.440093" elapsed="0.000183"/>
</kw>
<status status="PASS" start="2024-05-06T15:50:44.436667" elapsed="0.003756"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:50:44.436230" elapsed="0.004248"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:50:44.436082" elapsed="0.004437"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint">
<kw name="Run HTTPStat POST Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:50:44.442614" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:50:44.442065" elapsed="0.000628"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:50:44.443934" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order" -method "POST" -body '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:50:44.443038" elapsed="10.332268"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:50:44.442858" elapsed="10.332682"/>
</kw>
<arg>http://0.0.0.0:8080/store/order</arg>
<arg>POST</arg>
<arg>'{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}'</arg>
<status status="PASS" start="2024-05-06T15:50:44.441775" elapsed="10.333876"/>
</kw>
<status status="PASS" start="2024-05-06T15:50:44.441244" elapsed="10.334495"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:50:44.440857" elapsed="10.334937"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-06T15:50:44.440644" elapsed="10.335196"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:50:54.777195" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:50:54.778409" level="INFO">${API_SERVER_LOG_CONTENTS} = [3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a documen...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:50:54.777014" elapsed="0.001444"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:50:54.778791" level="INFO">[3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a document file. Can be both a file or a fetchable resource on the web.  [string] [required]

Options:
      --version                           Show version number  [boolean]
      --help                              Show help  [boolean]
  -p, --port                              Port that Prism will run on.  [number] [required] [default: 4010]
  -h, --host                              Host that Prism will listen to.  [string] [required] [default: "127.0.0.1"]
      --cors                              Enables CORS headers.  [boolean] [default: true]
  -m, --multiprocess                      Forks the http server from the CLI for faster log processing.  [boolean] [default: false]
      --errors                            Specifies whether request/response violations marked as errors will produce an error response  [boolean] [required] [default: false]
  -v, --verboseLevel                      Turns on verbose logging.  [required] [choices: "trace", "debug", "info", "warn", "error", "fatal", "silent"] [default: "info"]
  -d, --dynamic                           Dynamically generate examples.  [boolean] [default: false]
      --json-schema-faker-fillProperties  Generate additional properties when using dynamic generation.  [boolean]
      --ignoreExamples                    Tell Prism to treat the spec as though it has no examples. When in static mode,
                                                                  returns an example that has not been generated using json-schema-faker, but was
                                                                  created by Prism. When in dynamic mode, this flag is ignored, since in dynamic mode,
                                                                  examples are not consulted and json-schema-faker is used to generate a response based
                                                                  on the schema defined in the spec  [boolean] [default: false]

listen EADDRINUSE: address already in use 0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:50:54.778614" elapsed="0.000949"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:50:54.779733" elapsed="0.000208"/>
</kw>
<status status="PASS" start="2024-05-06T15:50:54.776671" elapsed="0.003365"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:50:54.776178" elapsed="0.003909"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T15:50:54.776012" elapsed="0.004115"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_pets_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:50:54.782266" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:50:54.781348" elapsed="0.001066"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:50:54.783510" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:50:54.782724" elapsed="10.358384"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:50:54.782562" elapsed="10.358678"/>
</kw>
<arg>http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-06T15:50:54.781048" elapsed="10.360325"/>
</kw>
<status status="PASS" start="2024-05-06T15:50:54.780776" elapsed="10.360670"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:50:54.780350" elapsed="10.361231"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_pets_endpoint</var>
<status status="PASS" start="2024-05-06T15:50:54.780238" elapsed="10.361391"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:51:05.142826" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:51:05.144651" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:51:05.142588" elapsed="0.002107"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:51:05.145037" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10007 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10007 ms
Total:          10007 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:51:05.144868" elapsed="0.000233"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:51:05.145235" elapsed="0.000183"/>
</kw>
<status status="PASS" start="2024-05-06T15:51:05.142309" elapsed="0.003203"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:51:05.141936" elapsed="0.003626"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:51:05.141785" elapsed="0.003816"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_limited_bandwidth_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T15:51:05.146491" elapsed="5.015672"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T15:51:40.163598" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T15:51:10.162488" elapsed="30.001299"/>
</kw>
<kw name="Add Limited Bandwidth Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Limited Bandwidth Toxic to the Vegeta load tests. It will limit a connection to a maximum number of kilobytes per second.</doc>
<status status="PASS" start="2024-05-06T15:51:40.164118" elapsed="5.007587"/>
</kw>
<status status="PASS" start="2024-05-06T15:51:05.146236" elapsed="40.025736"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:51:05.145906" elapsed="40.026195"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_limited_bandwidth_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T15:51:05.145788" elapsed="40.026412"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:51:45.174747" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:51:45.176478" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:51:45.174458" elapsed="0.002093"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:51:45.177082" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10007 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10007 ms
Total:          10007 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:51:45.176851" elapsed="0.000321"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:51:45.177477" elapsed="0.000278"/>
</kw>
<status status="PASS" start="2024-05-06T15:51:45.173915" elapsed="0.003975"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:51:45.172992" elapsed="0.004967"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:51:45.172683" elapsed="0.005329"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_user_endpoint">
<kw name="Run HTTPStat POST Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:51:45.180949" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:51:45.180049" elapsed="0.000999"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:51:45.182740" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/user" -method "POST" -body '{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}' &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:51:45.181653" elapsed="10.326081"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:51:45.181422" elapsed="10.326439"/>
</kw>
<arg>http://0.0.0.0:8080/user</arg>
<arg>POST</arg>
<arg>'{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}'</arg>
<status status="PASS" start="2024-05-06T15:51:45.179187" elapsed="10.328783"/>
</kw>
<status status="PASS" start="2024-05-06T15:51:45.178827" elapsed="10.329228"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:51:45.178394" elapsed="10.329716"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_user_endpoint</var>
<status status="PASS" start="2024-05-06T15:51:45.178170" elapsed="10.329986"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:51:55.509577" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:51:55.510695" level="INFO">${API_SERVER_LOG_CONTENTS} = [3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a documen...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:51:55.509380" elapsed="0.001371"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:51:55.511161" level="INFO">[3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a document file. Can be both a file or a fetchable resource on the web.  [string] [required]

Options:
      --version                           Show version number  [boolean]
      --help                              Show help  [boolean]
  -p, --port                              Port that Prism will run on.  [number] [required] [default: 4010]
  -h, --host                              Host that Prism will listen to.  [string] [required] [default: "127.0.0.1"]
      --cors                              Enables CORS headers.  [boolean] [default: true]
  -m, --multiprocess                      Forks the http server from the CLI for faster log processing.  [boolean] [default: false]
      --errors                            Specifies whether request/response violations marked as errors will produce an error response  [boolean] [required] [default: false]
  -v, --verboseLevel                      Turns on verbose logging.  [required] [choices: "trace", "debug", "info", "warn", "error", "fatal", "silent"] [default: "info"]
  -d, --dynamic                           Dynamically generate examples.  [boolean] [default: false]
      --json-schema-faker-fillProperties  Generate additional properties when using dynamic generation.  [boolean]
      --ignoreExamples                    Tell Prism to treat the spec as though it has no examples. When in static mode,
                                                                  returns an example that has not been generated using json-schema-faker, but was
                                                                  created by Prism. When in dynamic mode, this flag is ignored, since in dynamic mode,
                                                                  examples are not consulted and json-schema-faker is used to generate a response based
                                                                  on the schema defined in the spec  [boolean] [default: false]

listen EADDRINUSE: address already in use 0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:51:55.510946" elapsed="0.001060"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:51:55.512294" elapsed="0.000270"/>
</kw>
<status status="PASS" start="2024-05-06T15:51:55.509017" elapsed="0.003643"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:51:55.508596" elapsed="0.004115"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T15:51:55.508424" elapsed="0.004326"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_user_endpoint_with_fuzzed_data">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:51:55.514789" level="INFO">Running command 'echo '{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}' | radamsa &gt; /tests/resources/mutational-fuzz-data-user-test.dat'.</msg>
<arg>echo '{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-user-test.dat</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:51:55.513963" elapsed="0.012522"/>
</kw>
<arg>Run</arg>
<arg>echo '{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-user-test.dat</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:51:55.513765" elapsed="0.012823"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:51:55.527554" level="INFO">Running command 'httpstat -o /tests/resources/httpstat-response-mutational-fuzz-data-user-output.json -X POST -H 'Content-Type: application/json' -d @/tests/resources/mutational-fuzz-data-user-test.dat http://0.0.0.0:8080/user 2&gt;&amp;1'.</msg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-user-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-user-test.dat http://0.0.0.0:8080/user</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:51:55.526935" elapsed="10.022343"/>
</kw>
<arg>Run</arg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-user-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-user-test.dat http://0.0.0.0:8080/user</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:51:55.526763" elapsed="10.022876"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:52:05.551431" level="INFO">Running command 'TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-user-test.dat -- Logged this on... $TIMESTAMP :: ========" &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-user-endpoint.log'.</msg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-user-test.dat -- Logged this on... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:52:05.550216" elapsed="0.006847"/>
</kw>
<arg>Run</arg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-user-test.dat -- Logged this on... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:52:05.549932" elapsed="0.007276"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:52:05.559340" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-user-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:52:05.557976" elapsed="0.003351"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:52:05.557490" elapsed="0.003945"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:52:05.562687" level="INFO">Running command 'cat /tests/resources/mutational-fuzz-data-user-test.dat &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-user-endpoint.log'.</msg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-user-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:52:05.561914" elapsed="0.005119"/>
</kw>
<arg>Run</arg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-user-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:52:05.561725" elapsed="0.006101"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:52:05.568973" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-user-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:52:05.568224" elapsed="0.002368"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:52:05.568030" elapsed="0.002644"/>
</kw>
<status status="PASS" start="2024-05-06T15:51:55.513321" elapsed="10.057433"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:51:55.512977" elapsed="10.057826"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_user_endpoint_with_fuzzed_data</var>
<status status="PASS" start="2024-05-06T15:51:55.512865" elapsed="10.057976"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:52:05.571866" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:52:05.572631" level="INFO">${API_SERVER_LOG_CONTENTS} = [3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a documen...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:52:05.571719" elapsed="0.000961"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:52:05.572973" level="INFO">[3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a document file. Can be both a file or a fetchable resource on the web.  [string] [required]

Options:
      --version                           Show version number  [boolean]
      --help                              Show help  [boolean]
  -p, --port                              Port that Prism will run on.  [number] [required] [default: 4010]
  -h, --host                              Host that Prism will listen to.  [string] [required] [default: "127.0.0.1"]
      --cors                              Enables CORS headers.  [boolean] [default: true]
  -m, --multiprocess                      Forks the http server from the CLI for faster log processing.  [boolean] [default: false]
      --errors                            Specifies whether request/response violations marked as errors will produce an error response  [boolean] [required] [default: false]
  -v, --verboseLevel                      Turns on verbose logging.  [required] [choices: "trace", "debug", "info", "warn", "error", "fatal", "silent"] [default: "info"]
  -d, --dynamic                           Dynamically generate examples.  [boolean] [default: false]
      --json-schema-faker-fillProperties  Generate additional properties when using dynamic generation.  [boolean]
      --ignoreExamples                    Tell Prism to treat the spec as though it has no examples. When in static mode,
                                                                  returns an example that has not been generated using json-schema-faker, but was
                                                                  created by Prism. When in dynamic mode, this flag is ignored, since in dynamic mode,
                                                                  examples are not consulted and json-schema-faker is used to generate a response based
                                                                  on the schema defined in the spec  [boolean] [default: false]

listen EADDRINUSE: address already in use 0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:52:05.572827" elapsed="0.000232"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:52:05.573173" elapsed="0.000159"/>
</kw>
<status status="PASS" start="2024-05-06T15:52:05.571420" elapsed="0.001988"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:52:05.571093" elapsed="0.002356"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T15:52:05.570971" elapsed="0.002510"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint_with_fuzzed_data">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:52:05.574962" level="INFO">Running command 'echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; /tests/resources/mutational-fuzz-data-order-test.dat'.</msg>
<arg>echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:52:05.574383" elapsed="0.009531"/>
</kw>
<arg>Run</arg>
<arg>echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:52:05.574243" elapsed="0.009766"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:52:05.585067" level="INFO">Running command 'httpstat -o /tests/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @/tests/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order 2&gt;&amp;1'.</msg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:52:05.584341" elapsed="10.017002"/>
</kw>
<arg>Run</arg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:52:05.584177" elapsed="10.017341"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:52:15.604787" level="INFO">Running command 'TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:52:15.603539" elapsed="0.007207"/>
</kw>
<arg>Run</arg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:52:15.603249" elapsed="0.007625"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:52:15.612224" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:52:15.611351" elapsed="0.002874"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:52:15.611133" elapsed="0.003183"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:52:15.615539" level="INFO">Running command 'cat /tests/resources/mutational-fuzz-data-order-test.dat &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:52:15.614737" elapsed="0.005070"/>
</kw>
<arg>Run</arg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:52:15.614490" elapsed="0.005408"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:52:15.621145" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:52:15.620245" elapsed="0.002823"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:52:15.620067" elapsed="0.003095"/>
</kw>
<status status="PASS" start="2024-05-06T15:52:05.574025" elapsed="10.049216"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:52:05.573736" elapsed="10.049550"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint_with_fuzzed_data</var>
<status status="PASS" start="2024-05-06T15:52:05.573576" elapsed="10.049744"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:52:15.624513" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:52:15.626111" level="INFO">${API_SERVER_LOG_CONTENTS} = [3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a documen...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:52:15.624188" elapsed="0.001961"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:52:15.626422" level="INFO">[3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a document file. Can be both a file or a fetchable resource on the web.  [string] [required]

Options:
      --version                           Show version number  [boolean]
      --help                              Show help  [boolean]
  -p, --port                              Port that Prism will run on.  [number] [required] [default: 4010]
  -h, --host                              Host that Prism will listen to.  [string] [required] [default: "127.0.0.1"]
      --cors                              Enables CORS headers.  [boolean] [default: true]
  -m, --multiprocess                      Forks the http server from the CLI for faster log processing.  [boolean] [default: false]
      --errors                            Specifies whether request/response violations marked as errors will produce an error response  [boolean] [required] [default: false]
  -v, --verboseLevel                      Turns on verbose logging.  [required] [choices: "trace", "debug", "info", "warn", "error", "fatal", "silent"] [default: "info"]
  -d, --dynamic                           Dynamically generate examples.  [boolean] [default: false]
      --json-schema-faker-fillProperties  Generate additional properties when using dynamic generation.  [boolean]
      --ignoreExamples                    Tell Prism to treat the spec as though it has no examples. When in static mode,
                                                                  returns an example that has not been generated using json-schema-faker, but was
                                                                  created by Prism. When in dynamic mode, this flag is ignored, since in dynamic mode,
                                                                  examples are not consulted and json-schema-faker is used to generate a response based
                                                                  on the schema defined in the spec  [boolean] [default: false]

listen EADDRINUSE: address already in use 0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:52:15.626282" elapsed="0.000220"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:52:15.626685" elapsed="0.000150"/>
</kw>
<status status="PASS" start="2024-05-06T15:52:15.623973" elapsed="0.003381"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:52:15.623651" elapsed="0.003744"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T15:52:15.623452" elapsed="0.003973"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_pets_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:52:15.629008" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:52:15.628376" elapsed="0.000694"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:52:15.630027" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:52:15.629335" elapsed="10.321084"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:52:15.629195" elapsed="10.321456"/>
</kw>
<arg>http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-06T15:52:15.628147" elapsed="10.322617"/>
</kw>
<status status="PASS" start="2024-05-06T15:52:15.627940" elapsed="10.322903"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:52:15.627685" elapsed="10.323216"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_pets_endpoint</var>
<status status="PASS" start="2024-05-06T15:52:15.627591" elapsed="10.323355"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:52:25.952206" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:52:25.953395" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:52:25.952024" elapsed="0.001407"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:52:25.953815" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       1 ms
TLS handshake:        0 ms
Server processing: 10006 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           1 ms
Pre Transfer:      1 ms
Start Transfer: 10007 ms
Total:          10008 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:52:25.953659" elapsed="0.000219"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:52:25.954009" elapsed="0.000177"/>
</kw>
<status status="PASS" start="2024-05-06T15:52:25.951751" elapsed="0.002526"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:52:25.951296" elapsed="0.003028"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:52:25.951134" elapsed="0.003229"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_limited_bandwidth_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-06T15:52:25.955215" elapsed="5.015883"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T15:53:00.973307" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T15:52:30.971694" elapsed="30.001845"/>
</kw>
<kw name="Add Limited Bandwidth Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Limited Bandwidth Toxic to the Vegeta load tests. It will limit a connection to a maximum number of kilobytes per second.</doc>
<status status="PASS" start="2024-05-06T15:53:00.974064" elapsed="5.009018"/>
</kw>
<status status="PASS" start="2024-05-06T15:52:25.954955" elapsed="40.028265"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:52:25.954581" elapsed="40.028694"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_limited_bandwidth_then_send_user_get_request</var>
<status status="PASS" start="2024-05-06T15:52:25.954474" elapsed="40.028843"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:53:05.984527" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:53:05.985945" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:53:05.984349" elapsed="0.001645"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:53:05.986508" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       1 ms
TLS handshake:        0 ms
Server processing: 10006 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           1 ms
Pre Transfer:      1 ms
Start Transfer: 10007 ms
Total:          10008 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:53:05.986283" elapsed="0.001191"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:53:05.987763" elapsed="0.000248"/>
</kw>
<status status="PASS" start="2024-05-06T15:53:05.984057" elapsed="0.004064"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:53:05.983623" elapsed="0.004550"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-06T15:53:05.983476" elapsed="0.004739"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_user_endpoint">
<kw name="Run HTTPStat POST Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:53:05.990069" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:53:05.989371" elapsed="0.000783"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:53:05.991437" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/user" -method "POST" -body '{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}' &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:53:05.990510" elapsed="10.354851"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:53:05.990316" elapsed="10.355172"/>
</kw>
<arg>http://0.0.0.0:8080/user</arg>
<arg>POST</arg>
<arg>'{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}'</arg>
<status status="PASS" start="2024-05-06T15:53:05.989083" elapsed="10.356606"/>
</kw>
<status status="PASS" start="2024-05-06T15:53:05.988824" elapsed="10.357000"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:53:05.988478" elapsed="10.357439"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_user_endpoint</var>
<status status="PASS" start="2024-05-06T15:53:05.988365" elapsed="10.357594"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:53:16.347154" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:53:16.348650" level="INFO">${API_SERVER_LOG_CONTENTS} = [3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a documen...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:53:16.346983" elapsed="0.001718"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:53:16.349055" level="INFO">[3:26:46 PM] › [CLI] …  awaiting  Starting Prism…
[3:26:46 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a document file. Can be both a file or a fetchable resource on the web.  [string] [required]

Options:
      --version                           Show version number  [boolean]
      --help                              Show help  [boolean]
  -p, --port                              Port that Prism will run on.  [number] [required] [default: 4010]
  -h, --host                              Host that Prism will listen to.  [string] [required] [default: "127.0.0.1"]
      --cors                              Enables CORS headers.  [boolean] [default: true]
  -m, --multiprocess                      Forks the http server from the CLI for faster log processing.  [boolean] [default: false]
      --errors                            Specifies whether request/response violations marked as errors will produce an error response  [boolean] [required] [default: false]
  -v, --verboseLevel                      Turns on verbose logging.  [required] [choices: "trace", "debug", "info", "warn", "error", "fatal", "silent"] [default: "info"]
  -d, --dynamic                           Dynamically generate examples.  [boolean] [default: false]
      --json-schema-faker-fillProperties  Generate additional properties when using dynamic generation.  [boolean]
      --ignoreExamples                    Tell Prism to treat the spec as though it has no examples. When in static mode,
                                                                  returns an example that has not been generated using json-schema-faker, but was
                                                                  created by Prism. When in dynamic mode, this flag is ignored, since in dynamic mode,
                                                                  examples are not consulted and json-schema-faker is used to generate a response based
                                                                  on the schema defined in the spec  [boolean] [default: false]

listen EADDRINUSE: address already in use 0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:53:16.348874" elapsed="0.000519"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:53:16.349534" elapsed="0.000245"/>
</kw>
<status status="PASS" start="2024-05-06T15:53:16.346707" elapsed="0.003180"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:53:16.346258" elapsed="0.003703"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T15:53:16.346114" elapsed="0.003942"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="restart_server">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T15:53:16.354480" level="INFO">Running command 'pkill prism &gt; /dev/null 2&gt;&amp;1; pgrep prism | xargs kill &gt; /dev/null 2&gt;&amp;1; killall prism &gt; /dev/null 2&gt;&amp;1'.</msg>
<arg>pkill prism &gt; /dev/null 2&gt;&amp;1; pgrep prism | xargs kill &gt; /dev/null 2&gt;&amp;1; killall prism &gt; /dev/null 2&gt;&amp;1</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T15:53:16.352940" elapsed="0.069488"/>
</kw>
<arg>Run</arg>
<arg>pkill prism &gt; /dev/null 2&gt;&amp;1; pgrep prism | xargs kill &gt; /dev/null 2&gt;&amp;1; killall prism &gt; /dev/null 2&gt;&amp;1</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-06T15:53:16.352781" elapsed="0.069747"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T15:53:46.424249" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T15:53:16.422878" elapsed="30.001602"/>
</kw>
<kw name="Start Prism Mock Server" owner="PrismMockServerLibrary">
<doc>Start the Prism tool and create a mock API server.</doc>
<status status="PASS" start="2024-05-06T15:53:46.425002" elapsed="5.011061"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-06T15:54:21.437646" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-06T15:53:51.436400" elapsed="30.001476"/>
</kw>
<status status="PASS" start="2024-05-06T15:53:16.352464" elapsed="65.085898"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:53:16.351161" elapsed="65.087468"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">restart_server</var>
<status status="PASS" start="2024-05-06T15:53:16.351031" elapsed="65.087712"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-06T15:54:21.441303" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-06T15:54:21.443857" level="INFO">${API_SERVER_LOG_CONTENTS} = [3:53:51 PM] › [CLI] …  awaiting  Starting Prism…
[3:53:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=ipsam
[3:53:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-06T15:54:21.440943" elapsed="0.002977"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T15:54:21.444516" level="INFO">[3:53:51 PM] › [CLI] …  awaiting  Starting Prism…
[3:53:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=ipsam
[3:53:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[3:53:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=pending&amp;status=sold
[3:53:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=voluptatibus&amp;tags=veritatis&amp;tags=ad&amp;tags=dolor&amp;tags=eum
[3:53:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/-2759653077579259
[3:53:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/-3009350172649099
[3:53:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[3:53:51 PM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[3:53:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=sold&amp;status=available&amp;status=available&amp;status=available
[3:53:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=quia&amp;tags=voluptates&amp;tags=aut&amp;tags=qui
[3:53:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/-7131659911586811
[3:53:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/2265406091640229
[3:53:51 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/5016978852827541
[3:53:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-72436510319243/uploadImage
[3:53:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[3:53:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[3:53:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/8
[3:53:51 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/8496695104970370
[3:53:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[3:53:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[3:53:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[3:53:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=enim&amp;password=ut
[3:53:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[3:53:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/omnis
[3:53:51 PM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/ut
[3:53:51 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/libero
[3:53:51 PM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T15:54:21.444240" elapsed="0.000471"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-06T15:54:21.444902" elapsed="0.000322"/>
</kw>
<status status="PASS" start="2024-05-06T15:54:21.440399" elapsed="0.004958"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-06T15:54:21.439590" elapsed="0.005833"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-06T15:54:21.439163" elapsed="0.006312"/>
</iter>
<var>${GRAPHWALKER_PATH_KEYWORD}</var>
<value>@{GRAPHWALKER_CSV_LINES}</value>
<status status="PASS" start="2024-05-06T15:27:20.725963" elapsed="1620.719628"/>
</for>
<arg>${GRAPHWALKER_PATH_LINES}</arg>
<status status="PASS" start="2024-05-06T15:27:20.725015" elapsed="1620.723015"/>
</kw>
<arg>GraphwalkerPath.csv</arg>
<status status="PASS" start="2024-05-06T15:27:20.715875" elapsed="1620.732413"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T15:54:21.461334" elapsed="0.001464"/>
</kw>
<status status="PASS" start="2024-05-06T15:54:21.460756" elapsed="0.002215"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-06T15:54:21.465286" elapsed="0.000171"/>
</kw>
<status status="PASS" start="2024-05-06T15:54:21.464756" elapsed="0.000801"/>
</kw>
<doc>Click this link to view test documentation traceability : [ https://test-management-platform.com/Test_ID1|Test_ID1]</doc>
<tag>Chaos_Tests</tag>
<tag>Exploratory_Tests</tag>
<tag>Jira_ID1</tag>
<tag>Model-Based_Tests</tag>
<tag>Run_All_Tests</tag>
<tag>Test_ID1</tag>
<status status="PASS" start="2024-05-06T15:27:20.711712" elapsed="1620.754079"/>
</test>
<test id="s1-t5" name="VEGETA CHAOS LOAD TESTS - RAMP UP RUNNER - Test_ID2 : Run the Vegeta Load Tests that connect to Toxiproxy and ramp up." line="51">
<kw name="Automation Section For Slack Notifications">
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-05-06T15:54:21.473482" level="INFO">${AUTOMATION_SECTION_NAME} = VEGETA CHAOS LOAD TESTS - RAMP UP</msg>
<arg>${AUTOMATION_SECTION_NAME}</arg>
<arg>${AUTOMATION_SECTION}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-05-06T15:54:21.472402" elapsed="0.001147"/>
</kw>
<arg>VEGETA CHAOS LOAD TESTS - RAMP UP</arg>
<status status="PASS" start="2024-05-06T15:54:21.471901" elapsed="0.001735"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T15:54:21.474199" elapsed="0.000220"/>
</kw>
<status status="PASS" start="2024-05-06T15:54:21.473877" elapsed="0.000622"/>
</kw>
<kw name="Run Ramp Up Load Test Connected To Toxiproxy">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T15:54:21.481609" level="INFO" html="true">File '&lt;a href="file:///tests/*.bin"&gt;/tests/*.bin&lt;/a&gt;' does not exist.</msg>
<arg>${EXECDIR}/*.bin</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T15:54:21.475183" elapsed="0.006536"/>
</kw>
<kw name="Run Vegeta Ramp Up Load Test" owner="VegetaLoadTestLibrary">
<msg time="2024-05-06T16:05:55.712711" level="INFO">Running Vegeta load test: go run vegeta-load-test-runner.go -rate 50 -duration 30s -url http://0.0.0.0:8080/user/vitae -method GET -output results-0.bin
Vegeta load test executed successfully: Vegeta Load Test Runner - Results
Requests: 1500
Success Rate: 100 %

Running Vegeta load test: go run vegeta-load-test-runner.go -rate 100 -duration 60s -url http://0.0.0.0:8080/user/vitae -method GET -output results-1.bin
Vegeta load test executed successfully: Vegeta Load Test Runner - Results
Requests: 6000
Success Rate: 100 %

Running Vegeta load test: go run vegeta-load-test-runner.go -rate 150 -duration 90s -url http://0.0.0.0:8080/user/vitae -method GET -output results-2.bin
Vegeta load test executed successfully: Vegeta Load Test Runner - Results
Requests: 13500
Success Rate: 100 %

Running Vegeta load test: go run vegeta-load-test-runner.go -rate 200 -duration 120s -url http://0.0.0.0:8080/user/vitae -method GET -output results-3.bin
Vegeta load test executed successfully: Vegeta Load Test Runner - Results
Requests: 24000
Success Rate: 100 %

Running Vegeta load test: go run vegeta-load-test-runner.go -rate 250 -duration 150s -url http://0.0.0.0:8080/user/vitae -method GET -output results-4.bin
Vegeta load test executed successfully: Vegeta Load Test Runner - Results
Requests: 37500
Success Rate: 100 %

Running Vegeta load test: go run vegeta-load-test-runner.go -rate 300 -duration 180s -url http://0.0.0.0:8080/user/vitae -method GET -output results-5.bin
Vegeta load test executed successfully: Vegeta Load Test Runner - Results
Requests: 54000
Success Rate: 100 %</msg>
<arg>http://0.0.0.0:8080/user/vitae</arg>
<arg>GET</arg>
<doc>Runs the vegeta-load-test-runner.go automation with a ramp up mechanism.</doc>
<status status="PASS" start="2024-05-06T15:54:21.481921" elapsed="694.234556"/>
</kw>
<kw name="Move Files" owner="OperatingSystem">
<msg time="2024-05-06T16:05:55.734844" level="INFO" html="true">Moved file from '&lt;a href="file:///tests/results-4.bin"&gt;/tests/results-4.bin&lt;/a&gt;' to '&lt;a href="file:///tests/results/results-4.bin"&gt;/tests/results/results-4.bin&lt;/a&gt;'.</msg>
<msg time="2024-05-06T16:05:55.736023" level="INFO" html="true">Moved file from '&lt;a href="file:///tests/results-5.bin"&gt;/tests/results-5.bin&lt;/a&gt;' to '&lt;a href="file:///tests/results/results-5.bin"&gt;/tests/results/results-5.bin&lt;/a&gt;'.</msg>
<msg time="2024-05-06T16:05:55.737132" level="INFO" html="true">Moved file from '&lt;a href="file:///tests/results-1.bin"&gt;/tests/results-1.bin&lt;/a&gt;' to '&lt;a href="file:///tests/results/results-1.bin"&gt;/tests/results/results-1.bin&lt;/a&gt;'.</msg>
<msg time="2024-05-06T16:05:55.738261" level="INFO" html="true">Moved file from '&lt;a href="file:///tests/results-0.bin"&gt;/tests/results-0.bin&lt;/a&gt;' to '&lt;a href="file:///tests/results/results-0.bin"&gt;/tests/results/results-0.bin&lt;/a&gt;'.</msg>
<msg time="2024-05-06T16:05:55.739511" level="INFO" html="true">Moved file from '&lt;a href="file:///tests/results-2.bin"&gt;/tests/results-2.bin&lt;/a&gt;' to '&lt;a href="file:///tests/results/results-2.bin"&gt;/tests/results/results-2.bin&lt;/a&gt;'.</msg>
<msg time="2024-05-06T16:05:55.740579" level="INFO" html="true">Moved file from '&lt;a href="file:///tests/results-3.bin"&gt;/tests/results-3.bin&lt;/a&gt;' to '&lt;a href="file:///tests/results/results-3.bin"&gt;/tests/results/results-3.bin&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/*.bin</arg>
<arg>${EXECDIR}/results/</arg>
<doc>Moves specified files to the target directory.</doc>
<status status="PASS" start="2024-05-06T16:05:55.719082" elapsed="0.021624"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Vegeta Load Test Completed</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T16:05:55.740883" elapsed="0.001702"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Check the results.bin files found in... ${EXECDIR}/results</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T16:05:55.742770" elapsed="0.000821"/>
</kw>
<status status="PASS" start="2024-05-06T15:54:21.474785" elapsed="694.269665"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T16:05:55.745809" elapsed="0.000244"/>
</kw>
<status status="PASS" start="2024-05-06T16:05:55.745073" elapsed="0.001114"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-06T16:05:55.747081" elapsed="0.000151"/>
</kw>
<status status="PASS" start="2024-05-06T16:05:55.746744" elapsed="0.000618"/>
</kw>
<doc>Click this link to view test documentation traceability : [ https://test-management-platform.com/Test_ID2|Test_ID2]</doc>
<tag>Chaos_Tests</tag>
<tag>Jira_ID2</tag>
<tag>Load_Tests</tag>
<tag>Run_All_Tests</tag>
<tag>Test_ID2</tag>
<status status="PASS" start="2024-05-06T15:54:21.469634" elapsed="694.277963"/>
</test>
<test id="s1-t6" name="VEGETA CHAOS LOAD TESTS - CUSTOMIZED PARAMETERS RUNNER - POST REQUESTS - Test_ID3 : Run the Vegeta Load Tests with custom user defined parameters. This can run for seconds, minutes, hours, days etc. as long as the duration is given a valid amount of seconds." line="59">
<kw name="Automation Section For Slack Notifications">
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-05-06T16:05:55.753806" level="INFO">${AUTOMATION_SECTION_NAME} = VEGETA CHAOS LOAD TESTS - CUSTOMIZED PARAMETERS RUNNER - POST REQUESTS</msg>
<arg>${AUTOMATION_SECTION_NAME}</arg>
<arg>${AUTOMATION_SECTION}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-05-06T16:05:55.753323" elapsed="0.000574"/>
</kw>
<arg>VEGETA CHAOS LOAD TESTS - CUSTOMIZED PARAMETERS RUNNER - POST REQUESTS</arg>
<status status="PASS" start="2024-05-06T16:05:55.751856" elapsed="0.002142"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T16:05:55.759950" elapsed="0.000287"/>
</kw>
<status status="PASS" start="2024-05-06T16:05:55.754239" elapsed="0.006096"/>
</kw>
<kw name="Create Base64 JQ Output From Given String">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T16:05:55.765246" level="INFO">Running command 'echo -n '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | jq -r '@base64' 2&gt;&amp;1'.</msg>
<msg time="2024-05-06T16:05:55.818195" level="INFO">${BASE64_OUTPUT} = eyJpZCI6OSwicGV0SWQiOjksInF1YW50aXR5IjoxLCJzaGlwRGF0ZSI6IjIwMjEtMDctMjlUMDA6MDA6MDAuMDAwWiIsInN0YXR1cyI6InBsYWNlZCIsImNvbXBsZXRlIjp0cnVlfQ==</msg>
<var>${BASE64_OUTPUT}</var>
<arg>echo -n '${STRING_INPUT}' | jq -r '@base64'</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T16:05:55.763827" elapsed="0.054419"/>
</kw>
<return>
<value>${BASE64_OUTPUT}</value>
<status status="PASS" start="2024-05-06T16:05:55.819026" elapsed="0.004314"/>
</return>
<msg time="2024-05-06T16:05:55.823709" level="INFO">${BASE64_OUTPUT} = eyJpZCI6OSwicGV0SWQiOjksInF1YW50aXR5IjoxLCJzaGlwRGF0ZSI6IjIwMjEtMDctMjlUMDA6MDA6MDAuMDAwWiIsInN0YXR1cyI6InBsYWNlZCIsImNvbXBsZXRlIjp0cnVlfQ==</msg>
<var>${BASE64_OUTPUT}</var>
<arg>{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}</arg>
<status status="PASS" start="2024-05-06T16:05:55.763217" elapsed="0.060595"/>
</kw>
<kw name="Run Custom Vegeta Load Test Connected To Toxiproxy">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T16:05:55.827116" level="INFO" html="true">File '&lt;a href="file:///tests/*.bin"&gt;/tests/*.bin&lt;/a&gt;' does not exist.</msg>
<arg>${EXECDIR}/*.bin</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T16:05:55.825707" elapsed="0.001502"/>
</kw>
<kw name="Run Specific Parameters Vegeta Load Test" owner="VegetaLoadTestLibrary">
<msg time="2024-05-06T16:06:16.235991" level="INFO">Running Vegeta load test: go run vegeta-load-test-runner.go -rate 100 -duration 10s -url http://0.0.0.0:8080/store/order -method POST -body eyJpZCI6OSwicGV0SWQiOjksInF1YW50aXR5IjoxLCJzaGlwRGF0ZSI6IjIwMjEtMDctMjlUMDA6MDA6MDAuMDAwWiIsInN0YXR1cyI6InBsYWNlZCIsImNvbXBsZXRlIjp0cnVlfQ== -output results.bin
Vegeta load test executed successfully: Vegeta Load Test Runner - Results
Requests: 1000
Success Rate: 0 %</msg>
<arg>${USER_DEFINED_TEST_RATE}</arg>
<arg>${USER_DEFINED_TEST_DURATION}</arg>
<arg>${USER_DEFINED_URL}</arg>
<arg>${USER_DEFINED_METHOD}</arg>
<arg>${USER_DEFINED_TEST_REQUEST_BODY}</arg>
<arg>${USER_DEFINED_TEST_OUTPUT_FILE}</arg>
<doc>Runs the vegeta-load-test-runner.go automation with specific given parameters for more customization.</doc>
<status status="PASS" start="2024-05-06T16:05:55.827373" elapsed="20.408739"/>
</kw>
<kw name="Move Files" owner="OperatingSystem">
<msg time="2024-05-06T16:06:16.240000" level="INFO" html="true">Moved file from '&lt;a href="file:///tests/results.bin"&gt;/tests/results.bin&lt;/a&gt;' to '&lt;a href="file:///tests/results/results.bin"&gt;/tests/results/results.bin&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/*.bin</arg>
<arg>${EXECDIR}/results/</arg>
<doc>Moves specified files to the target directory.</doc>
<status status="PASS" start="2024-05-06T16:06:16.236364" elapsed="0.003728"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Vegeta Load Test Completed</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T16:06:16.240270" elapsed="0.000222"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Check the results.bin files found in... ${EXECDIR}/results</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T16:06:16.240874" elapsed="0.000424"/>
</kw>
<arg>http://0.0.0.0:8080/store/order</arg>
<arg>${BASE64_OUTPUT}</arg>
<arg>POST</arg>
<status status="PASS" start="2024-05-06T16:05:55.825096" elapsed="20.416358"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T16:06:16.242720" elapsed="0.000262"/>
</kw>
<status status="PASS" start="2024-05-06T16:06:16.242035" elapsed="0.001038"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-06T16:06:16.243881" elapsed="0.000128"/>
</kw>
<status status="PASS" start="2024-05-06T16:06:16.243447" elapsed="0.000643"/>
</kw>
<doc>Click this link to view test documentation traceability : [ https://test-management-platform.com/Test_ID3|Test_ID3]</doc>
<tag>Chaos_Tests</tag>
<tag>Jira_ID3</tag>
<tag>Load_Tests</tag>
<tag>Run_All_Tests</tag>
<tag>Test_ID3</tag>
<status status="PASS" start="2024-05-06T16:05:55.749154" elapsed="20.495062"/>
</test>
<test id="s1-t7" name="VEGETA CHAOS LOAD TESTS - CUSTOMIZED PARAMETERS RUNNER - GET REQUESTS - Test_ID4 : Run the Vegeta Load Tests with custom user defined parameters. This can run for seconds, minutes, hours, days etc. as long as the duration is given a valid amount of seconds." line="68">
<kw name="Automation Section For Slack Notifications">
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-05-06T16:06:16.246605" level="INFO">${AUTOMATION_SECTION_NAME} = VEGETA CHAOS LOAD TESTS - CUSTOMIZED PARAMETERS RUNNER - GET REQUESTS</msg>
<arg>${AUTOMATION_SECTION_NAME}</arg>
<arg>${AUTOMATION_SECTION}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-05-06T16:06:16.246254" elapsed="0.000424"/>
</kw>
<arg>VEGETA CHAOS LOAD TESTS - CUSTOMIZED PARAMETERS RUNNER - GET REQUESTS</arg>
<status status="PASS" start="2024-05-06T16:06:16.245892" elapsed="0.000873"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T16:06:16.247370" elapsed="0.000312"/>
</kw>
<status status="PASS" start="2024-05-06T16:06:16.247033" elapsed="0.000765"/>
</kw>
<kw name="Run Custom Vegeta Load Test Connected To Toxiproxy">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-06T16:06:16.257067" level="INFO" html="true">File '&lt;a href="file:///tests/*.bin"&gt;/tests/*.bin&lt;/a&gt;' does not exist.</msg>
<arg>${EXECDIR}/*.bin</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-06T16:06:16.255482" elapsed="0.001691"/>
</kw>
<kw name="Run Specific Parameters Vegeta Load Test" owner="VegetaLoadTestLibrary">
<msg time="2024-05-06T16:06:36.611207" level="INFO">Running Vegeta load test: go run vegeta-load-test-runner.go -rate 100 -duration 10s -url http://0.0.0.0:8080/store/order/9 -method GET -body  -output results.bin
Vegeta load test executed successfully: Vegeta Load Test Runner - Results
Requests: 1000
Success Rate: 100 %</msg>
<arg>${USER_DEFINED_TEST_RATE}</arg>
<arg>${USER_DEFINED_TEST_DURATION}</arg>
<arg>${USER_DEFINED_URL}</arg>
<arg>${USER_DEFINED_METHOD}</arg>
<arg>${USER_DEFINED_TEST_REQUEST_BODY}</arg>
<arg>${USER_DEFINED_TEST_OUTPUT_FILE}</arg>
<doc>Runs the vegeta-load-test-runner.go automation with specific given parameters for more customization.</doc>
<status status="PASS" start="2024-05-06T16:06:16.257370" elapsed="20.353932"/>
</kw>
<kw name="Move Files" owner="OperatingSystem">
<msg time="2024-05-06T16:06:36.614838" level="INFO" html="true">Moved file from '&lt;a href="file:///tests/results.bin"&gt;/tests/results.bin&lt;/a&gt;' to '&lt;a href="file:///tests/results/results.bin"&gt;/tests/results/results.bin&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/*.bin</arg>
<arg>${EXECDIR}/results/</arg>
<doc>Moves specified files to the target directory.</doc>
<status status="PASS" start="2024-05-06T16:06:36.611501" elapsed="0.003432"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Vegeta Load Test Completed</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T16:06:36.615773" elapsed="0.000218"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Check the results.bin files found in... ${EXECDIR}/results</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T16:06:36.616142" elapsed="0.000466"/>
</kw>
<arg>http://0.0.0.0:8080/store/order/9</arg>
<arg>${EMPTY}</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-06T16:06:16.248175" elapsed="20.368572"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T16:06:36.618004" elapsed="0.000265"/>
</kw>
<status status="PASS" start="2024-05-06T16:06:36.617237" elapsed="0.001143"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-06T16:06:36.619268" elapsed="0.000215"/>
</kw>
<status status="PASS" start="2024-05-06T16:06:36.618762" elapsed="0.000917"/>
</kw>
<doc>Click this link to view test documentation traceability : [ https://test-management-platform.com/Test_ID4|Test_ID4]</doc>
<tag>Chaos_Tests</tag>
<tag>Jira_ID4</tag>
<tag>Load_Tests</tag>
<tag>Run_All_Tests</tag>
<tag>Test_ID4</tag>
<status status="PASS" start="2024-05-06T16:06:16.244767" elapsed="20.375038"/>
</test>
<test id="s1-t8" name="GO TEST FUNCTIONAL TESTS - GET /USER/USERNAME - Test_ID5 : Analyze the Go Httpstat functional test for a GET request on the /user/vitae API endpoint." line="76">
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T16:06:36.621536" elapsed="0.000220"/>
</kw>
<status status="PASS" start="2024-05-06T16:06:36.621151" elapsed="0.000687"/>
</kw>
<kw name="Analyze Go Test Results">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T16:06:36.623691" level="INFO">Running command 'cat /tests/resources/go-test-console-results.log | grep vitae 2&gt;&amp;1'.</msg>
<msg time="2024-05-06T16:06:36.631842" level="INFO">${GO_TEST_OUTPUT_CONTENTS} =   "Output": "    --- PASS: TestHTTPRequests/GET_http://0.0.0.0:4010/user/vitae (0.10s)\n"</msg>
<var>${GO_TEST_OUTPUT_CONTENTS}</var>
<arg>cat ${EXECDIR}/resources/go-test-console-results.log | grep ${GO_TEST_OUTPUT_CHECK1}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T16:06:36.622928" elapsed="0.008962"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T16:06:36.632232" level="INFO">  "Output": "    --- PASS: TestHTTPRequests/GET_http://0.0.0.0:4010/user/vitae (0.10s)\n"</msg>
<arg>${GO_TEST_OUTPUT_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T16:06:36.632071" elapsed="0.000206"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${GO_TEST_OUTPUT_CONTENTS}</arg>
<arg>${GO_TEST_OUTPUT_CHECK2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-06T16:06:36.632402" elapsed="0.000221"/>
</kw>
<arg>vitae</arg>
<arg>PASS</arg>
<status status="PASS" start="2024-05-06T16:06:36.622051" elapsed="0.010643"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T16:06:36.633154" elapsed="0.000183"/>
</kw>
<status status="PASS" start="2024-05-06T16:06:36.632915" elapsed="0.000519"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-06T16:06:36.634456" elapsed="0.000194"/>
</kw>
<status status="PASS" start="2024-05-06T16:06:36.633964" elapsed="0.000765"/>
</kw>
<doc>Click this link to view test documentation traceability : [ https://test-management-platform.com/Test_ID5|Test_ID5]</doc>
<tag>Functional_Tests</tag>
<tag>Functional_Tests_Analysis</tag>
<tag>Jira_ID5</tag>
<tag>Run_All_Tests</tag>
<tag>Test_ID5</tag>
<status status="PASS" start="2024-05-06T16:06:36.620228" elapsed="0.014613"/>
</test>
<test id="s1-t9" name="GO TEST FUNCTIONAL TESTS - GET /NO_AUTH/PETS/FINDBYSTATUS - Test_ID6 : Analyze the Go Httpstat functional test for a GET request on the /no_auth/pets/findByStatus API endpoint." line="83">
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T16:06:36.636888" elapsed="0.000313"/>
</kw>
<status status="PASS" start="2024-05-06T16:06:36.636575" elapsed="0.000725"/>
</kw>
<kw name="Analyze Go Test Results">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T16:06:36.638826" level="INFO">Running command 'cat /tests/resources/go-test-console-results.log | grep findByStatus 2&gt;&amp;1'.</msg>
<msg time="2024-05-06T16:06:36.642235" level="INFO">${GO_TEST_OUTPUT_CONTENTS} =   "Output": "    --- PASS: TestHTTPRequests/GET_http://0.0.0.0:4010/no_auth/pets/findByStatus?status=available (0.02s)\n"</msg>
<var>${GO_TEST_OUTPUT_CONTENTS}</var>
<arg>cat ${EXECDIR}/resources/go-test-console-results.log | grep ${GO_TEST_OUTPUT_CHECK1}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T16:06:36.638050" elapsed="0.004232"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T16:06:36.643102" level="INFO">  "Output": "    --- PASS: TestHTTPRequests/GET_http://0.0.0.0:4010/no_auth/pets/findByStatus?status=available (0.02s)\n"</msg>
<arg>${GO_TEST_OUTPUT_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T16:06:36.642648" elapsed="0.000581"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${GO_TEST_OUTPUT_CONTENTS}</arg>
<arg>${GO_TEST_OUTPUT_CHECK2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-06T16:06:36.643645" elapsed="0.000379"/>
</kw>
<arg>findByStatus</arg>
<arg>PASS</arg>
<status status="PASS" start="2024-05-06T16:06:36.637627" elapsed="0.006530"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T16:06:36.645278" elapsed="0.000477"/>
</kw>
<status status="PASS" start="2024-05-06T16:06:36.644798" elapsed="0.001131"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-06T16:06:36.647074" elapsed="0.000165"/>
</kw>
<status status="PASS" start="2024-05-06T16:06:36.646598" elapsed="0.000784"/>
</kw>
<doc>Click this link to view test documentation traceability : [ https://test-management-platform.com/Test_ID6|Test_ID6]</doc>
<tag>Functional_Tests</tag>
<tag>Functional_Tests_Analysis</tag>
<tag>Jira_ID6</tag>
<tag>Run_All_Tests</tag>
<tag>Test_ID6</tag>
<status status="PASS" start="2024-05-06T16:06:36.635541" elapsed="0.012086"/>
</test>
<test id="s1-t10" name="GO TEST FUNCTIONAL TESTS - GET /STORE/ORDER/NUMBER - Test_ID7 : Analyze the Go Httpstat functional test for a GET request on the /store/order/9 API endpoint." line="90">
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T16:06:36.650748" elapsed="0.000202"/>
</kw>
<status status="PASS" start="2024-05-06T16:06:36.650290" elapsed="0.000777"/>
</kw>
<kw name="Analyze Go Test Results">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T16:06:36.652945" level="INFO">Running command 'cat /tests/resources/go-test-console-results.log | grep store/order/9 2&gt;&amp;1'.</msg>
<msg time="2024-05-06T16:06:36.659030" level="INFO">${GO_TEST_OUTPUT_CONTENTS} =   "Output": "    --- PASS: TestHTTPRequests/GET_http://0.0.0.0:4010/store/order/9 (0.02s)\n"</msg>
<var>${GO_TEST_OUTPUT_CONTENTS}</var>
<arg>cat ${EXECDIR}/resources/go-test-console-results.log | grep ${GO_TEST_OUTPUT_CHECK1}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T16:06:36.651968" elapsed="0.007109"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T16:06:36.659465" level="INFO">  "Output": "    --- PASS: TestHTTPRequests/GET_http://0.0.0.0:4010/store/order/9 (0.02s)\n"</msg>
<arg>${GO_TEST_OUTPUT_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T16:06:36.659285" elapsed="0.000227"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${GO_TEST_OUTPUT_CONTENTS}</arg>
<arg>${GO_TEST_OUTPUT_CHECK2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-06T16:06:36.659648" elapsed="0.000280"/>
</kw>
<arg>store/order/9</arg>
<arg>PASS</arg>
<status status="PASS" start="2024-05-06T16:06:36.651393" elapsed="0.008613"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T16:06:36.660649" elapsed="0.000225"/>
</kw>
<status status="PASS" start="2024-05-06T16:06:36.660243" elapsed="0.000770"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-06T16:06:36.661802" elapsed="0.000100"/>
</kw>
<status status="PASS" start="2024-05-06T16:06:36.661405" elapsed="0.000568"/>
</kw>
<doc>Click this link to view test documentation traceability : [ https://test-management-platform.com/Test_ID7|Test_ID7]</doc>
<tag>Functional_Tests</tag>
<tag>Functional_Tests_Analysis</tag>
<tag>Jira_ID7</tag>
<tag>Run_All_Tests</tag>
<tag>Test_ID7</tag>
<status status="PASS" start="2024-05-06T16:06:36.648140" elapsed="0.013948"/>
</test>
<test id="s1-t11" name="GO TEST FUNCTIONAL TESTS - POST /STORE/ORDER - Test_ID8 : Analyze the Go Httpstat functional test for a POST request on the /store/order API endpoint. This will create a new order." line="97">
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T16:06:36.663665" elapsed="0.000261"/>
</kw>
<status status="PASS" start="2024-05-06T16:06:36.663278" elapsed="0.000761"/>
</kw>
<kw name="Analyze Go Test Results">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T16:06:36.669222" level="INFO">Running command 'cat /tests/resources/go-test-console-results.log | grep POST_http://0.0.0.0:4010/store/order 2&gt;&amp;1'.</msg>
<msg time="2024-05-06T16:06:36.672946" level="INFO">${GO_TEST_OUTPUT_CONTENTS} =   "Output": "    --- PASS: TestHTTPRequests/POST_http://0.0.0.0:4010/store/order (0.02s)\n"</msg>
<var>${GO_TEST_OUTPUT_CONTENTS}</var>
<arg>cat ${EXECDIR}/resources/go-test-console-results.log | grep ${GO_TEST_OUTPUT_CHECK1}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T16:06:36.664778" elapsed="0.008224"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T16:06:36.673427" level="INFO">  "Output": "    --- PASS: TestHTTPRequests/POST_http://0.0.0.0:4010/store/order (0.02s)\n"</msg>
<arg>${GO_TEST_OUTPUT_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T16:06:36.673223" elapsed="0.000255"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${GO_TEST_OUTPUT_CONTENTS}</arg>
<arg>${GO_TEST_OUTPUT_CHECK2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-06T16:06:36.673960" elapsed="0.000290"/>
</kw>
<arg>POST_http://0.0.0.0:4010/store/order</arg>
<arg>PASS</arg>
<status status="PASS" start="2024-05-06T16:06:36.664292" elapsed="0.010104"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T16:06:36.675122" elapsed="0.000423"/>
</kw>
<status status="PASS" start="2024-05-06T16:06:36.674710" elapsed="0.001098"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-06T16:06:36.677794" elapsed="0.000105"/>
</kw>
<status status="PASS" start="2024-05-06T16:06:36.676998" elapsed="0.000976"/>
</kw>
<doc>Click this link to view test documentation traceability : [ https://test-management-platform.com/Test_ID8|Test_ID8]</doc>
<tag>Functional_Tests</tag>
<tag>Functional_Tests_Analysis</tag>
<tag>Jira_ID8</tag>
<tag>Run_All_Tests</tag>
<tag>Test_ID8</tag>
<status status="PASS" start="2024-05-06T16:06:36.662499" elapsed="0.015592"/>
</test>
<test id="s1-t12" name="GO TEST FUNCTIONAL TESTS - POST /USER - Test_ID9 : Analyze the Go Httpstat functional test for a POST request on the /user API endpoint. This will create a new user." line="104">
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T16:06:36.679594" elapsed="0.000275"/>
</kw>
<status status="PASS" start="2024-05-06T16:06:36.679217" elapsed="0.000737"/>
</kw>
<kw name="Analyze Go Test Results">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-06T16:06:36.681397" level="INFO">Running command 'cat /tests/resources/go-test-console-results.log | grep POST_http://0.0.0.0:4010/user 2&gt;&amp;1'.</msg>
<msg time="2024-05-06T16:06:36.684872" level="INFO">${GO_TEST_OUTPUT_CONTENTS} =   "Output": "    --- PASS: TestHTTPRequests/POST_http://0.0.0.0:4010/user (0.02s)\n"</msg>
<var>${GO_TEST_OUTPUT_CONTENTS}</var>
<arg>cat ${EXECDIR}/resources/go-test-console-results.log | grep ${GO_TEST_OUTPUT_CHECK1}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-06T16:06:36.680466" elapsed="0.004454"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-06T16:06:36.685265" level="INFO">  "Output": "    --- PASS: TestHTTPRequests/POST_http://0.0.0.0:4010/user (0.02s)\n"</msg>
<arg>${GO_TEST_OUTPUT_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-06T16:06:36.685104" elapsed="0.000206"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${GO_TEST_OUTPUT_CONTENTS}</arg>
<arg>${GO_TEST_OUTPUT_CHECK2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-06T16:06:36.685425" elapsed="0.000231"/>
</kw>
<arg>POST_http://0.0.0.0:4010/user</arg>
<arg>PASS</arg>
<status status="PASS" start="2024-05-06T16:06:36.680171" elapsed="0.005561"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-06T16:06:36.686162" elapsed="0.000226"/>
</kw>
<status status="PASS" start="2024-05-06T16:06:36.685942" elapsed="0.001880"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-06T16:06:36.689750" elapsed="0.000113"/>
</kw>
<status status="PASS" start="2024-05-06T16:06:36.689268" elapsed="0.000671"/>
</kw>
<doc>Click this link to view test documentation traceability : [ https://test-management-platform.com/Test_ID9|Test_ID9]</doc>
<tag>Functional_Tests</tag>
<tag>Functional_Tests_Analysis</tag>
<tag>Jira_ID9</tag>
<tag>Run_All_Tests</tag>
<tag>Test_ID9</tag>
<status status="PASS" start="2024-05-06T16:06:36.678426" elapsed="0.011646"/>
</test>
<doc>CI_PIPELINE_URL : https://github.com/jg8481/go-language-rpa-tests/actions</doc>
<status status="PASS" start="2024-05-06T15:26:36.841763" elapsed="2399.857059"/>
</suite>
<statistics>
<total>
<stat pass="12" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="4" fail="0" skip="0">Chaos_Tests</stat>
<stat pass="1" fail="0" skip="0">Exploratory_Tests</stat>
<stat pass="5" fail="0" skip="0">Functional_Tests</stat>
<stat pass="5" fail="0" skip="0">Functional_Tests_Analysis</stat>
<stat pass="1" fail="0" skip="0">Jira_ID1</stat>
<stat pass="1" fail="0" skip="0">Jira_ID2</stat>
<stat pass="1" fail="0" skip="0">Jira_ID3</stat>
<stat pass="1" fail="0" skip="0">Jira_ID4</stat>
<stat pass="1" fail="0" skip="0">Jira_ID5</stat>
<stat pass="1" fail="0" skip="0">Jira_ID6</stat>
<stat pass="1" fail="0" skip="0">Jira_ID7</stat>
<stat pass="1" fail="0" skip="0">Jira_ID8</stat>
<stat pass="1" fail="0" skip="0">Jira_ID9</stat>
<stat pass="3" fail="0" skip="0">Load_Tests</stat>
<stat pass="1" fail="0" skip="0">Model-Based_Tests</stat>
<stat pass="12" fail="0" skip="0">Run_All_Tests</stat>
<stat pass="1" fail="0" skip="0">Test_ID1</stat>
<stat pass="1" fail="0" skip="0">Test_ID2</stat>
<stat pass="1" fail="0" skip="0">Test_ID3</stat>
<stat pass="1" fail="0" skip="0">Test_ID4</stat>
<stat pass="1" fail="0" skip="0">Test_ID5</stat>
<stat pass="1" fail="0" skip="0">Test_ID6</stat>
<stat pass="1" fail="0" skip="0">Test_ID7</stat>
<stat pass="1" fail="0" skip="0">Test_ID8</stat>
<stat pass="1" fail="0" skip="0">Test_ID9</stat>
<stat pass="3" fail="0" skip="0">Tests_Setup</stat>
</tag>
<suite>
<stat pass="12" fail="0" skip="0" id="s1" name="Generic-Automation">Generic-Automation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
