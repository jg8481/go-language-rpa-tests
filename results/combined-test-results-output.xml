<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.0 (Python 3.12.3 on linux)" generated="2024-05-05T12:58:44.975777" rpa="false" schemaversion="5">
<suite id="s1" name="Generic-Automation" source="/tests/generic-automation.robot">
<test id="s1-t1" name="FUNCTIONAL TESTS SETUP : Start the Prism API Mock Server for the Go Httpstat functional tests and Vegeta Load Tests." line="22">
<kw name="Automation Section For Slack Notifications">
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-05-05T12:58:45.057350" level="INFO">${AUTOMATION_SECTION_NAME} = FUNCTIONAL TESTS SETUP</msg>
<arg>${AUTOMATION_SECTION_NAME}</arg>
<arg>${AUTOMATION_SECTION}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-05-05T12:58:45.056187" elapsed="0.001334"/>
</kw>
<arg>FUNCTIONAL TESTS SETUP</arg>
<status status="PASS" start="2024-05-05T12:58:45.054171" elapsed="0.003457"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T12:58:45.058286" elapsed="0.000484"/>
</kw>
<status status="PASS" start="2024-05-05T12:58:45.057884" elapsed="0.001050"/>
</kw>
<kw name="Start Prism API Mock Server">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-05T12:58:45.060623" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-05T12:58:45.059897" elapsed="0.000808"/>
</kw>
<kw name="Download And Install Prism" owner="PrismMockServerLibrary">
<doc>Downloads and installs the Prism tool.</doc>
<status status="PASS" start="2024-05-05T12:58:45.060840" elapsed="13.117709"/>
</kw>
<kw name="Start Prism Mock Server" owner="PrismMockServerLibrary">
<doc>Start the Prism tool and create a mock API server.</doc>
<status status="PASS" start="2024-05-05T12:58:58.178732" elapsed="5.009893"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Prism Mock Server Started</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T12:59:03.189204" elapsed="0.000578"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Check the Mock API log found in... ${EXECDIR}/resources/api-application.log</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T12:59:03.190112" elapsed="0.000460"/>
</kw>
<status status="PASS" start="2024-05-05T12:58:45.059253" elapsed="18.131556"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T12:59:03.192228" elapsed="0.000478"/>
</kw>
<status status="PASS" start="2024-05-05T12:59:03.191426" elapsed="0.001549"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-05T12:59:03.194503" elapsed="0.000210"/>
</kw>
<status status="PASS" start="2024-05-05T12:59:03.193675" elapsed="0.001165"/>
</kw>
<tag>Run_All_Tests</tag>
<tag>Tests_Setup</tag>
<status status="PASS" start="2024-05-05T12:58:45.052589" elapsed="18.142591"/>
</test>
<test id="s1-t2" name="CHAOS AND LOAD TESTS SETUP : Start the Toxiproxy TCP Chaos Proxy." line="29">
<kw name="Automation Section For Slack Notifications">
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-05-05T12:59:03.197763" level="INFO">${AUTOMATION_SECTION_NAME} = CHAOS AND LOAD TESTS SETUP</msg>
<arg>${AUTOMATION_SECTION_NAME}</arg>
<arg>${AUTOMATION_SECTION}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-05-05T12:59:03.197339" elapsed="0.000495"/>
</kw>
<arg>CHAOS AND LOAD TESTS SETUP</arg>
<status status="PASS" start="2024-05-05T12:59:03.196665" elapsed="0.001372"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T12:59:03.198781" elapsed="0.000509"/>
</kw>
<status status="PASS" start="2024-05-05T12:59:03.198418" elapsed="0.000982"/>
</kw>
<kw name="Start Toxiproxy TCP Proxy">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-05T12:59:03.201540" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/toxiproxy.log"&gt;/tests/resources/toxiproxy.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/toxiproxy.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-05T12:59:03.200400" elapsed="0.001261"/>
</kw>
<kw name="Start Toxiproxy Server" owner="ToxiproxyChaosTestLibrary">
<doc>Start the Toxiproxy server.</doc>
<status status="PASS" start="2024-05-05T12:59:03.201987" elapsed="5.005487"/>
</kw>
<kw name="Create TCP Chaos Proxy" owner="ToxiproxyChaosTestLibrary">
<doc>Create a TCP Chaos Proxy for the Vegeta load tests.</doc>
<status status="PASS" start="2024-05-05T12:59:08.207821" elapsed="5.007822"/>
</kw>
<kw name="Add Limited Bandwidth Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Limited Bandwidth Toxic to the Vegeta load tests. It will limit a connection to a maximum number of kilobytes per second.</doc>
<status status="PASS" start="2024-05-05T12:59:13.216227" elapsed="5.009373"/>
</kw>
<kw name="Add Slow Close Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Slow Close Toxic to the Vegeta load tests. It will delay the TCP socket from closing until delay has elapsed.</doc>
<status status="PASS" start="2024-05-05T12:59:18.226168" elapsed="5.007140"/>
</kw>
<kw name="Add Latency Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Latency Toxic to the Vegeta load tests. It will add a delay to all data going through the proxy.</doc>
<status status="PASS" start="2024-05-05T12:59:23.233530" elapsed="5.005029"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Toxiproxy Server Started</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T12:59:28.238938" elapsed="0.000543"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Check the Toxiproxy log found in... ${EXECDIR}/resources/toxiproxy.log</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T12:59:28.239840" elapsed="0.000716"/>
</kw>
<status status="PASS" start="2024-05-05T12:59:03.199828" elapsed="25.040907"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T12:59:28.242212" elapsed="0.000330"/>
</kw>
<status status="PASS" start="2024-05-05T12:59:28.241506" elapsed="0.001180"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-05T12:59:28.244151" elapsed="0.000165"/>
</kw>
<status status="PASS" start="2024-05-05T12:59:28.243281" elapsed="0.001147"/>
</kw>
<tag>Run_All_Tests</tag>
<tag>Tests_Setup</tag>
<status status="PASS" start="2024-05-05T12:59:03.195804" elapsed="25.048815"/>
</test>
<test id="s1-t3" name="MODEL-BASED CHAOS TESTS SETUP : Create a new Graphwalker Path File for the Model-Based Chaos Tests. The Graphwalker Model combines API Functional Test, Chaos Test, and Mutational Fuzz Test strategies." line="36">
<kw name="Automation Section For Slack Notifications">
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-05-05T12:59:28.247280" level="INFO">${AUTOMATION_SECTION_NAME} = MODEL-BASED CHAOS TESTS SETUP</msg>
<arg>${AUTOMATION_SECTION_NAME}</arg>
<arg>${AUTOMATION_SECTION}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-05-05T12:59:28.246959" elapsed="0.000393"/>
</kw>
<arg>MODEL-BASED CHAOS TESTS SETUP</arg>
<status status="PASS" start="2024-05-05T12:59:28.246431" elapsed="0.001842"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T12:59:28.249302" elapsed="0.000359"/>
</kw>
<status status="PASS" start="2024-05-05T12:59:28.248673" elapsed="0.001110"/>
</kw>
<kw name="Create Graphwalker Path File">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-05T12:59:28.252135" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/GraphwalkerPath.csv"&gt;/tests/resources/GraphwalkerPath.csv&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/GraphwalkerPath.csv</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-05T12:59:28.250679" elapsed="0.001561"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T12:59:28.253487" level="INFO">Running command 'java -jar /usr/bin/graphwalker-cli-4.3.2.jar offline --start-element send_get_request_to_user_endpoint --model /tests/resources/GraphwalkerModel.graphml "random(edge_coverage(100))" | jq -r '.currentElementName' &gt;&gt; /tests/resources/GraphwalkerPath.csv'.</msg>
<arg>java -jar /usr/bin/graphwalker-cli-4.3.2.jar offline --start-element send_get_request_to_user_endpoint --model ${EXECDIR}/resources/GraphwalkerModel.graphml "random(edge_coverage(100))" | jq -r '.currentElementName' &gt;&gt; ${EXECDIR}/resources/GraphwalkerPath.csv</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T12:59:28.252641" elapsed="3.054693"/>
</kw>
<arg>Run</arg>
<arg>java -jar /usr/bin/graphwalker-cli-4.3.2.jar offline --start-element send_get_request_to_user_endpoint --model ${EXECDIR}/resources/GraphwalkerModel.graphml "random(edge_coverage(100))" | jq -r '.currentElementName' &gt;&gt; ${EXECDIR}/resources/GraphwalkerPath.csv</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T12:59:28.252433" elapsed="3.055006"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Graphwalker Path File Created</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T12:59:31.307615" elapsed="0.000214"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Check the Graphwalker Path File found in... ${EXECDIR}/resources/GraphwalkerPath.csv</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T12:59:31.308030" elapsed="0.000231"/>
</kw>
<status status="PASS" start="2024-05-05T12:59:28.250286" elapsed="3.058071"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T12:59:31.308995" elapsed="0.000228"/>
</kw>
<status status="PASS" start="2024-05-05T12:59:31.308563" elapsed="0.000733"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-05T12:59:31.310061" elapsed="0.000111"/>
</kw>
<status status="PASS" start="2024-05-05T12:59:31.309599" elapsed="0.000646"/>
</kw>
<tag>Run_All_Tests</tag>
<tag>Tests_Setup</tag>
<status status="PASS" start="2024-05-05T12:59:28.245188" elapsed="3.065193"/>
</test>
<test id="s1-t4" name="MODEL-BASED CHAOS TESTS RUNNER : Run the Graphwalker Path File for the Model-Based Chaos Tests. The Graphwalker Model combines API Functional Test, Chaos Test, and Mutational Fuzz Test strategies." line="43">
<kw name="Automation Section For Slack Notifications">
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-05-05T12:59:31.312638" level="INFO">${AUTOMATION_SECTION_NAME} = MODEL-BASED CHAOS TESTS RUNNER</msg>
<arg>${AUTOMATION_SECTION_NAME}</arg>
<arg>${AUTOMATION_SECTION}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-05-05T12:59:31.312395" elapsed="0.000291"/>
</kw>
<arg>MODEL-BASED CHAOS TESTS RUNNER</arg>
<status status="PASS" start="2024-05-05T12:59:31.311940" elapsed="0.000813"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T12:59:31.313370" elapsed="0.000228"/>
</kw>
<status status="PASS" start="2024-05-05T12:59:31.313095" elapsed="0.000593"/>
</kw>
<kw name="Run Graphwalker Model Based Tests">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-05T12:59:31.314527" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/GraphwalkerPath.csv"&gt;/tests/resources/GraphwalkerPath.csv&lt;/a&gt;'.</msg>
<msg time="2024-05-05T12:59:31.316160" level="INFO">${GRAPHWALKER_CSV_FILE_CONTENTS} = send_get_request_to_user_endpoint
check_api_response_log_files
send_post_request_to_order_endpoint
check_server_log_files
restart_server
check_server_log_files
send_post_request_to_order_endpoint_with...</msg>
<var>${GRAPHWALKER_CSV_FILE_CONTENTS}</var>
<arg>${EXECDIR}/resources/${GRAPHWALKER_CSV_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-05T12:59:31.314332" elapsed="0.001872"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-05T12:59:31.316534" level="INFO">send_get_request_to_user_endpoint
check_api_response_log_files
send_post_request_to_order_endpoint
check_server_log_files
restart_server
check_server_log_files
send_post_request_to_order_endpoint_with_fuzzed_data
check_server_log_files
restart_server
check_server_log_files
send_get_request_to_order_endpoint
check_api_response_log_files
add_toxiproxy_slow_close_then_send_user_get_request
check_api_response_log_files
add_toxiproxy_latency_then_send_user_get_request
check_api_response_log_files
send_post_request_to_user_endpoint
check_server_log_files
send_post_request_to_order_endpoint_with_fuzzed_data
check_server_log_files
send_get_request_to_order_endpoint
check_api_response_log_files
add_toxiproxy_slow_close_then_send_user_get_request
check_api_response_log_files
add_toxiproxy_limited_bandwidth_then_send_user_get_request
check_api_response_log_files
send_post_request_to_order_endpoint
check_server_log_files
restart_server
check_server_log_files
send_post_request_to_user_endpoint_with_fuzzed_data
check_server_log_files
send_get_request_to_order_endpoint
check_api_response_log_files
send_post_request_to_order_endpoint
check_server_log_files
restart_server
check_server_log_files
send_get_request_to_order_endpoint
check_api_response_log_files
add_toxiproxy_limited_bandwidth_then_send_user_get_request
check_api_response_log_files
add_toxiproxy_slow_close_then_send_user_get_request
check_api_response_log_files
send_post_request_to_order_endpoint
check_server_log_files
send_post_request_to_order_endpoint_with_fuzzed_data
check_server_log_files
send_get_request_to_pets_endpoint
check_api_response_log_files
</msg>
<arg>${GRAPHWALKER_CSV_FILE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-05T12:59:31.316374" elapsed="0.000227"/>
</kw>
<kw name="Get Graphwalker Path Keywords From CSV File">
<kw name="Split To Lines" owner="String">
<msg time="2024-05-05T12:59:31.317340" level="INFO">50 lines returned</msg>
<msg time="2024-05-05T12:59:31.317458" level="INFO">@{GRAPHWALKER_LINES} = [ send_get_request_to_user_endpoint | check_api_response_log_files | send_post_request_to_order_endpoint | check_server_log_files | restart_server | check_server_log_files | send_post_request_to_order...</msg>
<var>@{GRAPHWALKER_LINES}</var>
<arg>${GRAPHWALKER_CSV_CONTENT}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2024-05-05T12:59:31.317190" elapsed="0.001025"/>
</kw>
<return>
<value>@{GRAPHWALKER_LINES}</value>
<status status="PASS" start="2024-05-05T12:59:31.318330" elapsed="0.000084"/>
</return>
<msg time="2024-05-05T12:59:31.318791" level="INFO">@{GRAPHWALKER_PATH_LINES} = [ send_get_request_to_user_endpoint | check_api_response_log_files | send_post_request_to_order_endpoint | check_server_log_files | restart_server | check_server_log_files | send_post_request_to_order...</msg>
<var>@{GRAPHWALKER_PATH_LINES}</var>
<arg>${GRAPHWALKER_CSV_FILE_CONTENTS}</arg>
<status status="PASS" start="2024-05-05T12:59:31.316755" elapsed="0.002080"/>
</kw>
<kw name="Run Graphwalker Path Keywords">
<for flavor="IN">
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_user_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-05T12:59:31.321430" level="INFO" html="true">File '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;' does not exist.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-05T12:59:31.320807" elapsed="0.000694"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T12:59:31.322546" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/user/vitae" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T12:59:31.321776" elapsed="10.786138"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T12:59:31.321634" elapsed="10.786378"/>
</kw>
<arg>http://0.0.0.0:8080/user/vitae</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-05T12:59:31.320584" elapsed="10.787506"/>
</kw>
<status status="PASS" start="2024-05-05T12:59:31.320157" elapsed="10.787989"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T12:59:31.319628" elapsed="10.788557"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_user_endpoint</var>
<status status="PASS" start="2024-05-05T12:59:31.319522" elapsed="10.788696"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-05T12:59:42.109230" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-05T12:59:42.110024" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/user/vitae
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"username":"string","firstName":"string","lastName":"string","emai...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-05T12:59:42.108998" elapsed="0.001059"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-05T12:59:42.110328" level="INFO">--------------
URL: http://0.0.0.0:8080/user/vitae
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"username":"string","firstName":"string","lastName":"string","email":"string","password":"string","phone":"string","userStatus":-2147483648}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10077 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10077 ms
Total:          10077 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-05T12:59:42.110194" elapsed="0.000182"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-05T12:59:42.110477" elapsed="0.000143"/>
</kw>
<status status="PASS" start="2024-05-05T12:59:42.108786" elapsed="0.001907"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T12:59:42.108477" elapsed="0.002254"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-05T12:59:42.108359" elapsed="0.002402"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint">
<kw name="Run HTTPStat POST Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-05T12:59:42.112142" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-05T12:59:42.111720" elapsed="0.000502"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T12:59:42.113158" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order" -method "POST" -body '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T12:59:42.112497" elapsed="10.313688"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T12:59:42.112355" elapsed="10.313941"/>
</kw>
<arg>http://0.0.0.0:8080/store/order</arg>
<arg>POST</arg>
<arg>'{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}'</arg>
<status status="PASS" start="2024-05-05T12:59:42.111482" elapsed="10.314905"/>
</kw>
<status status="PASS" start="2024-05-05T12:59:42.111270" elapsed="10.315189"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T12:59:42.110943" elapsed="10.315562"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-05T12:59:42.110858" elapsed="10.315687"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-05T12:59:52.428723" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-05T12:59:52.430280" level="INFO">${API_SERVER_LOG_CONTENTS} = [12:58:59 PM] › [CLI] …  awaiting  Starting Prism…
[12:58:59 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a docum...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-05T12:59:52.428557" elapsed="0.001790"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-05T12:59:52.430679" level="INFO">[12:58:59 PM] › [CLI] …  awaiting  Starting Prism…
[12:58:59 PM] › [CLI] ✖  fatal     
prism mock &lt;document&gt;

Start a mock server with the given document file

Positionals:
  document  Path to a document file. Can be both a file or a fetchable resource on the web.  [string] [required]

Options:
      --version                           Show version number  [boolean]
      --help                              Show help  [boolean]
  -p, --port                              Port that Prism will run on.  [number] [required] [default: 4010]
  -h, --host                              Host that Prism will listen to.  [string] [required] [default: "127.0.0.1"]
      --cors                              Enables CORS headers.  [boolean] [default: true]
  -m, --multiprocess                      Forks the http server from the CLI for faster log processing.  [boolean] [default: false]
      --errors                            Specifies whether request/response violations marked as errors will produce an error response  [boolean] [required] [default: false]
  -v, --verboseLevel                      Turns on verbose logging.  [required] [choices: "trace", "debug", "info", "warn", "error", "fatal", "silent"] [default: "info"]
  -d, --dynamic                           Dynamically generate examples.  [boolean] [default: false]
      --json-schema-faker-fillProperties  Generate additional properties when using dynamic generation.  [boolean]
      --ignoreExamples                    Tell Prism to treat the spec as though it has no examples. When in static mode,
                                                                  returns an example that has not been generated using json-schema-faker, but was
                                                                  created by Prism. When in dynamic mode, this flag is ignored, since in dynamic mode,
                                                                  examples are not consulted and json-schema-faker is used to generate a response based
                                                                  on the schema defined in the spec  [boolean] [default: false]

listen EADDRINUSE: address already in use 0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-05T12:59:52.430507" elapsed="0.000319"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-05T12:59:52.430992" elapsed="0.000164"/>
</kw>
<status status="PASS" start="2024-05-05T12:59:52.428284" elapsed="0.003003"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T12:59:52.427820" elapsed="0.003517"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-05T12:59:52.427669" elapsed="0.003703"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="restart_server">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T12:59:52.433104" level="INFO">Running command 'pkill prism &gt; /dev/null 2&gt;&amp;1; pgrep prism | xargs kill &gt; /dev/null 2&gt;&amp;1; killall prism &gt; /dev/null 2&gt;&amp;1'.</msg>
<arg>pkill prism &gt; /dev/null 2&gt;&amp;1; pgrep prism | xargs kill &gt; /dev/null 2&gt;&amp;1; killall prism &gt; /dev/null 2&gt;&amp;1</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T12:59:52.432453" elapsed="0.026638"/>
</kw>
<arg>Run</arg>
<arg>pkill prism &gt; /dev/null 2&gt;&amp;1; pgrep prism | xargs kill &gt; /dev/null 2&gt;&amp;1; killall prism &gt; /dev/null 2&gt;&amp;1</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T12:59:52.432303" elapsed="0.026920"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-05T13:00:22.460530" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-05T12:59:52.459440" elapsed="30.001210"/>
</kw>
<kw name="Start Prism Mock Server" owner="PrismMockServerLibrary">
<doc>Start the Prism tool and create a mock API server.</doc>
<status status="PASS" start="2024-05-05T13:00:22.460848" elapsed="5.003773"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-05T13:00:57.465766" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-05T13:00:27.464841" elapsed="30.001106"/>
</kw>
<status status="PASS" start="2024-05-05T12:59:52.432045" elapsed="65.034105"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T12:59:52.431629" elapsed="65.034625"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">restart_server</var>
<status status="PASS" start="2024-05-05T12:59:52.431481" elapsed="65.034989"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-05T13:00:57.468264" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-05T13:00:57.469678" level="INFO">${API_SERVER_LOG_CONTENTS} = [1:00:23 PM] › [CLI] …  awaiting  Starting Prism…
[1:00:23 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=ipsum
[1:00:23 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-05T13:00:57.468026" elapsed="0.001716"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-05T13:00:57.470212" level="INFO">[1:00:23 PM] › [CLI] …  awaiting  Starting Prism…
[1:00:23 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=ipsum
[1:00:23 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[1:00:23 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=sold&amp;status=pending&amp;status=available&amp;status=pending&amp;status=pending
[1:00:23 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=quia&amp;tags=hic&amp;tags=aut
[1:00:23 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/-8672484278264735
[1:00:23 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/3961471423327157
[1:00:23 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[1:00:23 PM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[1:00:23 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=pending
[1:00:23 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=magnam&amp;tags=ipsum
[1:00:23 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/-311599348297351
[1:00:23 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-4747178395265483
[1:00:23 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/-433387181370679
[1:00:23 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-5709833485251979/uploadImage
[1:00:23 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[1:00:23 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[1:00:23 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/3
[1:00:23 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/5966868722344354
[1:00:23 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[1:00:23 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[1:00:23 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[1:00:23 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=et&amp;password=ut
[1:00:23 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[1:00:23 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/sint
[1:00:23 PM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/voluptatibus
[1:00:23 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/vero
[1:00:23 PM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-05T13:00:57.469964" elapsed="0.002306"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-05T13:00:57.472716" elapsed="0.000337"/>
</kw>
<status status="PASS" start="2024-05-05T13:00:57.467635" elapsed="0.005556"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:00:57.466976" elapsed="0.006286"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-05T13:00:57.466737" elapsed="0.006580"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint_with_fuzzed_data">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:00:57.476958" level="INFO">Running command 'echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; /tests/resources/mutational-fuzz-data-order-test.dat'.</msg>
<arg>echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:00:57.475965" elapsed="0.014690"/>
</kw>
<arg>Run</arg>
<arg>echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:00:57.475760" elapsed="0.015002"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:00:57.492021" level="INFO">Running command 'httpstat -o /tests/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @/tests/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order 2&gt;&amp;1'.</msg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:00:57.491130" elapsed="10.096408"/>
</kw>
<arg>Run</arg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:00:57.490943" elapsed="10.096769"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:01:07.590109" level="INFO">Running command 'TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:01:07.588495" elapsed="0.009092"/>
</kw>
<arg>Run</arg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:01:07.588019" elapsed="0.009707"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:01:07.599251" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:01:07.598237" elapsed="0.003242"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:01:07.597959" elapsed="0.003628"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:01:07.602962" level="INFO">Running command 'cat /tests/resources/mutational-fuzz-data-order-test.dat &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:01:07.601990" elapsed="0.009291"/>
</kw>
<arg>Run</arg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:01:07.601779" elapsed="0.009701"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:01:07.612793" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:01:07.611935" elapsed="0.007228"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:01:07.611677" elapsed="0.007899"/>
</kw>
<status status="PASS" start="2024-05-05T13:00:57.474235" elapsed="10.145569"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:00:57.473723" elapsed="10.146214"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint_with_fuzzed_data</var>
<status status="PASS" start="2024-05-05T13:00:57.473548" elapsed="10.146465"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-05T13:01:07.621895" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-05T13:01:07.622980" level="INFO">${API_SERVER_LOG_CONTENTS} = [1:00:23 PM] › [CLI] …  awaiting  Starting Prism…
[1:00:23 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=ipsum
[1:00:23 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-05T13:01:07.621633" elapsed="0.001390"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-05T13:01:07.623453" level="INFO">[1:00:23 PM] › [CLI] …  awaiting  Starting Prism…
[1:00:23 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=ipsum
[1:00:23 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[1:00:23 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=sold&amp;status=pending&amp;status=available&amp;status=pending&amp;status=pending
[1:00:23 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=quia&amp;tags=hic&amp;tags=aut
[1:00:23 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/-8672484278264735
[1:00:23 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/3961471423327157
[1:00:23 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[1:00:23 PM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[1:00:23 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=pending
[1:00:23 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=magnam&amp;tags=ipsum
[1:00:23 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/-311599348297351
[1:00:23 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-4747178395265483
[1:00:23 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/-433387181370679
[1:00:23 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-5709833485251979/uploadImage
[1:00:23 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[1:00:23 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[1:00:23 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/3
[1:00:23 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/5966868722344354
[1:00:23 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[1:00:23 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[1:00:23 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[1:00:23 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=et&amp;password=ut
[1:00:23 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[1:00:23 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/sint
[1:00:23 PM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/voluptatibus
[1:00:23 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/vero
[1:00:23 PM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
[1:00:57 PM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[1:00:57 PM] ›     [VALIDATOR] ⚠  warning   Request did not pass the validation rules
[1:00:57 PM] ›     [VALIDATOR] ✖  error     Request body property status must be equal to one of the allowed values: placed, approved, delivered
[1:00:57 PM] ›     [NEGOTIATOR] ✔  success   Found response 400. I'll try with it.
[1:00:57 PM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 400
[1:00:57 PM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "400"
[1:00:57 PM] ›     [VALIDATOR] ✖  error     Violation: request.body.status Request body property status must be equal to one of the allowed values: placed, approved, delivered
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-05T13:01:07.623203" elapsed="0.000400"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-05T13:01:07.623798" elapsed="0.000200"/>
</kw>
<status status="PASS" start="2024-05-05T13:01:07.621116" elapsed="0.002973"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:01:07.620731" elapsed="0.003404"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-05T13:01:07.620521" elapsed="0.003649"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="restart_server">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:01:07.625867" level="INFO">Running command 'pkill prism &gt; /dev/null 2&gt;&amp;1; pgrep prism | xargs kill &gt; /dev/null 2&gt;&amp;1; killall prism &gt; /dev/null 2&gt;&amp;1'.</msg>
<arg>pkill prism &gt; /dev/null 2&gt;&amp;1; pgrep prism | xargs kill &gt; /dev/null 2&gt;&amp;1; killall prism &gt; /dev/null 2&gt;&amp;1</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:01:07.625151" elapsed="0.010836"/>
</kw>
<arg>Run</arg>
<arg>pkill prism &gt; /dev/null 2&gt;&amp;1; pgrep prism | xargs kill &gt; /dev/null 2&gt;&amp;1; killall prism &gt; /dev/null 2&gt;&amp;1</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:01:07.625010" elapsed="0.011071"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-05T13:01:37.638423" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-05T13:01:07.636964" elapsed="30.001699"/>
</kw>
<kw name="Start Prism Mock Server" owner="PrismMockServerLibrary">
<doc>Start the Prism tool and create a mock API server.</doc>
<status status="PASS" start="2024-05-05T13:01:37.639112" elapsed="5.008464"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-05T13:02:12.649584" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-05T13:01:42.647907" elapsed="30.001861"/>
</kw>
<status status="PASS" start="2024-05-05T13:01:07.624771" elapsed="65.025262"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:01:07.624458" elapsed="65.025692"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">restart_server</var>
<status status="PASS" start="2024-05-05T13:01:07.624340" elapsed="65.025882"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-05T13:02:12.652190" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-05T13:02:12.654372" level="INFO">${API_SERVER_LOG_CONTENTS} = [1:01:38 PM] › [CLI] …  awaiting  Starting Prism…
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=accusantium
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-05T13:02:12.651840" elapsed="0.002595"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-05T13:02:12.654894" level="INFO">[1:01:38 PM] › [CLI] …  awaiting  Starting Prism…
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=accusantium
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=sold&amp;status=pending&amp;status=sold
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=alias&amp;tags=in&amp;tags=et&amp;tags=quasi&amp;tags=aliquam
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/7420327266082805
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/7078807952806001
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[1:01:38 PM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=pending&amp;status=pending&amp;status=pending&amp;status=pending
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=quasi&amp;tags=aliquid
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/1223426492679853
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-7336622695374739
[1:01:38 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/4895889618940665
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-3173064887290243/uploadImage
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/3
[1:01:38 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/1562676441816248
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=officiis&amp;password=ea
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/vel
[1:01:38 PM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/qui
[1:01:38 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/ut
[1:01:38 PM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-05T13:02:12.654649" elapsed="0.000533"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-05T13:02:12.655378" elapsed="0.000260"/>
</kw>
<status status="PASS" start="2024-05-05T13:02:12.651377" elapsed="0.004386"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:02:12.650691" elapsed="0.005259"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-05T13:02:12.650464" elapsed="0.005542"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_order_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-05T13:02:12.658751" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-05T13:02:12.657414" elapsed="0.001441"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:02:12.660419" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order/9" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:02:12.659355" elapsed="10.363489"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:02:12.659141" elapsed="10.363819"/>
</kw>
<arg>http://0.0.0.0:8080/store/order/9</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-05T13:02:12.657072" elapsed="10.365981"/>
</kw>
<status status="PASS" start="2024-05-05T13:02:12.656657" elapsed="10.366464"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:02:12.656279" elapsed="10.366889"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-05T13:02:12.656146" elapsed="10.367061"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-05T13:02:23.025094" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-05T13:02:23.026623" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"20...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-05T13:02:23.024925" elapsed="0.001743"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-05T13:02:23.027004" level="INFO">--------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"2019-08-24T14:15:22Z","status":"placed","complete":false}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10075 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10076 ms
Total:          10076 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-05T13:02:23.026840" elapsed="0.000225"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-05T13:02:23.027198" elapsed="0.000180"/>
</kw>
<status status="PASS" start="2024-05-05T13:02:23.024564" elapsed="0.002933"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:02:23.024196" elapsed="0.003452"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-05T13:02:23.024049" elapsed="0.003637"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_slow_close_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-05T13:02:23.028675" elapsed="5.014658"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-05T13:02:58.045338" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-05T13:02:28.043953" elapsed="30.001515"/>
</kw>
<kw name="Add Slow Close Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Slow Close Toxic to the Vegeta load tests. It will delay the TCP socket from closing until delay has elapsed.</doc>
<status status="PASS" start="2024-05-05T13:02:58.045678" elapsed="5.006229"/>
</kw>
<status status="PASS" start="2024-05-05T13:02:23.028179" elapsed="40.023923"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:02:23.027895" elapsed="40.024534"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_slow_close_then_send_user_get_request</var>
<status status="PASS" start="2024-05-05T13:02:23.027791" elapsed="40.024714"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-05T13:03:03.054071" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-05T13:03:03.056095" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"20...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-05T13:03:03.053844" elapsed="0.002439"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-05T13:03:03.056797" level="INFO">--------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"2019-08-24T14:15:22Z","status":"placed","complete":false}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10075 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10076 ms
Total:          10076 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-05T13:03:03.056563" elapsed="0.000339"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-05T13:03:03.057089" elapsed="0.000354"/>
</kw>
<status status="PASS" start="2024-05-05T13:03:03.053461" elapsed="0.004091"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:03:03.052907" elapsed="0.004703"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-05T13:03:03.052713" elapsed="0.004942"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_latency_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-05T13:03:03.058715" elapsed="5.015869"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-05T13:03:38.076126" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-05T13:03:08.074920" elapsed="30.001376"/>
</kw>
<kw name="Add Latency Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Latency Toxic to the Vegeta load tests. It will add a delay to all data going through the proxy.</doc>
<status status="PASS" start="2024-05-05T13:03:38.076589" elapsed="5.006675"/>
</kw>
<status status="PASS" start="2024-05-05T13:03:03.058342" elapsed="40.025163"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:03:03.057928" elapsed="40.025700"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_latency_then_send_user_get_request</var>
<status status="PASS" start="2024-05-05T13:03:03.057792" elapsed="40.025931"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-05T13:03:43.086305" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-05T13:03:43.090235" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"20...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-05T13:03:43.085935" elapsed="0.004370"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-05T13:03:43.090824" level="INFO">--------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"2019-08-24T14:15:22Z","status":"placed","complete":false}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10075 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10076 ms
Total:          10076 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-05T13:03:43.090568" elapsed="0.000344"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-05T13:03:43.091219" elapsed="0.000273"/>
</kw>
<status status="PASS" start="2024-05-05T13:03:43.085453" elapsed="0.006175"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:03:43.084474" elapsed="0.007226"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-05T13:03:43.084174" elapsed="0.007581"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_user_endpoint">
<kw name="Run HTTPStat POST Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-05T13:03:43.094278" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-05T13:03:43.093359" elapsed="0.001016"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:03:43.096211" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/user" -method "POST" -body '{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}' &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:03:43.094776" elapsed="10.334933"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:03:43.094565" elapsed="10.335380"/>
</kw>
<arg>http://0.0.0.0:8080/user</arg>
<arg>POST</arg>
<arg>'{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}'</arg>
<status status="PASS" start="2024-05-05T13:03:43.092935" elapsed="10.337149"/>
</kw>
<status status="PASS" start="2024-05-05T13:03:43.092600" elapsed="10.337573"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:03:43.092146" elapsed="10.338078"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_user_endpoint</var>
<status status="PASS" start="2024-05-05T13:03:43.091926" elapsed="10.338339"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-05T13:03:53.431609" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-05T13:03:53.433026" level="INFO">${API_SERVER_LOG_CONTENTS} = [1:01:38 PM] › [CLI] …  awaiting  Starting Prism…
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=accusantium
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-05T13:03:53.431419" elapsed="0.001654"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-05T13:03:53.433445" level="INFO">[1:01:38 PM] › [CLI] …  awaiting  Starting Prism…
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=accusantium
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=sold&amp;status=pending&amp;status=sold
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=alias&amp;tags=in&amp;tags=et&amp;tags=quasi&amp;tags=aliquam
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/7420327266082805
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/7078807952806001
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[1:01:38 PM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=pending&amp;status=pending&amp;status=pending&amp;status=pending
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=quasi&amp;tags=aliquid
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/1223426492679853
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-7336622695374739
[1:01:38 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/4895889618940665
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-3173064887290243/uploadImage
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/3
[1:01:38 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/1562676441816248
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=officiis&amp;password=ea
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/vel
[1:01:38 PM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/qui
[1:01:38 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/ut
[1:01:38 PM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
[1:02:12 PM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[1:02:12 PM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[1:02:12 PM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[1:02:12 PM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[1:03:43 PM] › [HTTP SERVER] post /user ℹ  info      Request received
[1:03:43 PM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[1:03:43 PM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[1:03:43 PM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-05T13:03:53.433247" elapsed="0.000964"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-05T13:03:53.434418" elapsed="0.000199"/>
</kw>
<status status="PASS" start="2024-05-05T13:03:53.431102" elapsed="0.003599"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:03:53.430695" elapsed="0.004051"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-05T13:03:53.430534" elapsed="0.004246"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint_with_fuzzed_data">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:03:53.436739" level="INFO">Running command 'echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; /tests/resources/mutational-fuzz-data-order-test.dat'.</msg>
<arg>echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:03:53.435724" elapsed="0.026170"/>
</kw>
<arg>Run</arg>
<arg>echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:03:53.435568" elapsed="0.026425"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:03:53.463548" level="INFO">Running command 'httpstat -o /tests/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @/tests/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order 2&gt;&amp;1'.</msg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:03:53.462330" elapsed="10.017195"/>
</kw>
<arg>Run</arg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:03:53.462160" elapsed="10.017511"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:04:03.481694" level="INFO">Running command 'TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:04:03.480235" elapsed="0.007680"/>
</kw>
<arg>Run</arg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:04:03.479935" elapsed="0.008117"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:04:03.489567" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:04:03.488682" elapsed="0.003121"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:04:03.488423" elapsed="0.003492"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:04:03.493240" level="INFO">Running command 'cat /tests/resources/mutational-fuzz-data-order-test.dat &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:04:03.492434" elapsed="0.005003"/>
</kw>
<arg>Run</arg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:04:03.492117" elapsed="0.005431"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:04:03.498776" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:04:03.498006" elapsed="0.002569"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:04:03.497786" elapsed="0.002883"/>
</kw>
<status status="PASS" start="2024-05-05T13:03:53.435292" elapsed="10.065461"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:03:53.434986" elapsed="10.065813"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint_with_fuzzed_data</var>
<status status="PASS" start="2024-05-05T13:03:53.434888" elapsed="10.065947"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-05T13:04:03.501817" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-05T13:04:03.502562" level="INFO">${API_SERVER_LOG_CONTENTS} = [1:01:38 PM] › [CLI] …  awaiting  Starting Prism…
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=accusantium
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-05T13:04:03.501612" elapsed="0.000987"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-05T13:04:03.502881" level="INFO">[1:01:38 PM] › [CLI] …  awaiting  Starting Prism…
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=accusantium
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=sold&amp;status=pending&amp;status=sold
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=alias&amp;tags=in&amp;tags=et&amp;tags=quasi&amp;tags=aliquam
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/7420327266082805
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/7078807952806001
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[1:01:38 PM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=pending&amp;status=pending&amp;status=pending&amp;status=pending
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=quasi&amp;tags=aliquid
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/1223426492679853
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-7336622695374739
[1:01:38 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/4895889618940665
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-3173064887290243/uploadImage
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/3
[1:01:38 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/1562676441816248
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=officiis&amp;password=ea
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/vel
[1:01:38 PM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/qui
[1:01:38 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/ut
[1:01:38 PM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
[1:02:12 PM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[1:02:12 PM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[1:02:12 PM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[1:02:12 PM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[1:03:43 PM] › [HTTP SERVER] post /user ℹ  info      Request received
[1:03:43 PM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[1:03:43 PM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[1:03:43 PM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-05T13:04:03.502733" elapsed="0.000270"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-05T13:04:03.503111" elapsed="0.000146"/>
</kw>
<status status="PASS" start="2024-05-05T13:04:03.501388" elapsed="0.001940"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:04:03.501088" elapsed="0.002279"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-05T13:04:03.500969" elapsed="0.002427"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_order_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-05T13:04:03.505743" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-05T13:04:03.505063" elapsed="0.000743"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:04:03.506718" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order/9" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:04:03.506079" elapsed="10.312997"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:04:03.505931" elapsed="10.313255"/>
</kw>
<arg>http://0.0.0.0:8080/store/order/9</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-05T13:04:03.504830" elapsed="10.314444"/>
</kw>
<status status="PASS" start="2024-05-05T13:04:03.504589" elapsed="10.314755"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:04:03.503717" elapsed="10.315675"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-05T13:04:03.503623" elapsed="10.315808"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-05T13:04:13.820740" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-05T13:04:13.822080" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"20...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-05T13:04:13.820542" elapsed="0.001582"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-05T13:04:13.822471" level="INFO">--------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"2019-08-24T14:15:22Z","status":"placed","complete":false}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10008 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10008 ms
Total:          10008 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-05T13:04:13.822303" elapsed="0.000320"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-05T13:04:13.822771" elapsed="0.000187"/>
</kw>
<status status="PASS" start="2024-05-05T13:04:13.820214" elapsed="0.002844"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:04:13.819822" elapsed="0.003285"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-05T13:04:13.819680" elapsed="0.003466"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_slow_close_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-05T13:04:13.823989" elapsed="5.014831"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-05T13:04:48.840978" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-05T13:04:18.839150" elapsed="30.001999"/>
</kw>
<kw name="Add Slow Close Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Slow Close Toxic to the Vegeta load tests. It will delay the TCP socket from closing until delay has elapsed.</doc>
<status status="PASS" start="2024-05-05T13:04:48.841451" elapsed="5.006268"/>
</kw>
<status status="PASS" start="2024-05-05T13:04:13.823761" elapsed="40.024085"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:04:13.823389" elapsed="40.024513"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_slow_close_then_send_user_get_request</var>
<status status="PASS" start="2024-05-05T13:04:13.823275" elapsed="40.024668"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-05T13:04:53.849135" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-05T13:04:53.850583" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"20...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-05T13:04:53.848899" elapsed="0.001733"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-05T13:04:53.851000" level="INFO">--------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"2019-08-24T14:15:22Z","status":"placed","complete":false}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10008 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10008 ms
Total:          10008 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-05T13:04:53.850812" elapsed="0.000251"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-05T13:04:53.851198" elapsed="0.000182"/>
</kw>
<status status="PASS" start="2024-05-05T13:04:53.848611" elapsed="0.002867"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:04:53.848252" elapsed="0.004136"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-05T13:04:53.848112" elapsed="0.004336"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_limited_bandwidth_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-05T13:04:53.853648" elapsed="5.014067"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-05T13:05:28.869886" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-05T13:04:58.868042" elapsed="30.002013"/>
</kw>
<kw name="Add Limited Bandwidth Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Limited Bandwidth Toxic to the Vegeta load tests. It will limit a connection to a maximum number of kilobytes per second.</doc>
<status status="PASS" start="2024-05-05T13:05:28.870436" elapsed="5.091189"/>
</kw>
<status status="PASS" start="2024-05-05T13:04:53.853163" elapsed="40.108768"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:04:53.852806" elapsed="40.109181"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_limited_bandwidth_then_send_user_get_request</var>
<status status="PASS" start="2024-05-05T13:04:53.852587" elapsed="40.109437"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-05T13:05:33.963112" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-05T13:05:33.965066" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"20...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-05T13:05:33.962974" elapsed="0.002130"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-05T13:05:33.965693" level="INFO">--------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"2019-08-24T14:15:22Z","status":"placed","complete":false}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10008 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10008 ms
Total:          10008 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-05T13:05:33.965439" elapsed="0.000302"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-05T13:05:33.965844" elapsed="0.000179"/>
</kw>
<status status="PASS" start="2024-05-05T13:05:33.962747" elapsed="0.003345"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:05:33.962286" elapsed="0.003842"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-05T13:05:33.962163" elapsed="0.004014"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint">
<kw name="Run HTTPStat POST Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-05T13:05:33.971388" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-05T13:05:33.970262" elapsed="0.001269"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:05:33.973347" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order" -method "POST" -body '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:05:33.972121" elapsed="10.345736"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:05:33.971805" elapsed="10.346169"/>
</kw>
<arg>http://0.0.0.0:8080/store/order</arg>
<arg>POST</arg>
<arg>'{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}'</arg>
<status status="PASS" start="2024-05-05T13:05:33.966860" elapsed="10.351206"/>
</kw>
<status status="PASS" start="2024-05-05T13:05:33.966658" elapsed="10.351481"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:05:33.966411" elapsed="10.351774"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-05T13:05:33.966326" elapsed="10.351897"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-05T13:05:44.319426" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-05T13:05:44.320732" level="INFO">${API_SERVER_LOG_CONTENTS} = [1:01:38 PM] › [CLI] …  awaiting  Starting Prism…
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=accusantium
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-05T13:05:44.319236" elapsed="0.001537"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-05T13:05:44.321090" level="INFO">[1:01:38 PM] › [CLI] …  awaiting  Starting Prism…
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=accusantium
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=sold&amp;status=pending&amp;status=sold
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=alias&amp;tags=in&amp;tags=et&amp;tags=quasi&amp;tags=aliquam
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/7420327266082805
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/7078807952806001
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[1:01:38 PM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=pending&amp;status=pending&amp;status=pending&amp;status=pending
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=quasi&amp;tags=aliquid
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/1223426492679853
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-7336622695374739
[1:01:38 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/4895889618940665
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-3173064887290243/uploadImage
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/3
[1:01:38 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/1562676441816248
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[1:01:38 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=officiis&amp;password=ea
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[1:01:38 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/vel
[1:01:38 PM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/qui
[1:01:38 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/ut
[1:01:38 PM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
[1:02:12 PM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[1:02:12 PM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[1:02:12 PM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[1:02:12 PM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[1:03:43 PM] › [HTTP SERVER] post /user ℹ  info      Request received
[1:03:43 PM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[1:03:43 PM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[1:03:43 PM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[1:04:03 PM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[1:04:03 PM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[1:04:03 PM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[1:04:03 PM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[1:05:34 PM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[1:05:34 PM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[1:05:34 PM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[1:05:34 PM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-05T13:05:44.320923" elapsed="0.001404"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-05T13:05:44.322552" elapsed="0.000341"/>
</kw>
<status status="PASS" start="2024-05-05T13:05:44.318994" elapsed="0.004005"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:05:44.318610" elapsed="0.004439"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-05T13:05:44.318461" elapsed="0.004625"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="restart_server">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:05:44.325045" level="INFO">Running command 'pkill prism &gt; /dev/null 2&gt;&amp;1; pgrep prism | xargs kill &gt; /dev/null 2&gt;&amp;1; killall prism &gt; /dev/null 2&gt;&amp;1'.</msg>
<arg>pkill prism &gt; /dev/null 2&gt;&amp;1; pgrep prism | xargs kill &gt; /dev/null 2&gt;&amp;1; killall prism &gt; /dev/null 2&gt;&amp;1</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:05:44.324304" elapsed="0.012939"/>
</kw>
<arg>Run</arg>
<arg>pkill prism &gt; /dev/null 2&gt;&amp;1; pgrep prism | xargs kill &gt; /dev/null 2&gt;&amp;1; killall prism &gt; /dev/null 2&gt;&amp;1</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:05:44.324064" elapsed="0.013297"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-05T13:06:14.338826" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-05T13:05:44.337542" elapsed="30.001521"/>
</kw>
<kw name="Start Prism Mock Server" owner="PrismMockServerLibrary">
<doc>Start the Prism tool and create a mock API server.</doc>
<status status="PASS" start="2024-05-05T13:06:14.339613" elapsed="5.007825"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-05T13:06:49.349519" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-05T13:06:19.347786" elapsed="30.001911"/>
</kw>
<status status="PASS" start="2024-05-05T13:05:44.323802" elapsed="65.026057"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:05:44.323452" elapsed="65.026495"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">restart_server</var>
<status status="PASS" start="2024-05-05T13:05:44.323318" elapsed="65.026778"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-05T13:06:49.352432" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-05T13:06:49.355067" level="INFO">${API_SERVER_LOG_CONTENTS} = [1:06:15 PM] › [CLI] …  awaiting  Starting Prism…
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=fugit
[1:06:15 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-05T13:06:49.352121" elapsed="0.003029"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-05T13:06:49.357151" level="INFO">[1:06:15 PM] › [CLI] …  awaiting  Starting Prism…
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=fugit
[1:06:15 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=sold&amp;status=pending&amp;status=sold&amp;status=sold
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=laboriosam&amp;tags=deserunt&amp;tags=natus&amp;tags=laborum
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/5640975833973161
[1:06:15 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/-2824433368478219
[1:06:15 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[1:06:15 PM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=available&amp;status=pending&amp;status=available&amp;status=sold
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=assumenda&amp;tags=veniam&amp;tags=voluptatem
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/4029229150574013
[1:06:15 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-7811990965091119
[1:06:15 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/-7372450002681531
[1:06:15 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/2062272346717061/uploadImage
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[1:06:15 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/2
[1:06:15 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/3398906007050600
[1:06:15 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[1:06:15 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[1:06:15 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=harum&amp;password=aliquam
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/quia
[1:06:15 PM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/doloremque
[1:06:15 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/et
[1:06:15 PM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-05T13:06:49.355441" elapsed="0.001890"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-05T13:06:49.357541" elapsed="0.000260"/>
</kw>
<status status="PASS" start="2024-05-05T13:06:49.351306" elapsed="0.006621"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:06:49.350558" elapsed="0.007440"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-05T13:06:49.350334" elapsed="0.007791"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_user_endpoint_with_fuzzed_data">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:06:49.361166" level="INFO">Running command 'echo '{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}' | radamsa &gt; /tests/resources/mutational-fuzz-data-user-test.dat'.</msg>
<arg>echo '{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-user-test.dat</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:06:49.359665" elapsed="0.012332"/>
</kw>
<arg>Run</arg>
<arg>echo '{"id": 1, "username": "user1", "firstName": "John", "lastName": "Doe", "email": "john.doe@example.com", "password": "123456", "phone": "1234567890", "userStatus": 1}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-user-test.dat</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:06:49.359431" elapsed="0.012683"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:06:49.373342" level="INFO">Running command 'httpstat -o /tests/resources/httpstat-response-mutational-fuzz-data-user-output.json -X POST -H 'Content-Type: application/json' -d @/tests/resources/mutational-fuzz-data-user-test.dat http://0.0.0.0:8080/user 2&gt;&amp;1'.</msg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-user-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-user-test.dat http://0.0.0.0:8080/user</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:06:49.372497" elapsed="10.066194"/>
</kw>
<arg>Run</arg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-user-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-user-test.dat http://0.0.0.0:8080/user</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:06:49.372306" elapsed="10.066528"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:06:59.440328" level="INFO">Running command 'TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-user-test.dat -- Logged this on... $TIMESTAMP :: ========" &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-user-endpoint.log'.</msg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-user-test.dat -- Logged this on... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:06:59.439345" elapsed="0.006326"/>
</kw>
<arg>Run</arg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-user-test.dat -- Logged this on... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:06:59.439109" elapsed="0.006659"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:06:59.447066" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-user-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:06:59.446143" elapsed="0.003341"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:06:59.445948" elapsed="0.003820"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:06:59.452518" level="INFO">Running command 'cat /tests/resources/mutational-fuzz-data-user-test.dat &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-user-endpoint.log'.</msg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-user-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:06:59.451233" elapsed="0.007495"/>
</kw>
<arg>Run</arg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-user-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:06:59.450976" elapsed="0.007869"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:06:59.460191" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-user-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:06:59.459234" elapsed="0.003438"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-user-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:06:59.459039" elapsed="0.003904"/>
</kw>
<status status="PASS" start="2024-05-05T13:06:49.359035" elapsed="10.104066"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:06:49.358454" elapsed="10.104704"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_user_endpoint_with_fuzzed_data</var>
<status status="PASS" start="2024-05-05T13:06:49.358301" elapsed="10.104894"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-05T13:06:59.464458" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-05T13:06:59.465293" level="INFO">${API_SERVER_LOG_CONTENTS} = [1:06:15 PM] › [CLI] …  awaiting  Starting Prism…
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=fugit
[1:06:15 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-05T13:06:59.464235" elapsed="0.001128"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-05T13:06:59.465845" level="INFO">[1:06:15 PM] › [CLI] …  awaiting  Starting Prism…
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=fugit
[1:06:15 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=sold&amp;status=pending&amp;status=sold&amp;status=sold
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=laboriosam&amp;tags=deserunt&amp;tags=natus&amp;tags=laborum
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/5640975833973161
[1:06:15 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/-2824433368478219
[1:06:15 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[1:06:15 PM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=available&amp;status=pending&amp;status=available&amp;status=sold
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=assumenda&amp;tags=veniam&amp;tags=voluptatem
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/4029229150574013
[1:06:15 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-7811990965091119
[1:06:15 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/-7372450002681531
[1:06:15 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/2062272346717061/uploadImage
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[1:06:15 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/2
[1:06:15 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/3398906007050600
[1:06:15 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[1:06:15 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[1:06:15 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=harum&amp;password=aliquam
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/quia
[1:06:15 PM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/doloremque
[1:06:15 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/et
[1:06:15 PM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
[1:06:49 PM] › [HTTP SERVER] post /user ℹ  info      Request received
[1:06:49 PM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[1:06:49 PM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[1:06:49 PM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-05T13:06:59.465602" elapsed="0.000357"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-05T13:06:59.466083" elapsed="0.000153"/>
</kw>
<status status="PASS" start="2024-05-05T13:06:59.463946" elapsed="0.002362"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:06:59.463487" elapsed="0.002860"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-05T13:06:59.463349" elapsed="0.003027"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_order_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-05T13:06:59.468058" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-05T13:06:59.467320" elapsed="0.000809"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:06:59.469225" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order/9" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:06:59.468508" elapsed="10.364178"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:06:59.468276" elapsed="10.364522"/>
</kw>
<arg>http://0.0.0.0:8080/store/order/9</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-05T13:06:59.467097" elapsed="10.365791"/>
</kw>
<status status="PASS" start="2024-05-05T13:06:59.466883" elapsed="10.366073"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:06:59.466562" elapsed="10.366441"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-05T13:06:59.466476" elapsed="10.366566"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-05T13:07:09.834232" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-05T13:07:09.835504" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"20...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-05T13:07:09.834065" elapsed="0.001481"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-05T13:07:09.835910" level="INFO">--------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"2019-08-24T14:15:22Z","status":"placed","complete":false}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10040 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10040 ms
Total:          10040 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-05T13:07:09.835742" elapsed="0.000225"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-05T13:07:09.836090" elapsed="0.000163"/>
</kw>
<status status="PASS" start="2024-05-05T13:07:09.833791" elapsed="0.002546"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:07:09.833335" elapsed="0.003046"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-05T13:07:09.833196" elapsed="0.003219"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint">
<kw name="Run HTTPStat POST Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-05T13:07:09.838181" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-05T13:07:09.837496" elapsed="0.000769"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:07:09.839438" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order" -method "POST" -body '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:07:09.838657" elapsed="10.321221"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:07:09.838411" elapsed="10.321584"/>
</kw>
<arg>http://0.0.0.0:8080/store/order</arg>
<arg>POST</arg>
<arg>'{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}'</arg>
<status status="PASS" start="2024-05-05T13:07:09.837216" elapsed="10.322873"/>
</kw>
<status status="PASS" start="2024-05-05T13:07:09.836979" elapsed="10.323182"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:07:09.836618" elapsed="10.323588"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-05T13:07:09.836523" elapsed="10.323722"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-05T13:07:20.161469" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-05T13:07:20.162721" level="INFO">${API_SERVER_LOG_CONTENTS} = [1:06:15 PM] › [CLI] …  awaiting  Starting Prism…
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=fugit
[1:06:15 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-05T13:07:20.161298" elapsed="0.001496"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-05T13:07:20.163127" level="INFO">[1:06:15 PM] › [CLI] …  awaiting  Starting Prism…
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=fugit
[1:06:15 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=sold&amp;status=pending&amp;status=sold&amp;status=sold
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=laboriosam&amp;tags=deserunt&amp;tags=natus&amp;tags=laborum
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/5640975833973161
[1:06:15 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/-2824433368478219
[1:06:15 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[1:06:15 PM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=available&amp;status=pending&amp;status=available&amp;status=sold
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=assumenda&amp;tags=veniam&amp;tags=voluptatem
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/4029229150574013
[1:06:15 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-7811990965091119
[1:06:15 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/-7372450002681531
[1:06:15 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/2062272346717061/uploadImage
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[1:06:15 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/2
[1:06:15 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/3398906007050600
[1:06:15 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[1:06:15 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[1:06:15 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=harum&amp;password=aliquam
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[1:06:15 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/quia
[1:06:15 PM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/doloremque
[1:06:15 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/et
[1:06:15 PM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
[1:06:49 PM] › [HTTP SERVER] post /user ℹ  info      Request received
[1:06:49 PM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[1:06:49 PM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[1:06:49 PM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[1:06:59 PM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[1:06:59 PM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[1:06:59 PM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[1:06:59 PM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[1:07:10 PM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[1:07:10 PM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[1:07:10 PM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[1:07:10 PM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-05T13:07:20.162953" elapsed="0.000859"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-05T13:07:20.163950" elapsed="0.000178"/>
</kw>
<status status="PASS" start="2024-05-05T13:07:20.161018" elapsed="0.003190"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:07:20.160549" elapsed="0.003703"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-05T13:07:20.160397" elapsed="0.003889"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="restart_server">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:07:20.166170" level="INFO">Running command 'pkill prism &gt; /dev/null 2&gt;&amp;1; pgrep prism | xargs kill &gt; /dev/null 2&gt;&amp;1; killall prism &gt; /dev/null 2&gt;&amp;1'.</msg>
<arg>pkill prism &gt; /dev/null 2&gt;&amp;1; pgrep prism | xargs kill &gt; /dev/null 2&gt;&amp;1; killall prism &gt; /dev/null 2&gt;&amp;1</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:07:20.165507" elapsed="0.012392"/>
</kw>
<arg>Run</arg>
<arg>pkill prism &gt; /dev/null 2&gt;&amp;1; pgrep prism | xargs kill &gt; /dev/null 2&gt;&amp;1; killall prism &gt; /dev/null 2&gt;&amp;1</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:07:20.165358" elapsed="0.012706"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-05T13:07:50.178487" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-05T13:07:20.178235" elapsed="30.000369"/>
</kw>
<kw name="Start Prism Mock Server" owner="PrismMockServerLibrary">
<doc>Start the Prism tool and create a mock API server.</doc>
<status status="PASS" start="2024-05-05T13:07:50.178804" elapsed="5.003752"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-05T13:08:25.184785" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-05T13:07:55.182808" elapsed="30.002154"/>
</kw>
<status status="PASS" start="2024-05-05T13:07:20.164910" elapsed="65.020311"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:07:20.164561" elapsed="65.020760"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">restart_server</var>
<status status="PASS" start="2024-05-05T13:07:20.164391" elapsed="65.021002"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-05T13:08:25.187393" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-05T13:08:25.189649" level="INFO">${API_SERVER_LOG_CONTENTS} = [1:07:51 PM] › [CLI] …  awaiting  Starting Prism…
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=id
[1:07:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-05T13:08:25.187093" elapsed="0.002619"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-05T13:08:25.190240" level="INFO">[1:07:51 PM] › [CLI] …  awaiting  Starting Prism…
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=id
[1:07:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=available&amp;status=pending&amp;status=pending&amp;status=sold
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=consectetur
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/7788892123839989
[1:07:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/-8956945487471823
[1:07:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[1:07:51 PM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=available
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=officia
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/-8065564305595647
[1:07:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-8376208490270191
[1:07:51 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/4081655487832205
[1:07:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-8098166017604071/uploadImage
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[1:07:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/1
[1:07:51 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/4074786884685356
[1:07:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[1:07:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[1:07:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=occaecati&amp;password=nesciunt
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/soluta
[1:07:51 PM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/explicabo
[1:07:51 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/qui
[1:07:51 PM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-05T13:08:25.189924" elapsed="0.001625"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-05T13:08:25.191764" elapsed="0.000275"/>
</kw>
<status status="PASS" start="2024-05-05T13:08:25.186542" elapsed="0.005744"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:08:25.185857" elapsed="0.006499"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-05T13:08:25.185631" elapsed="0.006780"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_order_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-05T13:08:25.195158" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-05T13:08:25.194040" elapsed="0.001219"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:08:25.196674" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order/9" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:08:25.195650" elapsed="10.377642"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:08:25.195444" elapsed="10.377965"/>
</kw>
<arg>http://0.0.0.0:8080/store/order/9</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-05T13:08:25.193585" elapsed="10.379915"/>
</kw>
<status status="PASS" start="2024-05-05T13:08:25.193139" elapsed="10.380440"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:08:25.192718" elapsed="10.380918"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-05T13:08:25.192570" elapsed="10.381104"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-05T13:08:35.574945" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-05T13:08:35.576399" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"20...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-05T13:08:35.574759" elapsed="0.001683"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-05T13:08:35.576784" level="INFO">--------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"2019-08-24T14:15:22Z","status":"placed","complete":false}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10077 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10077 ms
Total:          10078 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-05T13:08:35.576613" elapsed="0.000232"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-05T13:08:35.576977" elapsed="0.000309"/>
</kw>
<status status="PASS" start="2024-05-05T13:08:35.574430" elapsed="0.002961"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:08:35.573972" elapsed="0.003524"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-05T13:08:35.573830" elapsed="0.003738"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_limited_bandwidth_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-05T13:08:35.579072" elapsed="5.016429"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-05T13:09:10.597326" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-05T13:08:40.595862" elapsed="30.001617"/>
</kw>
<kw name="Add Limited Bandwidth Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Limited Bandwidth Toxic to the Vegeta load tests. It will limit a connection to a maximum number of kilobytes per second.</doc>
<status status="PASS" start="2024-05-05T13:09:10.597744" elapsed="5.006585"/>
</kw>
<status status="PASS" start="2024-05-05T13:08:35.578823" elapsed="40.025704"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:08:35.578505" elapsed="40.026118"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_limited_bandwidth_then_send_user_get_request</var>
<status status="PASS" start="2024-05-05T13:08:35.578386" elapsed="40.026354"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-05T13:09:15.606921" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-05T13:09:15.609382" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"20...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-05T13:09:15.606632" elapsed="0.002809"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-05T13:09:15.610035" level="INFO">--------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"2019-08-24T14:15:22Z","status":"placed","complete":false}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10077 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10077 ms
Total:          10078 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-05T13:09:15.609672" elapsed="0.000453"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-05T13:09:15.610312" elapsed="0.000253"/>
</kw>
<status status="PASS" start="2024-05-05T13:09:15.606084" elapsed="0.004616"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:09:15.605342" elapsed="0.005425"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-05T13:09:15.605084" elapsed="0.005737"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="add_toxiproxy_slow_close_then_send_user_get_request">
<kw name="Remove All Three Toxics" owner="ToxiproxyChaosTestLibrary">
<doc>Remove all three toxics from the exploratory-testing-proxy.</doc>
<status status="PASS" start="2024-05-05T13:09:15.612120" elapsed="5.020131"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-05-05T13:09:50.633834" level="INFO">Slept 30 seconds.</msg>
<arg>30 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-05-05T13:09:20.632589" elapsed="30.001432"/>
</kw>
<kw name="Add Slow Close Toxic" owner="ToxiproxyChaosTestLibrary">
<doc>Add the Slow Close Toxic to the Vegeta load tests. It will delay the TCP socket from closing until delay has elapsed.</doc>
<status status="PASS" start="2024-05-05T13:09:50.634411" elapsed="5.005946"/>
</kw>
<status status="PASS" start="2024-05-05T13:09:15.611678" elapsed="40.028981"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:09:15.611199" elapsed="40.029588"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">add_toxiproxy_slow_close_then_send_user_get_request</var>
<status status="PASS" start="2024-05-05T13:09:15.610980" elapsed="40.029902"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-05T13:09:55.643624" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-05T13:09:55.646448" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"20...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-05T13:09:55.643240" elapsed="0.003284"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-05T13:09:55.647073" level="INFO">--------------
URL: http://0.0.0.0:8080/store/order/9
Method: GET
Status Code: 200
--------------
Response Body:
{"id":-9007199254740991,"petId":-9007199254740991,"quantity":-2147483648,"shipDate":"2019-08-24T14:15:22Z","status":"placed","complete":false}
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10077 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10077 ms
Total:          10078 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-05T13:09:55.646829" elapsed="0.000331"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-05T13:09:55.647345" elapsed="0.000319"/>
</kw>
<status status="PASS" start="2024-05-05T13:09:55.642756" elapsed="0.005040"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:09:55.641669" elapsed="0.006196"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-05T13:09:55.641262" elapsed="0.006656"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint">
<kw name="Run HTTPStat POST Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-05T13:09:55.650736" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-05T13:09:55.649609" elapsed="0.002149"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:09:55.653254" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/store/order" -method "POST" -body '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:09:55.652173" elapsed="10.330141"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" -body ${REQUEST_BODY} &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:09:55.651959" elapsed="10.330474"/>
</kw>
<arg>http://0.0.0.0:8080/store/order</arg>
<arg>POST</arg>
<arg>'{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}'</arg>
<status status="PASS" start="2024-05-05T13:09:55.649103" elapsed="10.333425"/>
</kw>
<status status="PASS" start="2024-05-05T13:09:55.648734" elapsed="10.333871"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:09:55.648233" elapsed="10.334419"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint</var>
<status status="PASS" start="2024-05-05T13:09:55.648081" elapsed="10.334608"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-05T13:10:05.984004" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-05T13:10:05.985302" level="INFO">${API_SERVER_LOG_CONTENTS} = [1:07:51 PM] › [CLI] …  awaiting  Starting Prism…
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=id
[1:07:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-05T13:10:05.983779" elapsed="0.001571"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-05T13:10:05.985702" level="INFO">[1:07:51 PM] › [CLI] …  awaiting  Starting Prism…
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=id
[1:07:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=available&amp;status=pending&amp;status=pending&amp;status=sold
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=consectetur
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/7788892123839989
[1:07:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/-8956945487471823
[1:07:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[1:07:51 PM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=available
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=officia
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/-8065564305595647
[1:07:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-8376208490270191
[1:07:51 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/4081655487832205
[1:07:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-8098166017604071/uploadImage
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[1:07:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/1
[1:07:51 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/4074786884685356
[1:07:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[1:07:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[1:07:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=occaecati&amp;password=nesciunt
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/soluta
[1:07:51 PM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/explicabo
[1:07:51 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/qui
[1:07:51 PM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
[1:08:25 PM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[1:08:25 PM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[1:08:25 PM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[1:08:25 PM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[1:09:55 PM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[1:09:55 PM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[1:09:55 PM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[1:09:55 PM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-05T13:10:05.985519" elapsed="0.000324"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-05T13:10:05.985980" elapsed="0.000210"/>
</kw>
<status status="PASS" start="2024-05-05T13:10:05.983388" elapsed="0.002920"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:10:05.983013" elapsed="0.003347"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-05T13:10:05.982841" elapsed="0.003552"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_post_request_to_order_endpoint_with_fuzzed_data">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:10:05.988065" level="INFO">Running command 'echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; /tests/resources/mutational-fuzz-data-order-test.dat'.</msg>
<arg>echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:10:05.987363" elapsed="0.013972"/>
</kw>
<arg>Run</arg>
<arg>echo '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | radamsa &gt; ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:10:05.987146" elapsed="0.014825"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:10:06.003180" level="INFO">Running command 'httpstat -o /tests/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @/tests/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order 2&gt;&amp;1'.</msg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:10:06.002327" elapsed="10.023359"/>
</kw>
<arg>Run</arg>
<arg>httpstat -o ${EXECDIR}/resources/httpstat-response-mutational-fuzz-data-order-output.json -X POST -H 'Content-Type: application/json' -d @${EXECDIR}/resources/mutational-fuzz-data-order-test.dat http://0.0.0.0:8080/store/order</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:10:06.002151" elapsed="10.023701"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:10:16.027408" level="INFO">Running command 'TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:10:16.026316" elapsed="0.005491"/>
</kw>
<arg>Run</arg>
<arg>TIMESTAMP=$(date); echo "======== :: Fuzz Test Data Tracker for mutational-fuzz-data-order-test.dat -- Logged this on.... $TIMESTAMP :: ========" &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:10:16.026080" elapsed="0.005822"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:10:16.033242" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:10:16.032409" elapsed="0.003172"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:10:16.032090" elapsed="0.003625"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:10:16.036794" level="INFO">Running command 'cat /tests/resources/mutational-fuzz-data-order-test.dat &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:10:16.036080" elapsed="0.004878"/>
</kw>
<arg>Run</arg>
<arg>cat ${EXECDIR}/resources/mutational-fuzz-data-order-test.dat &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:10:16.035894" elapsed="0.005156"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:10:16.042410" level="INFO">Running command 'echo " " &gt;&gt; /tests/results/mutational-fuzz-data-targeted-at-order-endpoint.log'.</msg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:10:16.041508" elapsed="0.002812"/>
</kw>
<arg>Run</arg>
<arg>echo " " &gt;&gt; ${EXECDIR}/results/mutational-fuzz-data-targeted-at-order-endpoint.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:10:16.041215" elapsed="0.003193"/>
</kw>
<status status="PASS" start="2024-05-05T13:10:05.986901" elapsed="10.057579"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:10:05.986600" elapsed="10.057922"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_post_request_to_order_endpoint_with_fuzzed_data</var>
<status status="PASS" start="2024-05-05T13:10:05.986500" elapsed="10.058053"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_server_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-05T13:10:16.045435" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/api-application.log"&gt;/tests/resources/api-application.log&lt;/a&gt;'.</msg>
<msg time="2024-05-05T13:10:16.046310" level="INFO">${API_SERVER_LOG_CONTENTS} = [1:07:51 PM] › [CLI] …  awaiting  Starting Prism…
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=id
[1:07:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010...</msg>
<var>${API_SERVER_LOG_CONTENTS}</var>
<arg>${EXECDIR}/resources/api-application.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-05T13:10:16.045306" elapsed="0.001046"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-05T13:10:16.046752" level="INFO">[1:07:51 PM] › [CLI] …  awaiting  Starting Prism…
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets?name=id
[1:07:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByStatus?status=available&amp;status=pending&amp;status=pending&amp;status=sold
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/findByTags?tags=consectetur
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/no_auth/pets/7788892123839989
[1:07:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/no_auth/pets/-8956945487471823
[1:07:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets
[1:07:51 PM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/pets
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByStatus?status=available
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/findByTags?tags=officia
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/pets/-8065564305595647
[1:07:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-8376208490270191
[1:07:51 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/pets/4081655487832205
[1:07:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/pets/-8098166017604071/uploadImage
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/inventory
[1:07:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/store/order
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/store/order/1
[1:07:51 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/store/order/4074786884685356
[1:07:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user
[1:07:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithArray
[1:07:51 PM] › [CLI] ℹ  info      POST       http://0.0.0.0:4010/user/createWithList
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/login?username=occaecati&amp;password=nesciunt
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/logout
[1:07:51 PM] › [CLI] ℹ  info      GET        http://0.0.0.0:4010/user/soluta
[1:07:51 PM] › [CLI] ℹ  info      PUT        http://0.0.0.0:4010/user/explicabo
[1:07:51 PM] › [CLI] ℹ  info      DELETE     http://0.0.0.0:4010/user/qui
[1:07:51 PM] › [CLI] ▶  start     Prism is listening on http://0.0.0.0:4010
[1:08:25 PM] › [HTTP SERVER] get /store/order/9 ℹ  info      Request received
[1:08:25 PM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[1:08:25 PM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[1:08:25 PM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[1:09:55 PM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[1:09:55 PM] ›     [VALIDATOR] ✔  success   The request passed the validation rules. Looking for the best response
[1:09:55 PM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 200
[1:09:55 PM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "200"
[1:10:06 PM] › [HTTP SERVER] post /store/order ℹ  info      Request received
[1:10:06 PM] ›     [VALIDATOR] ⚠  warning   Request did not pass the validation rules
[1:10:06 PM] ›     [VALIDATOR] ✖  error     Request body property shipDate must match format "date-time"
[1:10:06 PM] ›     [NEGOTIATOR] ✔  success   Found response 400. I'll try with it.
[1:10:06 PM] ›     [NEGOTIATOR] ✔  success   Responding with the requested status code 400
[1:10:06 PM] ›     [NEGOTIATOR] ℹ  info      &gt; Responding with "400"
[1:10:06 PM] ›     [VALIDATOR] ✖  error     Violation: request.body.shipDate Request body property shipDate must match format "date-time"
</msg>
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-05T13:10:16.046581" elapsed="0.000925"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${API_SERVER_LOG_CONTENTS}</arg>
<arg>UnhandledPromiseRejectionWarning</arg>
<arg>Unhandled</arg>
<arg>ERR_INVALID_CHAR</arg>
<arg>rejection</arg>
<arg>exception</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-05T13:10:16.047653" elapsed="0.000177"/>
</kw>
<status status="PASS" start="2024-05-05T13:10:16.045083" elapsed="0.002823"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:10:16.044796" elapsed="0.003151"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_server_log_files</var>
<status status="PASS" start="2024-05-05T13:10:16.044687" elapsed="0.003291"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="send_get_request_to_pets_endpoint">
<kw name="Run HTTPStat GET Request">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-05T13:10:16.049883" level="INFO" html="true">Removed file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-05T13:10:16.049141" elapsed="0.000807"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:10:16.051017" level="INFO">Running command 'go run httpstat-test-runner.go -url "http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available" -method "GET" &gt; /tests/resources/httpstat-graphwalker-response-output.log'.</msg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:10:16.050222" elapsed="10.310093"/>
</kw>
<arg>Run</arg>
<arg>go run httpstat-test-runner.go -url "${TARGET_URL}" -method "${REQUEST_METHOD}" &gt; ${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-05-05T13:10:16.050079" elapsed="10.310342"/>
</kw>
<arg>http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-05T13:10:16.048905" elapsed="10.311679"/>
</kw>
<status status="PASS" start="2024-05-05T13:10:16.048508" elapsed="10.312137"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:10:16.048174" elapsed="10.312513"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">send_get_request_to_pets_endpoint</var>
<status status="PASS" start="2024-05-05T13:10:16.048077" elapsed="10.312644"/>
</iter>
<iter>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="check_api_response_log_files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-05-05T13:10:26.361890" level="INFO" html="true">Getting file '&lt;a href="file:///tests/resources/httpstat-graphwalker-response-output.log"&gt;/tests/resources/httpstat-graphwalker-response-output.log&lt;/a&gt;'.</msg>
<msg time="2024-05-05T13:10:26.362985" level="INFO">${HTTPSTAT_RESPONSE_CONTENTS} = --------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-900719925474099...</msg>
<var>${HTTPSTAT_RESPONSE_CONTENTS}</var>
<arg>${EXECDIR}/resources/httpstat-graphwalker-response-output.log</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-05-05T13:10:26.361738" elapsed="0.001283"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-05T13:10:26.363318" level="INFO">--------------
URL: http://0.0.0.0:8080/no_auth/pets/findByStatus?status=available
Method: GET
Status Code: 200
--------------
Response Body:
[{"id":-9007199254740991,"category":{"id":-9007199254740991,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":-9007199254740991,"name":"string"}],"status":"available"}]
--------------
Metrics:
DNS lookup:           0 ms
TCP connection:       0 ms
TLS handshake:        0 ms
Server processing: 10018 ms
Content transfer:     0 ms

Name Lookup:       0 ms
Connect:           0 ms
Pre Transfer:      0 ms
Start Transfer: 10018 ms
Total:          10018 ms

</msg>
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-05T13:10:26.363179" elapsed="0.000842"/>
</kw>
<kw name="Should Not Contain Any" owner="BuiltIn">
<arg>${HTTPSTAT_RESPONSE_CONTENTS}</arg>
<arg>ERROR</arg>
<arg>error</arg>
<arg>errors</arg>
<arg>Not Allowed</arg>
<arg>no method</arg>
<arg>NO_METHOD_MATCHED_ERROR</arg>
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<status status="PASS" start="2024-05-05T13:10:26.364170" elapsed="0.000175"/>
</kw>
<status status="PASS" start="2024-05-05T13:10:26.361462" elapsed="0.002964"/>
</kw>
<arg>${GRAPHWALKER_PATH_KEYWORD}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-05-05T13:10:26.361002" elapsed="0.003464"/>
</kw>
<var name="${GRAPHWALKER_PATH_KEYWORD}">check_api_response_log_files</var>
<status status="PASS" start="2024-05-05T13:10:26.360857" elapsed="0.003641"/>
</iter>
<var>${GRAPHWALKER_PATH_KEYWORD}</var>
<value>@{GRAPHWALKER_CSV_LINES}</value>
<status status="PASS" start="2024-05-05T12:59:31.319381" elapsed="655.045153"/>
</for>
<arg>${GRAPHWALKER_PATH_LINES}</arg>
<status status="PASS" start="2024-05-05T12:59:31.319080" elapsed="655.045566"/>
</kw>
<arg>GraphwalkerPath.csv</arg>
<status status="PASS" start="2024-05-05T12:59:31.314009" elapsed="655.050684"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T13:10:26.365201" elapsed="0.000252"/>
</kw>
<status status="PASS" start="2024-05-05T13:10:26.364903" elapsed="0.000658"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-05T13:10:26.366257" elapsed="0.000098"/>
</kw>
<status status="PASS" start="2024-05-05T13:10:26.365914" elapsed="0.000589"/>
</kw>
<tag>Chaos_Tests</tag>
<tag>Exploratory_Tests</tag>
<tag>Model-Based_Tests</tag>
<tag>Run_All_Tests</tag>
<status status="PASS" start="2024-05-05T12:59:31.310750" elapsed="655.055863"/>
</test>
<test id="s1-t5" name="VEGETA CHAOS LOAD TESTS - RAMP UP RUNNER : Run the Vegeta Load Tests that connect to Toxiproxy and ramp up." line="50">
<kw name="Automation Section For Slack Notifications">
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-05-05T13:10:26.368512" level="INFO">${AUTOMATION_SECTION_NAME} = VEGETA CHAOS LOAD TESTS - RAMP UP</msg>
<arg>${AUTOMATION_SECTION_NAME}</arg>
<arg>${AUTOMATION_SECTION}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-05-05T13:10:26.368176" elapsed="0.000399"/>
</kw>
<arg>VEGETA CHAOS LOAD TESTS - RAMP UP</arg>
<status status="PASS" start="2024-05-05T13:10:26.367757" elapsed="0.000895"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T13:10:26.369136" elapsed="0.000212"/>
</kw>
<status status="PASS" start="2024-05-05T13:10:26.368865" elapsed="0.000639"/>
</kw>
<kw name="Run Ramp Up Load Test Connected To Toxiproxy">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-05T13:10:26.372040" level="INFO" html="true">File '&lt;a href="file:///tests/*.bin"&gt;/tests/*.bin&lt;/a&gt;' does not exist.</msg>
<arg>${EXECDIR}/*.bin</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-05T13:10:26.370078" elapsed="0.002134"/>
</kw>
<kw name="Run Vegeta Ramp Up Load Test" owner="VegetaLoadTestLibrary">
<msg time="2024-05-05T13:22:00.312928" level="INFO">Running Vegeta load test: go run vegeta-load-test-runner.go -rate 50 -duration 30s -url http://0.0.0.0:8080/user/vitae -method GET -output results-0.bin
Vegeta load test executed successfully: 

Vegeta Load Test Runner - Results


Requests: 1500
StatusCodes: map[200:1500]
Errors []
Success Rate: 100 %
Latencies (ms):
 - Mean: 10.008935994s
 - 50th percentile: 10.008663429s
 - 95th percentile: 10.011211414s
 - 99th percentile: 10.01634091s
 - Max: 10.073508106s



Running Vegeta load test: go run vegeta-load-test-runner.go -rate 100 -duration 60s -url http://0.0.0.0:8080/user/vitae -method GET -output results-1.bin
Vegeta load test executed successfully: 

Vegeta Load Test Runner - Results


Requests: 6000
StatusCodes: map[200:6000]
Errors []
Success Rate: 100 %
Latencies (ms):
 - Mean: 10.006163778s
 - 50th percentile: 10.005507256s
 - 95th percentile: 10.007474835s
 - 99th percentile: 10.018265721s
 - Max: 10.0862872s



Running Vegeta load test: go run vegeta-load-test-runner.go -rate 150 -duration 90s -url http://0.0.0.0:8080/user/vitae -method GET -output results-2.bin
Vegeta load test executed successfully: 

Vegeta Load Test Runner - Results


Requests: 13500
StatusCodes: map[200:13500]
Errors []
Success Rate: 100 %
Latencies (ms):
 - Mean: 10.005905165s
 - 50th percentile: 10.005199105s
 - 95th percentile: 10.007185039s
 - 99th percentile: 10.02727864s
 - Max: 10.120661901s



Running Vegeta load test: go run vegeta-load-test-runner.go -rate 200 -duration 120s -url http://0.0.0.0:8080/user/vitae -method GET -output results-3.bin
Vegeta load test executed successfully: 

Vegeta Load Test Runner - Results


Requests: 24000
StatusCodes: map[200:24000]
Errors []
Success Rate: 100 %
Latencies (ms):
 - Mean: 10.006003808s
 - 50th percentile: 10.005069068s
 - 95th percentile: 10.007272171s
 - 99th percentile: 10.037030489s
 - Max: 10.144447417s



Running Vegeta load test: go run vegeta-load-test-runner.go -rate 250 -duration 150s -url http://0.0.0.0:8080/user/vitae -method GET -output results-4.bin
Vegeta load test executed successfully: 

Vegeta Load Test Runner - Results


Requests: 37500
StatusCodes: map[200:37500]
Errors []
Success Rate: 100 %
Latencies (ms):
 - Mean: 10.006604248s
 - 50th percentile: 10.00489036s
 - 95th percentile: 10.013557716s
 - 99th percentile: 10.060334637s
 - Max: 10.114412795s



Running Vegeta load test: go run vegeta-load-test-runner.go -rate 300 -duration 180s -url http://0.0.0.0:8080/user/vitae -method GET -output results-5.bin
Vegeta load test executed successfully: 

Vegeta Load Test Runner - Results


Requests: 54000
StatusCodes: map[200:54000]
Errors []
Success Rate: 100 %
Latencies (ms):
 - Mean: 10.011758532s
 - 50th percentile: 10.005327815s
 - 95th percentile: 10.044097879s
 - 99th percentile: 10.113140778s
 - Max: 10.199296944s</msg>
<arg>http://0.0.0.0:8080/user/vitae</arg>
<arg>GET</arg>
<doc>Runs the vegeta-load-test-runner.go automation with a ramp up mechanism.</doc>
<status status="PASS" start="2024-05-05T13:10:26.372580" elapsed="693.940503"/>
</kw>
<kw name="Move Files" owner="OperatingSystem">
<msg time="2024-05-05T13:22:00.317811" level="INFO" html="true">Moved file from '&lt;a href="file:///tests/results-4.bin"&gt;/tests/results-4.bin&lt;/a&gt;' to '&lt;a href="file:///tests/results/results-4.bin"&gt;/tests/results/results-4.bin&lt;/a&gt;'.</msg>
<msg time="2024-05-05T13:22:00.319679" level="INFO" html="true">Moved file from '&lt;a href="file:///tests/results-5.bin"&gt;/tests/results-5.bin&lt;/a&gt;' to '&lt;a href="file:///tests/results/results-5.bin"&gt;/tests/results/results-5.bin&lt;/a&gt;'.</msg>
<msg time="2024-05-05T13:22:00.324786" level="INFO" html="true">Moved file from '&lt;a href="file:///tests/results-1.bin"&gt;/tests/results-1.bin&lt;/a&gt;' to '&lt;a href="file:///tests/results/results-1.bin"&gt;/tests/results/results-1.bin&lt;/a&gt;'.</msg>
<msg time="2024-05-05T13:22:00.326065" level="INFO" html="true">Moved file from '&lt;a href="file:///tests/results-0.bin"&gt;/tests/results-0.bin&lt;/a&gt;' to '&lt;a href="file:///tests/results/results-0.bin"&gt;/tests/results/results-0.bin&lt;/a&gt;'.</msg>
<msg time="2024-05-05T13:22:00.327596" level="INFO" html="true">Moved file from '&lt;a href="file:///tests/results-2.bin"&gt;/tests/results-2.bin&lt;/a&gt;' to '&lt;a href="file:///tests/results/results-2.bin"&gt;/tests/results/results-2.bin&lt;/a&gt;'.</msg>
<msg time="2024-05-05T13:22:00.328924" level="INFO" html="true">Moved file from '&lt;a href="file:///tests/results-3.bin"&gt;/tests/results-3.bin&lt;/a&gt;' to '&lt;a href="file:///tests/results/results-3.bin"&gt;/tests/results/results-3.bin&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/*.bin</arg>
<arg>${EXECDIR}/results/</arg>
<doc>Moves specified files to the target directory.</doc>
<status status="PASS" start="2024-05-05T13:22:00.313296" elapsed="0.015723"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Vegeta Load Test Completed</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T13:22:00.329193" elapsed="0.000206"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Check the results.bin files found in... ${EXECDIR}/results</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T13:22:00.329531" elapsed="0.000386"/>
</kw>
<status status="PASS" start="2024-05-05T13:10:26.369784" elapsed="693.960278"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T13:22:00.330946" elapsed="0.000207"/>
</kw>
<status status="PASS" start="2024-05-05T13:22:00.330452" elapsed="0.000810"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-05T13:22:00.332062" elapsed="0.000105"/>
</kw>
<status status="PASS" start="2024-05-05T13:22:00.331684" elapsed="0.000553"/>
</kw>
<tag>Chaos_Tests</tag>
<tag>Load_Tests</tag>
<tag>Run_All_Tests</tag>
<status status="PASS" start="2024-05-05T13:10:26.367034" elapsed="693.965320"/>
</test>
<test id="s1-t6" name="VEGETA CHAOS LOAD TESTS - CUSTOMIZED PARAMETERS RUNNER - POST REQUESTS : Run the Vegeta Load Tests with custom user defined parameters. This can run for seconds, minutes, hours, days etc. as long as the duration is given a valid amount of seconds." line="57">
<kw name="Automation Section For Slack Notifications">
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-05-05T13:22:00.335204" level="INFO">${AUTOMATION_SECTION_NAME} = VEGETA CHAOS LOAD TESTS - CUSTOMIZED PARAMETERS RUNNER - POST REQUESTS</msg>
<arg>${AUTOMATION_SECTION_NAME}</arg>
<arg>${AUTOMATION_SECTION}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-05-05T13:22:00.334596" elapsed="0.000670"/>
</kw>
<arg>VEGETA CHAOS LOAD TESTS - CUSTOMIZED PARAMETERS RUNNER - POST REQUESTS</arg>
<status status="PASS" start="2024-05-05T13:22:00.334132" elapsed="0.001214"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T13:22:00.336094" elapsed="0.000298"/>
</kw>
<status status="PASS" start="2024-05-05T13:22:00.335570" elapsed="0.000963"/>
</kw>
<kw name="Create Base64 JQ Output From Given String">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:22:00.339222" level="INFO">Running command 'echo -n '{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}' | jq -r '@base64' 2&gt;&amp;1'.</msg>
<msg time="2024-05-05T13:22:00.381874" level="INFO">${BASE64_OUTPUT} = eyJpZCI6OSwicGV0SWQiOjksInF1YW50aXR5IjoxLCJzaGlwRGF0ZSI6IjIwMjEtMDctMjlUMDA6MDA6MDAuMDAwWiIsInN0YXR1cyI6InBsYWNlZCIsImNvbXBsZXRlIjp0cnVlfQ==</msg>
<var>${BASE64_OUTPUT}</var>
<arg>echo -n '${STRING_INPUT}' | jq -r '@base64'</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:22:00.337487" elapsed="0.044434"/>
</kw>
<return>
<value>${BASE64_OUTPUT}</value>
<status status="PASS" start="2024-05-05T13:22:00.382008" elapsed="0.000060"/>
</return>
<msg time="2024-05-05T13:22:00.382219" level="INFO">${BASE64_OUTPUT} = eyJpZCI6OSwicGV0SWQiOjksInF1YW50aXR5IjoxLCJzaGlwRGF0ZSI6IjIwMjEtMDctMjlUMDA6MDA6MDAuMDAwWiIsInN0YXR1cyI6InBsYWNlZCIsImNvbXBsZXRlIjp0cnVlfQ==</msg>
<var>${BASE64_OUTPUT}</var>
<arg>{"id": 9, "petId": 9, "quantity": 1, "shipDate": "2021-07-29T00:00:00.000Z", "status": "placed", "complete": true}</arg>
<status status="PASS" start="2024-05-05T13:22:00.336987" elapsed="0.045256"/>
</kw>
<kw name="Run Custom Vegeta Load Test Connected To Toxiproxy">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-05T13:22:00.384714" level="INFO" html="true">File '&lt;a href="file:///tests/*.bin"&gt;/tests/*.bin&lt;/a&gt;' does not exist.</msg>
<arg>${EXECDIR}/*.bin</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-05T13:22:00.383016" elapsed="0.001847"/>
</kw>
<kw name="Run Specific Parameters Vegeta Load Test" owner="VegetaLoadTestLibrary">
<msg time="2024-05-05T13:22:20.716386" level="INFO">Running Vegeta load test: go run vegeta-load-test-runner.go -rate 100 -duration 10s -url http://0.0.0.0:8080/store/order -method POST -body eyJpZCI6OSwicGV0SWQiOjksInF1YW50aXR5IjoxLCJzaGlwRGF0ZSI6IjIwMjEtMDctMjlUMDA6MDA6MDAuMDAwWiIsInN0YXR1cyI6InBsYWNlZCIsImNvbXBsZXRlIjp0cnVlfQ== -output results.bin
Vegeta load test executed successfully: 

Vegeta Load Test Runner - Results


Requests: 1000
StatusCodes: map[400:1000]
Errors [400 Bad Request]
Success Rate: 0 %
Latencies (ms):
 - Mean: 10.008230015s
 - 50th percentile: 10.007242455s
 - 95th percentile: 10.010704502s
 - 99th percentile: 10.032634377s
 - Max: 10.088195083s</msg>
<arg>${USER_DEFINED_TEST_RATE}</arg>
<arg>${USER_DEFINED_TEST_DURATION}</arg>
<arg>${USER_DEFINED_URL}</arg>
<arg>${USER_DEFINED_METHOD}</arg>
<arg>${USER_DEFINED_TEST_REQUEST_BODY}</arg>
<arg>${USER_DEFINED_TEST_OUTPUT_FILE}</arg>
<doc>Runs the vegeta-load-test-runner.go automation with specific given parameters for more customization.</doc>
<status status="PASS" start="2024-05-05T13:22:00.385117" elapsed="20.331386"/>
</kw>
<kw name="Move Files" owner="OperatingSystem">
<msg time="2024-05-05T13:22:20.719858" level="INFO" html="true">Moved file from '&lt;a href="file:///tests/results.bin"&gt;/tests/results.bin&lt;/a&gt;' to '&lt;a href="file:///tests/results/results.bin"&gt;/tests/results/results.bin&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/*.bin</arg>
<arg>${EXECDIR}/results/</arg>
<doc>Moves specified files to the target directory.</doc>
<status status="PASS" start="2024-05-05T13:22:20.716734" elapsed="0.003225"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Vegeta Load Test Completed</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T13:22:20.720132" elapsed="0.000208"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Check the results.bin files found in... ${EXECDIR}/results</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T13:22:20.720464" elapsed="0.000534"/>
</kw>
<arg>http://0.0.0.0:8080/store/order</arg>
<arg>${BASE64_OUTPUT}</arg>
<arg>POST</arg>
<status status="PASS" start="2024-05-05T13:22:00.382509" elapsed="20.338650"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T13:22:20.723293" elapsed="0.000239"/>
</kw>
<status status="PASS" start="2024-05-05T13:22:20.722942" elapsed="0.000786"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-05T13:22:20.724524" elapsed="0.000111"/>
</kw>
<status status="PASS" start="2024-05-05T13:22:20.724076" elapsed="0.000635"/>
</kw>
<tag>Chaos_Tests</tag>
<tag>Load_Tests</tag>
<tag>Run_All_Tests</tag>
<status status="PASS" start="2024-05-05T13:22:00.332973" elapsed="20.391883"/>
</test>
<test id="s1-t7" name="VEGETA CHAOS LOAD TESTS - CUSTOMIZED PARAMETERS RUNNER - GET REQUESTS : Run the Vegeta Load Tests with custom user defined parameters. This can run for seconds, minutes, hours, days etc. as long as the duration is given a valid amount of seconds." line="65">
<kw name="Automation Section For Slack Notifications">
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-05-05T13:22:20.727201" level="INFO">${AUTOMATION_SECTION_NAME} = VEGETA CHAOS LOAD TESTS - CUSTOMIZED PARAMETERS RUNNER - GET REQUESTS</msg>
<arg>${AUTOMATION_SECTION_NAME}</arg>
<arg>${AUTOMATION_SECTION}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-05-05T13:22:20.726803" elapsed="0.000465"/>
</kw>
<arg>VEGETA CHAOS LOAD TESTS - CUSTOMIZED PARAMETERS RUNNER - GET REQUESTS</arg>
<status status="PASS" start="2024-05-05T13:22:20.726488" elapsed="0.000861"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T13:22:20.727886" elapsed="0.000178"/>
</kw>
<status status="PASS" start="2024-05-05T13:22:20.727565" elapsed="0.000606"/>
</kw>
<kw name="Run Custom Vegeta Load Test Connected To Toxiproxy">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-05-05T13:22:20.730942" level="INFO" html="true">File '&lt;a href="file:///tests/*.bin"&gt;/tests/*.bin&lt;/a&gt;' does not exist.</msg>
<arg>${EXECDIR}/*.bin</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-05-05T13:22:20.729407" elapsed="0.001641"/>
</kw>
<kw name="Run Specific Parameters Vegeta Load Test" owner="VegetaLoadTestLibrary">
<msg time="2024-05-05T13:22:41.103198" level="INFO">Running Vegeta load test: go run vegeta-load-test-runner.go -rate 100 -duration 10s -url http://0.0.0.0:8080/store/order/9 -method GET -body  -output results.bin
Vegeta load test executed successfully: 

Vegeta Load Test Runner - Results


Requests: 1000
StatusCodes: map[200:1000]
Errors []
Success Rate: 100 %
Latencies (ms):
 - Mean: 10.006609696s
 - 50th percentile: 10.006343295s
 - 95th percentile: 10.008069545s
 - 99th percentile: 10.011651567s
 - Max: 10.026984299s</msg>
<arg>${USER_DEFINED_TEST_RATE}</arg>
<arg>${USER_DEFINED_TEST_DURATION}</arg>
<arg>${USER_DEFINED_URL}</arg>
<arg>${USER_DEFINED_METHOD}</arg>
<arg>${USER_DEFINED_TEST_REQUEST_BODY}</arg>
<arg>${USER_DEFINED_TEST_OUTPUT_FILE}</arg>
<doc>Runs the vegeta-load-test-runner.go automation with specific given parameters for more customization.</doc>
<status status="PASS" start="2024-05-05T13:22:20.731198" elapsed="20.372123"/>
</kw>
<kw name="Move Files" owner="OperatingSystem">
<msg time="2024-05-05T13:22:41.107155" level="INFO" html="true">Moved file from '&lt;a href="file:///tests/results.bin"&gt;/tests/results.bin&lt;/a&gt;' to '&lt;a href="file:///tests/results/results.bin"&gt;/tests/results/results.bin&lt;/a&gt;'.</msg>
<arg>${EXECDIR}/*.bin</arg>
<arg>${EXECDIR}/results/</arg>
<doc>Moves specified files to the target directory.</doc>
<status status="PASS" start="2024-05-05T13:22:41.103633" elapsed="0.003635"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Vegeta Load Test Completed</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T13:22:41.107543" elapsed="0.000396"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Check the results.bin files found in... ${EXECDIR}/results</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T13:22:41.108209" elapsed="0.000440"/>
</kw>
<arg>http://0.0.0.0:8080/store/order/9</arg>
<arg>${EMPTY}</arg>
<arg>GET</arg>
<status status="PASS" start="2024-05-05T13:22:20.728445" elapsed="20.380355"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T13:22:41.109749" elapsed="0.000248"/>
</kw>
<status status="PASS" start="2024-05-05T13:22:41.109171" elapsed="0.000913"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-05T13:22:41.110882" elapsed="0.000108"/>
</kw>
<status status="PASS" start="2024-05-05T13:22:41.110407" elapsed="0.000659"/>
</kw>
<tag>Chaos_Tests</tag>
<tag>Load_Tests</tag>
<tag>Run_All_Tests</tag>
<status status="PASS" start="2024-05-05T13:22:20.725379" elapsed="20.385806"/>
</test>
<test id="s1-t8" name="GO TEST FUNCTIONAL TESTS - GET /USER/USERNAME : Analyze the Go Httpstat functional test for a GET request on the /user/vitae API endpoint" line="72">
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T13:22:41.112946" elapsed="0.000272"/>
</kw>
<status status="PASS" start="2024-05-05T13:22:41.112515" elapsed="0.000803"/>
</kw>
<kw name="Analyze Go Test Results">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:22:41.115316" level="INFO">Running command 'cat /tests/resources/go-test-console-results.log | grep vitae 2&gt;&amp;1'.</msg>
<msg time="2024-05-05T13:22:41.120409" level="INFO">${GO_TEST_OUTPUT_CONTENTS} =   "Output": "    --- PASS: TestHTTPRequests/GET_http://0.0.0.0:4010/user/vitae (0.10s)\n"</msg>
<var>${GO_TEST_OUTPUT_CONTENTS}</var>
<arg>cat ${EXECDIR}/resources/go-test-console-results.log | grep ${GO_TEST_OUTPUT_CHECK1}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:22:41.114229" elapsed="0.006220"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-05T13:22:41.120912" level="INFO">  "Output": "    --- PASS: TestHTTPRequests/GET_http://0.0.0.0:4010/user/vitae (0.10s)\n"</msg>
<arg>${GO_TEST_OUTPUT_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-05T13:22:41.120606" elapsed="0.000358"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${GO_TEST_OUTPUT_CONTENTS}</arg>
<arg>${GO_TEST_OUTPUT_CHECK2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-05T13:22:41.121083" elapsed="0.000165"/>
</kw>
<arg>vitae</arg>
<arg>PASS</arg>
<status status="PASS" start="2024-05-05T13:22:41.113691" elapsed="0.007620"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T13:22:41.122072" elapsed="0.000200"/>
</kw>
<status status="PASS" start="2024-05-05T13:22:41.121521" elapsed="0.000828"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-05T13:22:41.123090" elapsed="0.000095"/>
</kw>
<status status="PASS" start="2024-05-05T13:22:41.122753" elapsed="0.001190"/>
</kw>
<tag>Functional_Tests</tag>
<tag>Functional_Tests_Analysis</tag>
<tag>robot:skip-on-failure</tag>
<tag>Run_All_Tests</tag>
<status status="PASS" start="2024-05-05T13:22:41.111722" elapsed="0.012339"/>
</test>
<test id="s1-t9" name="GO TEST FUNCTIONAL TESTS - GET /NO_AUTH/PETS/FINDBYSTATUS : Analyze the Go Httpstat functional test for a GET request on the /no_auth/pets/findByStatus API endpoint" line="78">
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T13:22:41.125989" elapsed="0.000246"/>
</kw>
<status status="PASS" start="2024-05-05T13:22:41.125678" elapsed="0.000683"/>
</kw>
<kw name="Analyze Go Test Results">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:22:41.128029" level="INFO">Running command 'cat /tests/resources/go-test-console-results.log | grep findByStatus 2&gt;&amp;1'.</msg>
<msg time="2024-05-05T13:22:41.131304" level="INFO">${GO_TEST_OUTPUT_CONTENTS} =   "Output": "    --- PASS: TestHTTPRequests/GET_http://0.0.0.0:4010/no_auth/pets/findByStatus?status=available (0.02s)\n"</msg>
<var>${GO_TEST_OUTPUT_CONTENTS}</var>
<arg>cat ${EXECDIR}/resources/go-test-console-results.log | grep ${GO_TEST_OUTPUT_CHECK1}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:22:41.127027" elapsed="0.004316"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-05T13:22:41.131785" level="INFO">  "Output": "    --- PASS: TestHTTPRequests/GET_http://0.0.0.0:4010/no_auth/pets/findByStatus?status=available (0.02s)\n"</msg>
<arg>${GO_TEST_OUTPUT_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-05T13:22:41.131630" elapsed="0.000201"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${GO_TEST_OUTPUT_CONTENTS}</arg>
<arg>${GO_TEST_OUTPUT_CHECK2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-05T13:22:41.131945" elapsed="0.000155"/>
</kw>
<arg>findByStatus</arg>
<arg>PASS</arg>
<status status="PASS" start="2024-05-05T13:22:41.126703" elapsed="0.005461"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T13:22:41.132770" elapsed="0.000221"/>
</kw>
<status status="PASS" start="2024-05-05T13:22:41.132497" elapsed="0.000576"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-05T13:22:41.134036" elapsed="0.000104"/>
</kw>
<status status="PASS" start="2024-05-05T13:22:41.133633" elapsed="0.000579"/>
</kw>
<tag>Functional_Tests</tag>
<tag>Functional_Tests_Analysis</tag>
<tag>robot:skip-on-failure</tag>
<tag>Run_All_Tests</tag>
<status status="PASS" start="2024-05-05T13:22:41.124677" elapsed="0.009651"/>
</test>
<test id="s1-t10" name="GO TEST FUNCTIONAL TESTS - GET /STORE/ORDER/NUMBER : Analyze the Go Httpstat functional test for a GET request on the /store/order/9 API endpoint" line="84">
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T13:22:41.135847" elapsed="0.000189"/>
</kw>
<status status="PASS" start="2024-05-05T13:22:41.135550" elapsed="0.000564"/>
</kw>
<kw name="Analyze Go Test Results">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:22:41.137334" level="INFO">Running command 'cat /tests/resources/go-test-console-results.log | grep store/order/9 2&gt;&amp;1'.</msg>
<msg time="2024-05-05T13:22:41.140197" level="INFO">${GO_TEST_OUTPUT_CONTENTS} =   "Output": "    --- PASS: TestHTTPRequests/GET_http://0.0.0.0:4010/store/order/9 (0.02s)\n"</msg>
<var>${GO_TEST_OUTPUT_CONTENTS}</var>
<arg>cat ${EXECDIR}/resources/go-test-console-results.log | grep ${GO_TEST_OUTPUT_CHECK1}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:22:41.136582" elapsed="0.003653"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-05T13:22:41.140535" level="INFO">  "Output": "    --- PASS: TestHTTPRequests/GET_http://0.0.0.0:4010/store/order/9 (0.02s)\n"</msg>
<arg>${GO_TEST_OUTPUT_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-05T13:22:41.140390" elapsed="0.000276"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${GO_TEST_OUTPUT_CONTENTS}</arg>
<arg>${GO_TEST_OUTPUT_CHECK2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-05T13:22:41.140799" elapsed="0.000169"/>
</kw>
<arg>store/order/9</arg>
<arg>PASS</arg>
<status status="PASS" start="2024-05-05T13:22:41.136310" elapsed="0.004742"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T13:22:41.141590" elapsed="0.000218"/>
</kw>
<status status="PASS" start="2024-05-05T13:22:41.141255" elapsed="0.000645"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-05T13:22:41.142583" elapsed="0.000098"/>
</kw>
<status status="PASS" start="2024-05-05T13:22:41.142207" elapsed="0.000540"/>
</kw>
<tag>Functional_Tests</tag>
<tag>Functional_Tests_Analysis</tag>
<tag>robot:skip-on-failure</tag>
<tag>Run_All_Tests</tag>
<status status="PASS" start="2024-05-05T13:22:41.134867" elapsed="0.007986"/>
</test>
<test id="s1-t11" name="GO TEST FUNCTIONAL TESTS - POST /STORE/ORDER : Analyze the Go Httpstat functional test for a POST request on the /store/order API endpoint. This will create a new order." line="90">
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T13:22:41.144980" elapsed="0.000224"/>
</kw>
<status status="PASS" start="2024-05-05T13:22:41.144584" elapsed="0.000710"/>
</kw>
<kw name="Analyze Go Test Results">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:22:41.146888" level="INFO">Running command 'cat /tests/resources/go-test-console-results.log | grep POST_http://0.0.0.0:4010/store/order 2&gt;&amp;1'.</msg>
<msg time="2024-05-05T13:22:41.151598" level="INFO">${GO_TEST_OUTPUT_CONTENTS} =   "Output": "    --- PASS: TestHTTPRequests/POST_http://0.0.0.0:4010/store/order (0.02s)\n"</msg>
<var>${GO_TEST_OUTPUT_CONTENTS}</var>
<arg>cat ${EXECDIR}/resources/go-test-console-results.log | grep ${GO_TEST_OUTPUT_CHECK1}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:22:41.146073" elapsed="0.005571"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-05T13:22:41.152328" level="INFO">  "Output": "    --- PASS: TestHTTPRequests/POST_http://0.0.0.0:4010/store/order (0.02s)\n"</msg>
<arg>${GO_TEST_OUTPUT_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-05T13:22:41.152070" elapsed="0.000358"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${GO_TEST_OUTPUT_CONTENTS}</arg>
<arg>${GO_TEST_OUTPUT_CHECK2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-05T13:22:41.152708" elapsed="0.000301"/>
</kw>
<arg>POST_http://0.0.0.0:4010/store/order</arg>
<arg>PASS</arg>
<status status="PASS" start="2024-05-05T13:22:41.145553" elapsed="0.008400"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T13:22:41.154709" elapsed="0.000789"/>
</kw>
<status status="PASS" start="2024-05-05T13:22:41.154229" elapsed="0.001396"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-05T13:22:41.156553" elapsed="0.000116"/>
</kw>
<status status="PASS" start="2024-05-05T13:22:41.156045" elapsed="0.000695"/>
</kw>
<tag>Functional_Tests</tag>
<tag>Functional_Tests_Analysis</tag>
<tag>robot:skip-on-failure</tag>
<tag>Run_All_Tests</tag>
<status status="PASS" start="2024-05-05T13:22:41.143660" elapsed="0.013224"/>
</test>
<test id="s1-t12" name="GO TEST FUNCTIONAL TESTS - POST /USER : Analyze the Go Httpstat functional test for a POST request on the /user API endpoint. This will create a new user." line="96">
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T13:22:41.159062" elapsed="0.000235"/>
</kw>
<status status="PASS" start="2024-05-05T13:22:41.158638" elapsed="0.000872"/>
</kw>
<kw name="Analyze Go Test Results">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-05-05T13:22:41.161459" level="INFO">Running command 'cat /tests/resources/go-test-console-results.log | grep POST_http://0.0.0.0:4010/user 2&gt;&amp;1'.</msg>
<msg time="2024-05-05T13:22:41.164839" level="INFO">${GO_TEST_OUTPUT_CONTENTS} =   "Output": "    --- PASS: TestHTTPRequests/POST_http://0.0.0.0:4010/user (0.02s)\n"</msg>
<var>${GO_TEST_OUTPUT_CONTENTS}</var>
<arg>cat ${EXECDIR}/resources/go-test-console-results.log | grep ${GO_TEST_OUTPUT_CHECK1}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-05-05T13:22:41.160340" elapsed="0.004538"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-05T13:22:41.165173" level="INFO">  "Output": "    --- PASS: TestHTTPRequests/POST_http://0.0.0.0:4010/user (0.02s)\n"</msg>
<arg>${GO_TEST_OUTPUT_CONTENTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-05T13:22:41.165028" elapsed="0.000191"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${GO_TEST_OUTPUT_CONTENTS}</arg>
<arg>${GO_TEST_OUTPUT_CHECK2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-05T13:22:41.165323" elapsed="0.000151"/>
</kw>
<arg>POST_http://0.0.0.0:4010/user</arg>
<arg>PASS</arg>
<status status="PASS" start="2024-05-05T13:22:41.159856" elapsed="0.005802"/>
</kw>
<kw name="Log Lines To Console">
<kw name="Log To Console" owner="BuiltIn">
<arg>...\n...\n...\n...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-05-05T13:22:41.166069" elapsed="0.000159"/>
</kw>
<status status="PASS" start="2024-05-05T13:22:41.165855" elapsed="0.000432"/>
</kw>
<kw name="Trigger Only After Failure" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<arg>Automation Failure Detected Notify Team</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-05-05T13:22:41.167287" elapsed="0.000137"/>
</kw>
<status status="PASS" start="2024-05-05T13:22:41.166779" elapsed="0.000724"/>
</kw>
<tag>Functional_Tests</tag>
<tag>Functional_Tests_Analysis</tag>
<tag>robot:skip-on-failure</tag>
<tag>Run_All_Tests</tag>
<status status="PASS" start="2024-05-05T13:22:41.157595" elapsed="0.010060"/>
</test>
<status status="PASS" start="2024-05-05T12:58:44.992910" elapsed="1436.175907"/>
</suite>
<statistics>
<total>
<stat pass="12" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="4" fail="0" skip="0">Chaos_Tests</stat>
<stat pass="1" fail="0" skip="0">Exploratory_Tests</stat>
<stat pass="5" fail="0" skip="0">Functional_Tests</stat>
<stat pass="5" fail="0" skip="0">Functional_Tests_Analysis</stat>
<stat pass="3" fail="0" skip="0">Load_Tests</stat>
<stat pass="1" fail="0" skip="0">Model-Based_Tests</stat>
<stat pass="12" fail="0" skip="0">Run_All_Tests</stat>
<stat pass="3" fail="0" skip="0">Tests_Setup</stat>
</tag>
<suite>
<stat pass="12" fail="0" skip="0" id="s1" name="Generic-Automation">Generic-Automation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
